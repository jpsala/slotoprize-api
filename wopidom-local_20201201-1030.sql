SET autocommit=0;SET GLOBAL log_bin_trust_function_creators = 1;SET unique_checks=0;SET foreign_key_checks=0;
SET autocommit=0;SET GLOBAL log_bin_trust_function_creators = 1;SET unique_checks=0;SET foreign_key_checks=0;
-- MariaDB dump 10.18  Distrib 10.5.8-MariaDB, for Linux (x86_64)
--
-- Host: localhost    Database: wopidom
-- ------------------------------------------------------
-- Server version	10.5.8-MariaDB

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `atlas`
--

DROP TABLE IF EXISTS `atlas`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `atlas` (
  `id` int(10) unsigned DEFAULT NULL,
  `name` tinytext DEFAULT NULL,
  `json` varchar(4369) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `atlas`
--

LOCK TABLES `atlas` WRITE;
/*!40000 ALTER TABLE `atlas` DISABLE KEYS */;
INSERT INTO `atlas` VALUES (NULL,'symbols','{\"name\":\"symbols\",\"textureUrl\":\"/atlas/symbols.png\",\"padding\":0,\"spritesData\":[{\"name\":\"blueberry\",\"coordinates\":{\"x\":0,\"y\":0,\"width\":256,\"height\":256}},{\"name\":\"cherry\",\"coordinates\":{\"x\":256,\"y\":0,\"width\":256,\"height\":256}},{\"name\":\"coin\",\"coordinates\":{\"x\":0,\"y\":256,\"width\":256,\"height\":256}},{\"name\":\"coinbag\",\"coordinates\":{\"x\":256,\"y\":256,\"width\":256,\"height\":256}},{\"name\":\"grape\",\"coordinates\":{\"x\":512,\"y\":0,\"width\":256,\"height\":256}},{\"name\":\"jackpot\",\"coordinates\":{\"x\":512,\"y\":256,\"width\":256,\"height\":256}},{\"name\":\"strawberry\",\"coordinates\":{\"x\":0,\"y\":512,\"width\":256,\"height\":256}},{\"name\":\"ticket\",\"coordinates\":{\"x\":256,\"y\":512,\"width\":256,\"height\":256}},{\"name\":\"spin\",\"coordinates\":{\"x\":512,\"y\":512,\"width\":256,\"height\":256}}],\"properties\":{\"width\":768,\"height\":768}}');
/*!40000 ALTER TABLE `atlas` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `card`
--

DROP TABLE IF EXISTS `card`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `card` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `card_set_id` int(10) unsigned NOT NULL,
  `texture_url` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `stars` int(11) NOT NULL DEFAULT 0,
  `thumb_url` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=33 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `card`
--

LOCK TABLES `card` WRITE;
/*!40000 ALTER TABLE `card` DISABLE KEYS */;
INSERT INTO `card` VALUES (30,27,'http://localhost/public/assets/cards/30_05225301.jpg',4,'http://localhost/public/assets/cards/thumb_30_03970621.jpg'),(31,27,'http://localhost/public/assets/cards/31_02032904.jpeg',3,'http://localhost/public/assets/cards/thumb_31_02637920.jpg'),(32,27,'http://localhost/public/assets/cards/32_09876612.jpg',3,'http://localhost/public/assets/cards/thumb_32_04493187.png');
/*!40000 ALTER TABLE `card` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `card_set`
--

DROP TABLE IF EXISTS `card_set`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `card_set` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `theme_color` varchar(80) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `reward_type` varchar(128) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `reward_amount` int(11) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=30 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `card_set`
--

LOCK TABLES `card_set` WRITE;
/*!40000 ALTER TABLE `card_set` DISABLE KEYS */;
INSERT INTO `card_set` VALUES (27,'aaa','coin',1);
/*!40000 ALTER TABLE `card_set` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `country`
--

DROP TABLE IF EXISTS `country`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `country` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(50) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `phone_prefix` varchar(10) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `language_id` int(10) unsigned DEFAULT NULL,
  `currency` varchar(25) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `texture_url` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `country_language_id_fk` (`language_id`),
  CONSTRAINT `country_language_id_fk` FOREIGN KEY (`language_id`) REFERENCES `language` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `country`
--

LOCK TABLES `country` WRITE;
/*!40000 ALTER TABLE `country` DISABLE KEYS */;
INSERT INTO `country` VALUES (3,'France','+33',NULL,NULL,NULL);
/*!40000 ALTER TABLE `country` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `daily_reward`
--

DROP TABLE IF EXISTS `daily_reward`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `daily_reward` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `type` tinytext COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `amount` smallint(6) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `daily_reward`
--

LOCK TABLES `daily_reward` WRITE;
/*!40000 ALTER TABLE `daily_reward` DISABLE KEYS */;
INSERT INTO `daily_reward` VALUES (1,'coin',5000),(2,'ticket',10),(3,'coin',15000),(4,'spin',20),(5,'ticket',20),(6,'coin',25000);
/*!40000 ALTER TABLE `daily_reward` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `event`
--

DROP TABLE IF EXISTS `event`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `event` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `eventType` varchar(55) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `name` varchar(55) COLLATE utf8mb4_unicode_ci DEFAULT 'NULL',
  `description` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `rule` varchar(85) COLLATE utf8mb4_unicode_ci NOT NULL,
  `duration` int(11) NOT NULL DEFAULT 0,
  `active` tinyint(1) NOT NULL DEFAULT 1,
  `popupMessage` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT '',
  `popupTextureUrl` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT '',
  `notificationMessage` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `notificationTextureUrl` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT '',
  `data` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL,
  `skinId` int(10) unsigned DEFAULT NULL,
  `devOnly` tinyint(1) DEFAULT 0,
  `multiplier` int(11) DEFAULT 1,
  `betPrice` int(11) DEFAULT 0,
  `particlesTextureUrl` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT '',
  PRIMARY KEY (`id`),
  KEY `event_skin_id_fk` (`skinId`),
  CONSTRAINT `event_skin_id_fk` FOREIGN KEY (`skinId`) REFERENCES `skin` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=97 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `event`
--

LOCK TABLES `event` WRITE;
/*!40000 ALTER TABLE `event` DISABLE KEYS */;
INSERT INTO `event` VALUES (1,'generic','Happy Hour','Doubles the gains in coins for the player','{\"type\":\"daily\",\"hours\":[{\"start\":\"08:02\"}]}',3600,0,'','','','',NULL,1,0,2,0,''),(71,'generic','Test Event','Notes','{\"type\":\"unique\",\"start\":\"2020-11-02 17:13:00\",\"end\":\"2020-11-03 11:00:10\"}',30,1,'','','','',NULL,6,0,6,0,''),(84,'raffle','Lemmon Juicer',NULL,'{ \"type\": \"cron\", \"rule\": \"0 20 19 30 OCT ? 2020\" }',0,1,'','','','','{\"id\":64}',NULL,0,1,0,''),(88,'raffle','Another Raffle',NULL,'{ \"type\": \"cron\", \"rule\": \"0 38 12 30 NOV ? 2020\" }',0,1,'','','','','{\"id\":68}',NULL,0,1,0,''),(94,'raffle','dfgbf',NULL,'{ \"type\": \"cron\", \"rule\": \"0 53 17 2 NOV ? 2020\" }',0,1,'','','','','{\"id\":74}',NULL,0,1,0,''),(96,'raffle','dfshgdf',NULL,'{ \"type\": \"cron\", \"rule\": \"0 56 17 2 NOV ? 2020\" }',0,1,'','','','','{\"id\":75}',NULL,0,1,0,'');
/*!40000 ALTER TABLE `event` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `game`
--

DROP TABLE IF EXISTS `game`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `game` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(70) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 ROW_FORMAT=DYNAMIC;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `game`
--

LOCK TABLES `game` WRITE;
/*!40000 ALTER TABLE `game` DISABLE KEYS */;
INSERT INTO `game` VALUES (1,'SlotoPrizes');
/*!40000 ALTER TABLE `game` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `game_user`
--

DROP TABLE IF EXISTS `game_user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `game_user` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `first_name` varchar(55) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `last_name` varchar(55) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `email` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `password` varchar(155) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `device_id` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT '',
  `created_at` datetime DEFAULT current_timestamp(),
  `modified_at` datetime DEFAULT current_timestamp(),
  `device_name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `device_model` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `device_plataform` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT '',
  `phone_number` varchar(20) COLLATE utf8mb4_unicode_ci DEFAULT '',
  `language_code` varchar(20) COLLATE utf8mb4_unicode_ci DEFAULT 'en-US',
  `address` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT '',
  `zip_code` varchar(30) COLLATE utf8mb4_unicode_ci DEFAULT '',
  `state` varchar(55) COLLATE utf8mb4_unicode_ci DEFAULT '',
  `country` varchar(55) COLLATE utf8mb4_unicode_ci DEFAULT '',
  `city` varchar(75) COLLATE utf8mb4_unicode_ci DEFAULT '',
  `title` varchar(128) COLLATE utf8mb4_unicode_ci DEFAULT '',
  `birth_date` date DEFAULT '1900-01-01',
  `sendWinJackpotEventWhenProfileFilled` int(10) unsigned DEFAULT NULL,
  `isDev` tinyint(1) DEFAULT 0,
  `banned` tinyint(1) DEFAULT 0,
  `adsFree` tinyint(1) NOT NULL DEFAULT 0,
  `tutorial_complete` tinyint(1) NOT NULL DEFAULT 0,
  `agreements` tinyint(1) DEFAULT 0,
  PRIMARY KEY (`id`),
  KEY `game_user_language_language_code_fk` (`language_code`),
  CONSTRAINT `game_user_language_language_code_fk` FOREIGN KEY (`language_code`) REFERENCES `language` (`language_code`) ON DELETE NO ACTION ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=667 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci AVG_ROW_LENGTH=8192 ROW_FORMAT=DYNAMIC;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `game_user`
--

LOCK TABLES `game_user` WRITE;
/*!40000 ALTER TABLE `game_user` DISABLE KEYS */;
INSERT INTO `game_user` VALUES (39,'One','O. One','101@gmail.com','','borrar1','2020-07-01 19:35:08','2020-07-01 19:35:08','Moto pepito','25a','Android','2223545','fr-FR','chaco 1134','B7600','','italy','mar del plata','Mr.','2000-10-02',NULL,1,0,0,0,0),(40,'','','','','borrar2','2020-07-02 17:30:45','2020-07-02 17:30:45','','','','','en-US','','','','','','','2020-10-02',10,0,0,0,1,0),(41,'','','','','borrar3','2020-07-07 13:46:00','2020-07-07 13:46:00','','','','','en-US','','','','','','','2020-10-02',NULL,0,0,0,1,0),(42,'','','','','borrar11','2020-07-09 03:39:03','2020-07-09 03:39:03','','','','','en-US','','','','','','','2020-10-02',NULL,0,0,0,1,0),(67,'','','','','0','2020-07-09 16:52:13','2020-07-09 16:52:13','','','','','en-US','','','','','','','2020-10-02',NULL,0,0,0,1,0),(73,'pepe','romay','','','borrar12','2020-07-10 10:25:42','2020-07-10 10:25:42','','','','','en-US','','','','','','','2020-10-02',NULL,0,0,0,1,0),(108,'','','','','borrar111','2020-07-10 21:43:32','2020-07-10 21:43:32','','','','','en-US','','','','','','','2020-10-02',NULL,0,0,0,1,0),(109,'','','','','borra','2020-07-10 21:44:23','2020-07-10 21:44:23','','','','','en-US','','','','','','','2020-10-02',NULL,0,0,0,1,0),(110,'','','','','borra1','2020-07-10 22:13:32','2020-07-10 22:13:32','','','','','en-US','','','','','','','2020-10-02',NULL,0,0,0,1,0),(111,'','','','','borrar13','2020-07-10 22:36:14','2020-07-10 22:36:14','','','','','en-US','','','','','','','2020-10-02',NULL,0,0,0,1,0),(579,'','','','','borrar4','2020-07-21 01:29:39','2020-07-21 01:29:39','','','','','en-US','','','','','','','2020-10-02',NULL,0,0,0,1,0),(580,'','','','','borrar5','2020-07-21 01:29:42','2020-07-21 01:29:42','','','','','en-US','','','','','','','2020-10-02',NULL,0,0,0,1,0),(581,'','','','','borrar6','2020-07-21 01:29:47','2020-07-21 01:29:47','','','','','en-US','','','','','','','2020-10-02',NULL,0,0,0,1,0),(582,'One','O. One','101@gmail.com','','101','2020-07-21 12:35:27','2020-07-21 12:35:27','Moto pepito  3','25a','Android2','2223545','fr-FR','chaco 1134','B7600','','italy','mar del plata','Mr.','1900-01-01',NULL,1,0,0,0,0),(583,'Marcos','Wopi','mail@novack.com.ar','','600bae2a730fc1ddb69117580b816ffc54bb15f8','2020-07-21 12:41:08','2020-07-21 12:41:08','ROHAN','System Product Name (System manufacturer)','WindowsEditor','92235188492','fr-FR','Chaco 1134','7600','State','France','Mar del Plata','Mr.','1900-01-01',NULL,0,0,0,1,1),(584,'Rodrigo','Laiz','mail@mail.com','','8195af6f8967b0587baac2babd874a60162890b5','2020-07-21 13:11:10','2020-07-21 13:11:10','DESKTOP-F69LGV7','System Product Name (System manufacturer)','','555','fr-FR','Goldman','75016','Agrigento','Italy','Sachs','','2020-10-02',NULL,0,0,0,1,0),(585,'Rodrigo','Laiz','laiz99@hotmail.com','','Removed_2','2020-07-22 13:22:16','2020-07-22 13:22:16','RODHULK','System Product Name (System manufacturer)','','','en-US','','','Buenos Aires','Italy','','','2020-10-02',NULL,0,0,0,1,0),(586,'macro','','','','8834393bd949ebd9e2aee79d15aa3e86','2020-07-22 14:55:11','2020-07-22 14:55:11','motorola one macro','motorola motorola one macro','','','en-US','','','Buenos Aires','Italy','','','2020-10-02',NULL,0,0,0,1,0),(587,'Samsung','galaxy','test1@7angels.com','','4a897db81b6f6178ccde81ea7aed6544','2020-07-22 14:56:44','2020-07-22 14:56:44','Rodrigo Laiz (Galaxy S5)','samsung SM-G900F','','','en-US','','','Agrigento','Italy','','','2020-10-02',NULL,1,0,0,1,0),(588,'Juan Pablo','Sala','','','df4e4207abd0d88e1afe1ca66bc792bd','2020-07-22 15:19:12','2020-07-22 15:19:12','Nexus 6P','Huawei Nexus 6P','','','es-ES','','','Buenos Aires','Italy','','','2020-10-02',NULL,0,0,0,1,0),(589,'','','','','F3D988B7-90EC-572C-A1FC-D44AF6D7BC84','2020-07-23 08:09:31','2020-07-23 08:09:31','','','','','en-US','','','','','','','2020-10-02',NULL,0,0,0,1,0),(590,'','','','','222dfg','2020-07-31 13:43:51','2020-07-31 13:43:51','','','','','en-US','','','','','','','2020-10-02',NULL,0,0,0,1,0),(591,'','','','','c28f7440a48a23cfded7f2807b6cddcc','2020-09-09 12:05:34','2020-09-09 12:05:34','','','','','en-US','','','','','','','2020-10-02',NULL,0,0,0,1,0),(592,'','','','','2850e10aa06d0ce7905d9fd30c5a99e1','2020-09-09 12:52:11','2020-09-09 12:52:11','','','','','en-US','','','','','','','2020-10-02',NULL,0,0,0,1,0),(593,'Marcos','Luis','mail+fbk@novack.com.ar','','694740da81b6d0b883ac9fd95702d5a8','2020-09-11 16:02:29','2020-09-11 16:02:29','motorola one macro','motorola motorola one macro','Android','','en-US','','','State','Pays','','','1900-01-01',10,0,0,0,1,0),(594,'','','','','borrar17','2020-09-11 16:42:49','2020-09-11 16:42:49','','','','','en-US','','','','','','','2020-10-02',NULL,0,0,0,1,0),(595,'','','','','583','2020-09-11 17:27:04','2020-09-11 17:27:04','','','','','en-US','','','','','','','2020-10-02',NULL,0,0,0,1,0),(596,'','','','','d0094143af887cf9f24e935e454d49f1','2020-09-14 15:54:28','2020-09-14 15:54:28','','','','','en-US','','','','','','','2020-10-02',NULL,0,0,0,1,0),(597,'','','','','4c82affcbd8026b650ef06f60ef96ac4','2020-09-16 17:11:31','2020-09-16 17:11:31','','','','','fr-FR','','','','','','','2020-10-02',NULL,0,0,0,1,0),(598,'','','','','7f8cff2db00f56e4da678f2367cfc93d','2020-09-16 17:23:47','2020-09-16 17:23:47','','','','','fr-FR','','','','','','','2020-10-02',NULL,0,0,0,1,0),(599,'','','','','38ffc46c0a47dea56958dd2dd9729bbc','2020-09-16 17:33:08','2020-09-16 17:33:08','','','','','fr-FR','','','','','','','2020-10-02',NULL,0,0,0,1,0),(600,'','','','','819a8e8637c32116e17c5c31e9803424','2020-09-16 20:03:32','2020-09-16 20:03:32','','','','','en-US','','','','','','','2020-10-02',10,0,0,0,1,0),(601,'','','','','469a2c82a67b0113c37ff39ad1750d0d','2020-09-16 20:04:01','2020-09-16 20:04:01','Nokia 1','HMD Global Nokia 1','','','en-US','','','Agrigento','Italy','','','2020-10-02',NULL,0,0,0,1,0),(602,'','','','','40818a38372e74465545d04b9753c5ad','2020-09-16 20:04:54','2020-09-16 20:04:54','','','','','en-US','','','','','','','2020-10-02',NULL,0,0,0,1,0),(603,'','','','','b3b549bdf3aae57d18b10b9d6b7faf7e','2020-09-16 20:05:10','2020-09-16 20:05:10','','','','','en-US','','','','','','','2020-10-02',NULL,0,0,0,1,0),(604,'','','','','e7dcf36da23853dd5dbef1a571cd2cff','2020-09-16 21:59:23','2020-09-16 21:59:23','','','','','en-US','','','','','','','2020-10-02',NULL,0,0,0,1,0),(605,'','','','','cfdb23a6d1a5a3731b989fd136b1180c','2020-09-16 21:59:25','2020-09-16 21:59:25','','','','','en-US','','','','','','','2020-10-02',NULL,0,0,0,1,0),(606,'','','','','7432369ca6eff26dd206bcead85d55eb','2020-09-16 22:53:29','2020-09-16 22:53:29','','','','','en-US','','','','','','','2020-10-02',NULL,0,0,0,1,0),(607,'','','','','4841d87167568f37be251274aec84d15','2020-09-16 22:53:39','2020-09-16 22:53:39','','','','','en-US','','','','','','','2020-10-02',NULL,0,0,0,1,0),(608,'','','','','936650174516857cddffa9c3afb0d0fd','2020-09-16 23:53:31','2020-09-16 23:53:31','','','','','en-US','','','','','','','2020-10-02',NULL,0,0,0,1,0),(609,'jp','last','','','c64207e2d34e0ca0d88957f0aee092f2','2020-09-18 12:39:47','2020-09-18 12:39:47','Nexus 6P','Huawei Nexus 6P','','','en-US','','','Agrigento','Italy','','','2020-10-02',10,0,0,0,1,0),(610,'Rodrigo','Laiz','rodlaiz@gmail.com','','8530218622c3c96a2f1709826276f260f89e4657','2020-09-21 14:09:33','2020-09-21 14:09:33','DESKTOP-F69LGV7','System Product Name (System manufacturer)','','650132338','en-US','9 rue de Civry','75016','State','France','Paris','Mr.','1978-04-04',NULL,0,0,0,1,1),(611,'Rodrigo','Laiz','','','Removed','2020-09-28 13:27:28','2020-09-28 13:27:28','OPPO Reno2 Z','OPPO CPH1951','','650132338','fr-FR','rue','7516','Agrigento','Italy','paris','','2020-10-02',NULL,0,0,0,1,0),(612,'Nathalie','chretien','nathalie@tagadamedia.com','','06f75c8817fad0d3e4209f9f666c9f73','2020-09-28 16:25:29','2020-09-28 16:25:29','X95','DOOGEE X95','','762858198','fr-FR','15 av beaucour','75008','Burgundy','France','paris','','2020-10-02',NULL,0,0,0,1,0),(613,'','','','','03b587786620cedd8c9e9654842a6d0b-old','2020-09-30 13:55:55','2020-09-30 13:55:55','OPPO Reno2 Z','OPPO CPH1951','','','fr-FR','','','Agrigento','Italy','','','2020-10-02',10,0,0,1,1,0),(614,'','','','','e538bd360d70a7e9420928d74fb1855264b57ada','2020-09-30 13:57:16','2020-09-30 13:57:16','RODHULK','System Product Name (System manufacturer)','','','en-US','','','Agrigento','Italy','','','2020-10-02',10,0,0,0,1,0),(615,'','','','','5dd3903c1003dd046abbd3abf43dcbea','2020-10-12 09:47:55','2020-10-12 09:47:55','','','','','en-US','','','','','','','2020-10-12',NULL,0,0,0,1,0),(616,'','','','','975ee47aa321507b2a785b252a90958d','2020-10-12 09:48:25','2020-10-12 09:48:25','Galaxy S9','samsung SM-G960U1','','','en-US','','','State','-','','-','1900-01-01',NULL,0,0,0,1,0),(617,'','','','','FC6F5577-6720-4663-9A1A-94D5E4AAC1E3','2020-10-15 08:57:51','2020-10-15 08:57:51','','','','','en-US','','','','','','','2020-10-15',NULL,0,0,0,1,0),(618,'','','','','412238C6-DB1E-48D0-A735-BD2EFA061036','2020-10-15 11:14:04','2020-10-15 11:14:04','','','','','en-US','','','','','','','2020-10-15',NULL,0,0,0,1,0),(619,'J','P','jpsala@gmail.com','','JP','2020-10-16 17:59:01','2020-10-16 17:59:01','JPDeviceName','JPDevice','devicePlataform!!!','2223545','en-US','lejos','B7600','','italy','mar del plata','Mr.','2000-10-02',NULL,1,0,0,1,0),(620,'','','','','borrar1111','2020-10-19 15:39:25','2020-10-19 15:39:25','','','','','en-US','','','','','','','1900-01-01',NULL,0,0,0,1,0),(621,'','','','','600bae2a730fc1ddb69117580b816ffc54bb15f8_M_old','2020-10-27 12:50:26','2020-10-27 12:50:26','','','','','fr-FR','','','','','','','1900-01-01',NULL,0,0,0,1,0),(622,'','','','','cbbb7f3efa7b639b477cff8e9a6f0f10','2020-10-27 19:12:16','2020-10-27 19:12:16','','','','','en-US','','','','','','','1900-01-01',NULL,0,0,0,1,0),(623,'','','','','c30f3a200f99274563f8eb67ae571fe4','2020-10-27 19:12:45','2020-10-27 19:12:45','','','','','fr-FR','','','','','','','1900-01-01',NULL,0,0,0,1,0),(624,'','','','','979d148d6cb09b8a757a418e2c782aae','2020-10-27 19:16:14','2020-10-27 19:16:14','','','','','fr-FR','','','','','','','1900-01-01',NULL,0,0,0,1,0),(625,'','','','','6955ae5702f42b0df67967dcb3edd992','2020-10-28 10:38:33','2020-10-28 10:38:33','','','','','en-US','','','','','','','1900-01-01',10,0,0,1,1,0),(626,'','','','','test_to_delete','2020-10-30 12:18:24','2020-10-30 12:18:24','','','','','en-US','','','','','','','1900-01-01',NULL,0,0,0,1,0),(627,'','','','','6A53D68A-0CF9-4AB4-9B35-6F2DECE20963','2020-10-30 12:21:23','2020-10-30 12:21:23','','','','','en-US','','','','','','','1900-01-01',NULL,0,0,0,1,0),(628,'','','','','4E6C86AE-899B-4C88-BE78-69315C33F7E8','2020-10-30 13:41:55','2020-10-30 13:41:55','','','','','en-US','','','','','','','1900-01-01',NULL,0,0,0,1,0),(629,'','','','','354376C1-FEE6-4474-A698-B7E9B820FB76','2020-10-30 14:28:42','2020-10-30 14:28:42','','','','','en-US','','','','','','','1900-01-01',NULL,0,0,0,1,0),(630,'','','','','72CC8E49-1D22-4CB6-A1EF-2295D0CA29E0','2020-10-30 15:03:38','2020-10-30 15:03:38','','','','','en-US','','','','','','','1900-01-01',NULL,0,0,0,1,0),(631,'','','','','11612478-79A9-478D-AB15-9B3523C2A56D','2020-10-30 16:11:37','2020-10-30 16:11:37','','','','','en-US','','','','','','','1900-01-01',NULL,0,0,0,1,0),(632,'','','','','ECBA72CB-7B95-416A-8334-CA06FCB71FE2','2020-10-30 16:28:36','2020-10-30 16:28:36','','','','','en-US','','','','','','','1900-01-01',NULL,0,0,0,1,0),(633,'','','','','7CE1A4B6-1FA5-416F-BB38-1BDFCF63CF90','2020-10-30 19:48:04','2020-10-30 19:48:04','','','','','fr-FR','','','','','','','1900-01-01',NULL,0,0,0,1,0),(634,'','','','','7B5222FA-6E31-4973-AFA0-AB793E9D7C85','2020-10-31 14:17:04','2020-10-31 14:17:04','','','','','en-US','','','','','','','1900-01-01',NULL,0,0,0,1,0),(635,'','','','','59442C96-B78F-47FC-86F6-6314608F7EA3','2020-11-02 10:48:36','2020-11-02 10:48:36','','','','','en-US','','','','','','','1900-01-01',NULL,0,0,0,1,0),(636,'','','','','312D38F6-580F-422E-BAC2-E9BE3E7C816F','2020-11-02 13:10:03','2020-11-02 13:10:03','','','','','en-US','','','','','','','1900-01-01',NULL,0,0,0,1,0),(637,'','','','','C5A7F65A-2C61-471D-8BC0-7B3288E67623','2020-11-02 13:51:19','2020-11-02 13:51:19','','','','','en-US','','','','','','','1900-01-01',NULL,0,0,0,1,0),(638,'','','','','31A4DB80-8058-41E6-9BE7-26BA0E3D9C89','2020-11-02 15:00:53','2020-11-02 15:00:53','','','','','en-US','','','','','','','1900-01-01',NULL,0,0,0,1,0),(639,'','','','','102','2020-11-02 16:46:45','2020-11-02 16:46:45','','','','','fr-FR','','','','','','','1900-01-01',NULL,0,0,0,1,0),(640,'','','','','103','2020-11-02 16:49:18','2020-11-02 16:49:18','','','','','en-US','','','','','','','1900-01-01',NULL,0,0,0,1,0),(641,'','','','','600bae2a730fc1ddb69117580b816ffc54bb15f8_M_old','2020-11-04 16:36:16','2020-11-04 16:36:16','ROHAN','System Product Name (System manufacturer)','WindowsEditor','','en-US','','','','','','','1900-01-01',10,0,0,0,1,0),(642,'','','','','39C69AA8-7351-4877-ABBE-1506236886CA','2020-11-05 00:29:44','2020-11-05 00:29:44','','','','','fr-FR','','','','','','','1900-01-01',NULL,0,0,0,1,0),(643,'','','','','5269C20E-858A-4DDC-8CBF-D023408B90E4','2020-11-05 00:40:25','2020-11-05 00:40:25','','','','','en-US','','','','','','','1900-01-01',NULL,0,0,0,1,0),(644,'','','','','71B455DA-C39F-4F57-A803-E59DB3F6D841','2020-11-05 02:17:51','2020-11-05 02:17:51','','','','','fr-FR','','','','','','','1900-01-01',NULL,0,0,0,1,0),(645,'','','','','664B53AA-0E6A-46BE-9F32-1E14E426CC50','2020-11-05 03:37:04','2020-11-05 03:37:04','','','','','en-US','','','','','','','1900-01-01',NULL,0,0,0,1,0),(646,'','','','','104','2020-11-09 20:00:30','2020-11-09 20:00:30','','','','','en-US','','','','','','','1900-01-01',NULL,1,0,0,1,0),(647,'','','','','borrar7','2020-11-10 02:22:16','2020-11-10 02:22:16','','','','','en-US','','','','','','','1900-01-01',NULL,0,0,0,0,0),(648,'','','','','1840ED4A-6AEB-48E0-B743-3FB90A26B25C','2020-11-10 03:13:19','2020-11-10 03:13:19','','','','','fr-FR','','','','','','','1900-01-01',NULL,0,0,0,0,0),(649,'','','','','89DF06EC-41A1-4B47-BC2B-172A34173153','2020-11-10 05:07:45','2020-11-10 05:07:45','','','','','en-US','','','','','','','1900-01-01',NULL,0,0,0,0,0),(650,'','','','','d52ee93b7889621b6abb992bd2aac3fc07cfe27b','2020-11-10 08:52:26','2020-11-10 08:52:26','RODHULK','System Product Name (System manufacturer)','WindowsEditor','','en-US','','','','','','','1900-01-01',NULL,0,0,0,1,0),(651,'','','','','105','2020-11-10 15:44:20','2020-11-10 15:44:20','','','','','en-US','','','','','','','1900-01-01',NULL,0,0,0,0,0),(652,'','','','','600bae2a730fc1ddb69117580b816ffc54bb15f8_m_old2','2020-11-10 18:03:03','2020-11-10 18:03:03','ROHAN','System Product Name (System manufacturer)','WindowsEditor','','fr-FR','','','','','','','1900-01-01',NULL,0,0,0,1,0),(653,'','','','','600bae2a730fc1ddb69117580b816ffc54bb15f8_m_old3','2020-11-10 18:07:24','2020-11-10 18:07:24','ROHAN','System Product Name (System manufacturer)','WindowsEditor','','fr-FR','','','','','','','1900-01-01',NULL,0,0,0,0,0),(654,'','','','','600bae2a730fc1ddb69117580b816ffc54bb15f8_m_old4','2020-11-10 18:15:03','2020-11-10 18:15:03','ROHAN','System Product Name (System manufacturer)','WindowsEditor','','fr-FR','','','','','','','1900-01-01',10,0,0,0,1,0),(655,'','','','','03b587786620cedd8c9e9654842a6d0b_old','2020-11-16 15:41:04','2020-11-16 15:41:04','OPPO Reno2 Z','OPPO CPH1951','Android','','en-US','','','','','','','1900-01-01',NULL,0,0,1,1,0),(656,'','','','','03b587786620cedd8c9e9654842a6d0b_old2','2020-11-16 15:44:13','2020-11-16 15:44:13','OPPO Reno2 Z','OPPO CPH1951','Android','','fr-FR','','','','','','','1900-01-01',10,0,0,1,1,0),(657,'Tony','Stark','rod_fb@hotmail.com','','03b587786620cedd8c9e9654842a6d0b_old3','2020-11-16 16:11:50','2020-11-16 16:11:50','OPPO Reno2 Z','OPPO CPH1951','Android','','fr-FR','','','','','','','1900-01-01',10,0,0,1,1,0),(658,'Marcos','Wopi','novack@wopidom.com','','694740da81b6d0b883ac9fd95702d5a8_nope','2020-11-16 16:36:52','2020-11-16 16:36:52','motorola one macro','motorola motorola one macro','Android','','fr-FR','','','','','','','1900-01-01',10,0,0,0,1,0),(659,'Marcos','Wopi','novack@wopidom.com','','694740da81b6d0b883ac9fd95702d5a8_2','2020-11-16 17:02:22','2020-11-16 17:02:22','motorola one macro','motorola motorola one macro','Android','','fr-FR','','','','','','','1900-01-01',NULL,0,0,0,1,0),(660,'Marcos','Wopi','novack@wopidom.com','','694740da81b6d0b883ac9fd95702d5a8_3','2020-11-16 17:04:48','2020-11-16 17:04:48','motorola one macro','motorola motorola one macro','Android','','fr-FR','','','','','','','1900-01-01',NULL,0,0,0,1,0),(661,'','','','','600bae2a730fc1ddb69117580b816ffc54bb15f8_4','2020-11-16 18:31:08','2020-11-16 18:31:08','ROHAN','System Product Name (System manufacturer)','WindowsEditor','','en-US','','','','','','','1900-01-01',NULL,0,0,0,1,0),(662,'Tony','Stark','rod_fb@hotmail.com','','03b587786620cedd8c9e9654842a6d0b_old4','2020-11-17 13:00:45','2020-11-17 13:00:45','OPPO Reno2 Z','OPPO CPH1951','Android','','fr-FR','','','','','','','1900-01-01',NULL,0,0,1,1,0),(663,'Tony','Stark','rod_fb@hotmail.com','','03b587786620cedd8c9e9654842a6d0b','2020-11-17 13:07:50','2020-11-17 13:07:50','OPPO Reno2 Z','OPPO CPH1951','Android','','fr-FR','','','','','','','1900-01-01',NULL,0,0,1,1,0),(664,'','','','','14001','2020-11-19 12:30:41','2020-11-19 12:30:41','','','','','en-US','','','','','','','1900-01-01',NULL,0,0,0,0,0),(665,'','','','','14002','2020-11-19 12:30:57','2020-11-19 12:30:57','','','','','es-ES','','','','','','','1900-01-01',NULL,0,0,0,0,0),(666,'','','','','14003','2020-11-19 12:31:15','2020-11-19 12:31:15','','','','','fr-FR','','','','','','','1900-01-01',NULL,0,0,0,0,0);
/*!40000 ALTER TABLE `game_user` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `game_user_card`
--

DROP TABLE IF EXISTS `game_user_card`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `game_user_card` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `game_user_id` int(10) unsigned NOT NULL,
  `card_id` int(10) unsigned NOT NULL,
  `created_at` datetime DEFAULT current_timestamp(),
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `game_user_card`
--

LOCK TABLES `game_user_card` WRITE;
/*!40000 ALTER TABLE `game_user_card` DISABLE KEYS */;
INSERT INTO `game_user_card` VALUES (1,610,30,'2020-11-30 21:12:04');
/*!40000 ALTER TABLE `game_user_card` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `game_user_login`
--

DROP TABLE IF EXISTS `game_user_login`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `game_user_login` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `date` datetime NOT NULL DEFAULT current_timestamp(),
  `game_user_id` int(10) unsigned NOT NULL,
  `game_id` int(10) unsigned NOT NULL,
  `device_id` varchar(200) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `FK_game_user_login_game_id` (`game_id`),
  KEY `FK_game_user_login_game_user_id` (`game_user_id`),
  CONSTRAINT `FK_game_user_login_game_id` FOREIGN KEY (`game_id`) REFERENCES `game` (`id`),
  CONSTRAINT `FK_game_user_login_game_user_id` FOREIGN KEY (`game_user_id`) REFERENCES `game_user` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2269 DEFAULT CHARSET=utf8mb4 ROW_FORMAT=DYNAMIC;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `game_user_login`
--

LOCK TABLES `game_user_login` WRITE;
/*!40000 ALTER TABLE `game_user_login` DISABLE KEYS */;
INSERT INTO `game_user_login` VALUES (14,'2020-08-08 02:03:47',39,1,'borrar1'),(15,'2020-08-08 02:03:50',39,1,'borrar1'),(16,'2020-08-08 02:03:54',39,1,'borrar1'),(17,'2020-08-08 02:04:50',39,1,'borrar1'),(18,'2020-08-08 02:04:54',39,1,'borrar1'),(19,'2020-08-08 02:05:47',39,1,'borrar1'),(20,'2020-08-08 02:05:48',39,1,'borrar1'),(21,'2020-08-08 02:06:01',39,1,'borrar1'),(22,'2020-08-08 02:06:02',39,1,'borrar1'),(23,'2020-08-08 02:06:04',39,1,'borrar1'),(24,'2020-08-08 02:06:06',39,1,'borrar1'),(25,'2020-08-10 18:50:03',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(26,'2020-08-10 19:10:29',582,1,'101'),(27,'2020-08-10 19:29:14',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(28,'2020-08-10 19:34:11',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(29,'2020-08-10 19:34:39',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(30,'2020-08-10 19:50:56',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(31,'2020-08-10 19:54:40',586,1,'8834393bd949ebd9e2aee79d15aa3e86'),(32,'2020-08-10 20:02:00',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(33,'2020-08-10 20:11:47',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(34,'2020-08-10 20:12:27',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(35,'2020-08-11 18:25:43',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(36,'2020-08-11 18:51:23',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(37,'2020-08-11 19:49:53',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(38,'2020-08-11 19:50:38',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(39,'2020-08-12 19:00:04',586,1,'8834393bd949ebd9e2aee79d15aa3e86'),(40,'2020-08-12 19:08:42',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(41,'2020-08-12 19:12:15',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(42,'2020-08-12 20:19:41',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(43,'2020-08-13 15:42:06',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(44,'2020-08-13 17:13:26',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(45,'2020-08-13 17:18:03',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(46,'2020-08-13 17:18:47',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(47,'2020-08-13 17:27:25',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(48,'2020-08-17 18:32:57',39,1,'borrar1'),(49,'2020-08-17 18:33:31',582,1,'101'),(50,'2020-08-17 18:45:41',582,1,'101'),(51,'2020-08-17 18:45:43',582,1,'101'),(52,'2020-08-24 09:33:51',585,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(53,'2020-08-24 09:35:25',585,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(54,'2020-08-24 12:21:25',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(55,'2020-08-24 12:21:32',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(56,'2020-08-24 12:21:42',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(57,'2020-08-24 12:33:10',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(58,'2020-08-24 12:33:14',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(59,'2020-08-24 12:33:15',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(60,'2020-08-24 12:53:50',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(61,'2020-08-24 13:11:42',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(62,'2020-08-24 13:33:54',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(63,'2020-08-24 13:48:50',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(64,'2020-08-24 14:10:29',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(65,'2020-08-24 14:13:08',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(66,'2020-08-24 14:16:29',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(67,'2020-08-24 14:19:10',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(68,'2020-08-24 14:20:08',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(69,'2020-08-24 14:20:26',582,1,'101'),(70,'2020-08-24 14:21:19',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(71,'2020-08-24 16:28:56',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(72,'2020-08-24 16:31:16',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(73,'2020-08-24 17:29:13',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(74,'2020-08-24 17:30:38',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(75,'2020-08-25 09:32:11',585,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(76,'2020-08-25 12:37:55',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(77,'2020-08-25 13:27:26',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(78,'2020-08-25 13:27:58',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(79,'2020-08-25 13:28:27',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(80,'2020-08-25 18:53:34',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(81,'2020-08-25 18:57:15',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(82,'2020-08-25 18:58:12',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(83,'2020-08-25 19:03:53',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(84,'2020-08-25 19:08:11',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(85,'2020-08-25 19:12:08',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(86,'2020-08-25 19:13:11',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(87,'2020-08-25 19:13:47',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(88,'2020-08-25 19:14:42',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(89,'2020-08-25 19:14:59',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(90,'2020-08-25 19:15:10',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(91,'2020-08-25 19:15:31',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(92,'2020-08-25 19:15:53',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(93,'2020-08-25 19:17:33',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(94,'2020-08-26 17:44:57',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(95,'2020-08-26 17:45:18',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(96,'2020-08-26 17:45:55',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(97,'2020-08-26 17:49:07',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(98,'2020-08-26 17:49:50',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(99,'2020-08-26 17:50:26',582,1,'101'),(100,'2020-08-26 17:52:13',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(101,'2020-08-26 17:54:37',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(102,'2020-08-26 17:55:52',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(103,'2020-08-26 17:59:49',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(104,'2020-08-26 18:00:16',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(105,'2020-08-26 18:53:29',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(106,'2020-08-26 18:54:48',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(107,'2020-08-26 18:55:02',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(108,'2020-08-26 18:57:02',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(109,'2020-08-27 07:55:29',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(110,'2020-08-27 07:59:01',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(111,'2020-08-27 08:01:08',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(112,'2020-08-27 08:01:46',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(113,'2020-08-27 08:01:53',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(114,'2020-08-27 14:53:40',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(115,'2020-08-31 02:32:22',588,1,'df4e4207abd0d88e1afe1ca66bc792bd'),(116,'2020-08-31 14:07:53',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(117,'2020-08-31 14:11:19',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(118,'2020-08-31 14:11:54',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(119,'2020-08-31 14:12:21',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(120,'2020-08-31 14:13:06',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(121,'2020-08-31 14:16:11',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(122,'2020-08-31 14:19:02',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(123,'2020-08-31 14:21:41',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(124,'2020-08-31 14:25:37',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(125,'2020-08-31 14:33:54',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(126,'2020-08-31 14:43:15',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(127,'2020-08-31 14:44:37',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(128,'2020-08-31 14:50:01',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(129,'2020-08-31 14:50:19',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(130,'2020-08-31 14:50:58',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(131,'2020-08-31 14:53:00',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(132,'2020-08-31 14:53:04',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(133,'2020-08-31 14:53:09',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(134,'2020-08-31 14:53:41',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(135,'2020-08-31 14:55:48',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(136,'2020-08-31 14:55:58',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(137,'2020-08-31 15:01:17',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(138,'2020-08-31 15:11:40',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(139,'2020-08-31 15:12:42',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(140,'2020-08-31 15:15:50',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(141,'2020-08-31 15:28:33',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(142,'2020-08-31 15:31:13',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(143,'2020-08-31 15:35:03',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(144,'2020-08-31 15:41:16',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(145,'2020-08-31 15:41:39',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(146,'2020-08-31 15:45:40',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(147,'2020-08-31 15:48:09',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(148,'2020-08-31 15:50:27',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(149,'2020-08-31 15:52:21',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(150,'2020-08-31 15:56:21',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(151,'2020-08-31 16:20:38',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(152,'2020-08-31 16:21:07',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(153,'2020-08-31 16:28:30',586,1,'8834393bd949ebd9e2aee79d15aa3e86'),(154,'2020-08-31 16:31:00',586,1,'8834393bd949ebd9e2aee79d15aa3e86'),(155,'2020-08-31 16:36:45',586,1,'8834393bd949ebd9e2aee79d15aa3e86'),(156,'2020-08-31 17:26:42',586,1,'8834393bd949ebd9e2aee79d15aa3e86'),(157,'2020-08-31 18:51:35',586,1,'8834393bd949ebd9e2aee79d15aa3e86'),(158,'2020-08-31 18:54:15',586,1,'8834393bd949ebd9e2aee79d15aa3e86'),(159,'2020-08-31 19:11:44',586,1,'8834393bd949ebd9e2aee79d15aa3e86'),(160,'2020-08-31 21:30:14',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(161,'2020-08-31 21:31:30',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(162,'2020-08-31 21:31:59',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(163,'2020-08-31 22:03:11',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(164,'2020-08-31 22:07:26',586,1,'8834393bd949ebd9e2aee79d15aa3e86'),(165,'2020-08-31 22:16:54',586,1,'8834393bd949ebd9e2aee79d15aa3e86'),(166,'2020-08-31 22:17:50',586,1,'8834393bd949ebd9e2aee79d15aa3e86'),(167,'2020-09-01 13:06:56',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(168,'2020-09-01 13:42:01',586,1,'8834393bd949ebd9e2aee79d15aa3e86'),(169,'2020-09-01 14:05:46',586,1,'8834393bd949ebd9e2aee79d15aa3e86'),(170,'2020-09-01 14:06:58',586,1,'8834393bd949ebd9e2aee79d15aa3e86'),(171,'2020-09-01 15:07:16',586,1,'8834393bd949ebd9e2aee79d15aa3e86'),(172,'2020-09-01 15:19:11',586,1,'8834393bd949ebd9e2aee79d15aa3e86'),(173,'2020-09-01 15:33:49',586,1,'8834393bd949ebd9e2aee79d15aa3e86'),(174,'2020-09-01 15:57:30',586,1,'8834393bd949ebd9e2aee79d15aa3e86'),(175,'2020-09-01 16:09:46',586,1,'8834393bd949ebd9e2aee79d15aa3e86'),(176,'2020-09-01 17:12:33',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(177,'2020-09-01 17:16:01',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(178,'2020-09-01 18:11:08',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(179,'2020-09-01 18:12:31',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(180,'2020-09-01 18:32:33',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(181,'2020-09-01 18:34:08',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(182,'2020-09-01 18:36:00',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(183,'2020-09-01 18:40:24',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(184,'2020-09-01 18:50:23',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(185,'2020-09-01 18:53:51',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(186,'2020-09-01 18:58:18',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(187,'2020-09-01 18:59:34',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(188,'2020-09-01 19:04:19',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(189,'2020-09-01 19:05:06',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(190,'2020-09-01 19:05:23',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(191,'2020-09-02 04:15:08',588,1,'df4e4207abd0d88e1afe1ca66bc792bd'),(192,'2020-09-02 07:55:02',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(193,'2020-09-02 07:56:25',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(194,'2020-09-02 07:58:42',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(195,'2020-09-02 08:14:09',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(196,'2020-09-02 13:18:30',586,1,'8834393bd949ebd9e2aee79d15aa3e86'),(197,'2020-09-02 13:20:36',586,1,'8834393bd949ebd9e2aee79d15aa3e86'),(198,'2020-09-02 13:23:16',586,1,'8834393bd949ebd9e2aee79d15aa3e86'),(199,'2020-09-02 13:38:21',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(200,'2020-09-02 15:25:52',586,1,'8834393bd949ebd9e2aee79d15aa3e86'),(201,'2020-09-02 15:34:33',586,1,'8834393bd949ebd9e2aee79d15aa3e86'),(202,'2020-09-02 16:47:48',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(203,'2020-09-02 16:53:34',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(204,'2020-09-02 16:56:11',586,1,'8834393bd949ebd9e2aee79d15aa3e86'),(205,'2020-09-04 08:03:39',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(206,'2020-09-04 09:20:40',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(207,'2020-09-04 09:22:08',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(208,'2020-09-04 09:27:11',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(209,'2020-09-04 09:28:08',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(210,'2020-09-04 09:28:56',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(211,'2020-09-04 09:32:48',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(212,'2020-09-04 09:36:45',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(213,'2020-09-04 12:06:27',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(214,'2020-09-04 13:18:47',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(215,'2020-09-04 13:21:21',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(216,'2020-09-04 13:40:20',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(217,'2020-09-04 13:41:11',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(218,'2020-09-04 13:47:04',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(219,'2020-09-04 17:27:06',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(220,'2020-09-04 17:32:46',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(221,'2020-09-04 17:34:58',586,1,'8834393bd949ebd9e2aee79d15aa3e86'),(222,'2020-09-04 17:46:14',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(223,'2020-09-04 18:06:41',586,1,'8834393bd949ebd9e2aee79d15aa3e86'),(224,'2020-09-04 20:02:17',39,1,'borrar1'),(225,'2020-09-05 00:05:20',39,1,'borrar1'),(226,'2020-09-05 12:48:37',39,1,'borrar1'),(227,'2020-09-05 12:54:49',39,1,'borrar1'),(228,'2020-09-05 12:56:23',39,1,'borrar1'),(229,'2020-09-07 09:12:04',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(230,'2020-09-07 09:17:41',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(231,'2020-09-07 09:51:40',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(232,'2020-09-07 09:54:57',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(233,'2020-09-07 10:00:03',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(234,'2020-09-07 10:01:41',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(235,'2020-09-07 10:03:07',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(236,'2020-09-07 10:03:44',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(237,'2020-09-07 10:06:39',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(238,'2020-09-07 10:07:21',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(239,'2020-09-07 10:07:48',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(240,'2020-09-07 11:05:14',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(241,'2020-09-07 13:30:24',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(242,'2020-09-07 13:35:10',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(243,'2020-09-07 13:44:35',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(244,'2020-09-07 13:54:27',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(245,'2020-09-07 14:00:02',582,1,'101'),(246,'2020-09-07 14:07:08',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(247,'2020-09-07 14:40:11',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(248,'2020-09-07 16:21:30',586,1,'8834393bd949ebd9e2aee79d15aa3e86'),(249,'2020-09-07 16:23:49',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(250,'2020-09-07 16:25:22',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(251,'2020-09-07 16:26:59',586,1,'8834393bd949ebd9e2aee79d15aa3e86'),(252,'2020-09-07 16:29:30',586,1,'8834393bd949ebd9e2aee79d15aa3e86'),(253,'2020-09-07 17:11:15',586,1,'8834393bd949ebd9e2aee79d15aa3e86'),(254,'2020-09-07 17:13:13',586,1,'8834393bd949ebd9e2aee79d15aa3e86'),(255,'2020-09-07 17:21:11',586,1,'8834393bd949ebd9e2aee79d15aa3e86'),(256,'2020-09-07 17:42:07',586,1,'8834393bd949ebd9e2aee79d15aa3e86'),(257,'2020-09-07 17:49:55',586,1,'8834393bd949ebd9e2aee79d15aa3e86'),(258,'2020-09-07 21:00:58',39,1,'borrar1'),(259,'2020-09-07 21:04:11',39,1,'borrar1'),(260,'2020-09-07 21:16:50',39,1,'borrar1'),(261,'2020-09-07 21:18:11',39,1,'borrar1'),(262,'2020-09-07 22:13:43',582,1,'101'),(263,'2020-09-07 22:35:25',582,1,'101'),(264,'2020-09-07 22:38:25',582,1,'101'),(265,'2020-09-08 12:36:42',582,1,'101'),(266,'2020-09-08 12:38:55',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(267,'2020-09-08 12:41:56',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(268,'2020-09-08 12:42:59',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(269,'2020-09-08 12:44:12',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(270,'2020-09-08 12:47:12',582,1,'101'),(271,'2020-09-08 12:47:53',582,1,'101'),(272,'2020-09-08 12:49:23',582,1,'101'),(273,'2020-09-08 12:55:15',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(274,'2020-09-08 12:56:04',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(275,'2020-09-08 12:58:02',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(276,'2020-09-08 12:59:10',582,1,'101'),(277,'2020-09-08 13:01:47',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(278,'2020-09-08 13:11:25',39,1,'borrar1'),(279,'2020-09-08 13:11:34',39,1,'borrar1'),(280,'2020-09-08 13:12:06',39,1,'borrar1'),(281,'2020-09-08 13:12:15',39,1,'borrar1'),(282,'2020-09-08 13:41:49',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(283,'2020-09-08 13:41:55',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(284,'2020-09-08 13:42:16',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(285,'2020-09-08 13:45:50',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(286,'2020-09-08 13:46:24',582,1,'101'),(287,'2020-09-08 13:54:35',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(288,'2020-09-08 13:54:53',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(289,'2020-09-08 13:56:37',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(290,'2020-09-08 13:57:18',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(291,'2020-09-08 14:00:08',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(292,'2020-09-08 14:01:48',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(293,'2020-09-08 14:02:57',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(294,'2020-09-08 14:03:23',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(295,'2020-09-08 14:04:00',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(296,'2020-09-08 14:16:04',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(297,'2020-09-08 14:16:31',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(298,'2020-09-08 14:21:03',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(299,'2020-09-08 14:21:15',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(300,'2020-09-08 14:21:36',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(301,'2020-09-08 14:21:41',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(302,'2020-09-08 14:21:49',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(303,'2020-09-08 14:22:30',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(304,'2020-09-08 14:26:58',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(305,'2020-09-08 14:27:32',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(306,'2020-09-08 14:28:35',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(307,'2020-09-08 14:30:25',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(308,'2020-09-08 14:36:38',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(309,'2020-09-08 14:37:08',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(310,'2020-09-08 15:06:46',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(311,'2020-09-08 15:07:18',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(312,'2020-09-08 15:09:38',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(313,'2020-09-08 15:10:22',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(314,'2020-09-08 15:11:15',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(315,'2020-09-08 15:11:30',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(316,'2020-09-08 15:14:26',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(317,'2020-09-08 15:14:53',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(318,'2020-09-08 15:15:19',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(319,'2020-09-08 15:16:02',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(320,'2020-09-08 15:19:48',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(321,'2020-09-08 15:20:13',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(322,'2020-09-08 15:20:19',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(323,'2020-09-08 15:27:29',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(324,'2020-09-08 15:42:48',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(325,'2020-09-08 15:48:21',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(326,'2020-09-08 15:48:56',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(327,'2020-09-08 15:49:10',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(328,'2020-09-08 15:49:30',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(329,'2020-09-08 15:50:24',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(330,'2020-09-08 15:52:11',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(331,'2020-09-08 15:57:02',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(332,'2020-09-08 15:57:18',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(333,'2020-09-08 15:57:33',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(334,'2020-09-08 15:57:48',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(335,'2020-09-08 15:57:55',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(336,'2020-09-08 15:58:07',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(337,'2020-09-08 15:58:22',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(338,'2020-09-08 18:02:10',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(339,'2020-09-08 18:05:56',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(340,'2020-09-08 18:06:20',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(341,'2020-09-08 18:08:02',586,1,'8834393bd949ebd9e2aee79d15aa3e86'),(342,'2020-09-09 09:58:28',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(343,'2020-09-09 11:47:13',39,1,'borrar1'),(344,'2020-09-09 11:58:32',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(345,'2020-09-09 12:01:03',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(346,'2020-09-09 12:05:34',591,1,'c28f7440a48a23cfded7f2807b6cddcc'),(347,'2020-09-09 12:09:33',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(348,'2020-09-09 12:15:54',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(349,'2020-09-09 12:16:51',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(350,'2020-09-09 12:17:01',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(351,'2020-09-09 12:18:05',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(352,'2020-09-09 12:24:14',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(353,'2020-09-09 12:28:42',591,1,'c28f7440a48a23cfded7f2807b6cddcc'),(354,'2020-09-09 12:29:06',591,1,'c28f7440a48a23cfded7f2807b6cddcc'),(355,'2020-09-09 12:47:32',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(356,'2020-09-09 12:48:45',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(357,'2020-09-09 12:50:09',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(358,'2020-09-09 12:52:11',592,1,'2850e10aa06d0ce7905d9fd30c5a99e1'),(359,'2020-09-09 12:53:07',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(360,'2020-09-09 12:53:46',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(361,'2020-09-09 12:54:38',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(362,'2020-09-09 12:54:51',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(363,'2020-09-09 12:55:46',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(364,'2020-09-09 12:56:34',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(365,'2020-09-09 12:56:54',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(366,'2020-09-09 13:06:04',591,1,'c28f7440a48a23cfded7f2807b6cddcc'),(367,'2020-09-09 13:06:36',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(368,'2020-09-09 13:07:18',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(369,'2020-09-09 13:07:56',591,1,'c28f7440a48a23cfded7f2807b6cddcc'),(370,'2020-09-09 13:08:11',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(371,'2020-09-09 13:13:35',582,1,'101'),(372,'2020-09-09 13:23:35',592,1,'2850e10aa06d0ce7905d9fd30c5a99e1'),(373,'2020-09-09 16:04:23',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(374,'2020-09-09 16:12:51',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(375,'2020-09-09 16:13:18',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(376,'2020-09-09 16:15:02',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(377,'2020-09-09 16:15:27',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(378,'2020-09-09 16:17:00',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(379,'2020-09-09 16:17:33',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(380,'2020-09-09 16:26:32',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(381,'2020-09-09 16:28:07',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(382,'2020-09-09 17:20:40',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(383,'2020-09-09 17:27:08',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(384,'2020-09-09 17:42:35',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(385,'2020-09-09 17:43:07',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(386,'2020-09-09 17:46:03',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(387,'2020-09-09 17:47:04',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(388,'2020-09-09 17:47:47',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(389,'2020-09-09 17:50:52',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(390,'2020-09-09 18:22:41',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(391,'2020-09-09 18:22:59',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(392,'2020-09-09 18:23:17',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(393,'2020-09-09 18:23:50',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(394,'2020-09-09 18:30:25',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(395,'2020-09-09 18:33:33',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(396,'2020-09-09 18:33:53',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(397,'2020-09-09 18:34:13',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(398,'2020-09-09 18:35:49',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(399,'2020-09-09 18:37:55',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(400,'2020-09-09 18:38:32',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(401,'2020-09-09 18:53:34',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(402,'2020-09-09 19:04:19',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(403,'2020-09-09 19:07:50',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(404,'2020-09-09 19:10:06',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(405,'2020-09-09 19:10:57',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(406,'2020-09-09 19:11:53',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(407,'2020-09-09 19:14:09',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(408,'2020-09-09 19:17:08',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(409,'2020-09-09 19:18:31',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(410,'2020-09-09 19:18:47',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(411,'2020-09-09 19:20:19',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(412,'2020-09-09 19:20:52',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(413,'2020-09-09 19:25:06',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(414,'2020-09-09 19:26:26',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(415,'2020-09-09 19:27:14',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(416,'2020-09-09 19:29:36',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(417,'2020-09-09 19:32:33',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(418,'2020-09-09 19:33:08',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(419,'2020-09-09 19:37:17',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(420,'2020-09-09 19:41:44',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(421,'2020-09-09 19:42:27',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(422,'2020-09-09 19:49:38',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(423,'2020-09-09 19:50:34',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(424,'2020-09-09 19:54:27',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(425,'2020-09-09 19:55:46',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(426,'2020-09-09 19:56:34',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(427,'2020-09-09 19:59:34',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(428,'2020-09-09 20:08:22',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(429,'2020-09-10 07:36:35',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(430,'2020-09-10 07:37:27',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(431,'2020-09-10 07:37:54',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(432,'2020-09-10 07:42:47',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(433,'2020-09-10 07:43:07',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(434,'2020-09-10 07:44:09',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(435,'2020-09-10 12:40:41',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(436,'2020-09-10 12:41:33',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(437,'2020-09-10 12:41:54',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(438,'2020-09-10 12:42:03',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(439,'2020-09-10 12:42:19',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(440,'2020-09-10 12:44:24',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(441,'2020-09-10 12:44:48',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(442,'2020-09-10 12:46:02',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(443,'2020-09-10 14:24:12',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(444,'2020-09-10 14:44:01',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(445,'2020-09-10 14:45:14',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(446,'2020-09-10 15:07:48',582,1,'101'),(447,'2020-09-10 15:17:07',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(448,'2020-09-10 15:17:24',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(449,'2020-09-10 15:17:54',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(450,'2020-09-10 15:21:58',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(451,'2020-09-10 15:24:07',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(452,'2020-09-10 15:24:18',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(453,'2020-09-11 15:54:34',582,1,'101'),(454,'2020-09-11 15:54:41',582,1,'101'),(455,'2020-09-11 16:02:29',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(456,'2020-09-11 16:04:17',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(457,'2020-09-11 16:21:20',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(458,'2020-09-11 16:22:53',582,1,'101'),(459,'2020-09-11 16:34:16',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(460,'2020-09-11 16:37:14',582,1,'101'),(461,'2020-09-11 16:39:46',582,1,'101'),(462,'2020-09-11 16:42:49',594,1,'borrar17'),(463,'2020-09-11 16:44:20',594,1,'borrar17'),(464,'2020-09-11 16:46:33',594,1,'borrar17'),(465,'2020-09-11 16:53:02',594,1,'borrar17'),(466,'2020-09-11 16:53:31',582,1,'101'),(467,'2020-09-11 16:53:51',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(468,'2020-09-11 16:54:06',582,1,'101'),(469,'2020-09-11 16:57:09',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(470,'2020-09-11 17:02:08',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(471,'2020-09-11 17:05:03',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(472,'2020-09-11 17:07:07',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(473,'2020-09-11 17:09:31',582,1,'101'),(474,'2020-09-11 17:09:35',594,1,'borrar17'),(475,'2020-09-11 17:12:03',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(476,'2020-09-11 17:15:19',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(477,'2020-09-11 17:18:59',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(478,'2020-09-11 17:20:25',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(479,'2020-09-11 17:27:04',595,1,'583'),(480,'2020-09-11 17:27:54',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(481,'2020-09-11 17:28:03',39,1,'borrar1'),(482,'2020-09-11 17:30:54',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(483,'2020-09-11 17:34:58',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(484,'2020-09-11 17:39:38',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(485,'2020-09-11 17:43:28',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(486,'2020-09-11 17:59:28',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(487,'2020-09-14 00:02:37',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(488,'2020-09-14 12:50:08',595,1,'583'),(489,'2020-09-14 12:50:15',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(490,'2020-09-14 12:50:49',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(491,'2020-09-14 12:52:29',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(492,'2020-09-14 12:53:28',595,1,'583'),(493,'2020-09-14 12:53:57',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(494,'2020-09-14 12:54:08',582,1,'101'),(495,'2020-09-14 12:57:56',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(496,'2020-09-14 12:58:23',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(497,'2020-09-14 13:05:54',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(498,'2020-09-14 13:10:47',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(499,'2020-09-14 13:11:03',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(500,'2020-09-14 13:11:47',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(501,'2020-09-14 13:12:09',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(502,'2020-09-14 13:12:36',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(503,'2020-09-14 13:13:22',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(504,'2020-09-14 13:13:51',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(505,'2020-09-14 13:15:07',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(506,'2020-09-14 13:18:45',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(507,'2020-09-14 13:18:59',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(508,'2020-09-14 13:20:11',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(509,'2020-09-14 13:20:43',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(510,'2020-09-14 14:20:09',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(511,'2020-09-14 15:54:28',596,1,'d0094143af887cf9f24e935e454d49f1'),(512,'2020-09-14 15:56:46',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(513,'2020-09-14 15:57:38',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(514,'2020-09-14 15:57:50',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(515,'2020-09-14 15:59:03',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(516,'2020-09-14 16:00:20',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(517,'2020-09-14 16:01:29',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(518,'2020-09-14 16:04:48',582,1,'101'),(519,'2020-09-14 16:32:07',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(520,'2020-09-14 16:35:45',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(521,'2020-09-14 16:35:50',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(522,'2020-09-14 17:04:54',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(523,'2020-09-14 17:05:40',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(524,'2020-09-14 20:09:00',596,1,'d0094143af887cf9f24e935e454d49f1'),(525,'2020-09-15 13:01:14',582,1,'101'),(526,'2020-09-15 13:14:03',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(527,'2020-09-15 13:15:07',582,1,'101'),(528,'2020-09-15 13:22:47',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(529,'2020-09-15 13:31:17',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(530,'2020-09-15 13:32:55',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(531,'2020-09-15 13:33:00',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(532,'2020-09-15 13:52:56',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(533,'2020-09-15 13:54:07',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(534,'2020-09-15 14:23:58',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(535,'2020-09-15 14:39:59',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(536,'2020-09-15 14:42:16',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(537,'2020-09-15 14:43:05',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(538,'2020-09-15 15:04:49',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(539,'2020-09-15 15:04:58',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(540,'2020-09-15 15:05:57',582,1,'101'),(541,'2020-09-15 15:05:59',582,1,'101'),(542,'2020-09-15 15:29:06',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(543,'2020-09-15 15:30:55',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(544,'2020-09-15 15:31:05',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(545,'2020-09-15 15:47:08',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(546,'2020-09-15 15:50:35',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(547,'2020-09-16 13:04:40',582,1,'101'),(548,'2020-09-16 13:04:44',582,1,'101'),(549,'2020-09-16 13:04:45',582,1,'101'),(550,'2020-09-16 13:08:11',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(551,'2020-09-16 13:20:40',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(552,'2020-09-16 13:52:22',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(553,'2020-09-16 14:53:00',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(554,'2020-09-16 14:55:08',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(555,'2020-09-16 14:58:37',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(556,'2020-09-16 15:00:34',584,1,'8195af6f8967b0587baac2babd874a60162890b5'),(557,'2020-09-16 17:11:31',597,1,'4c82affcbd8026b650ef06f60ef96ac4'),(558,'2020-09-16 17:23:47',598,1,'7f8cff2db00f56e4da678f2367cfc93d'),(559,'2020-09-16 17:33:08',599,1,'38ffc46c0a47dea56958dd2dd9729bbc'),(560,'2020-09-16 18:05:30',582,1,'101'),(561,'2020-09-16 18:30:32',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(562,'2020-09-16 19:28:51',582,1,'101'),(563,'2020-09-16 19:28:52',582,1,'101'),(564,'2020-09-16 19:28:53',582,1,'101'),(565,'2020-09-16 19:34:59',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(566,'2020-09-16 19:47:30',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(567,'2020-09-16 19:48:12',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(568,'2020-09-16 19:48:32',582,1,'101'),(569,'2020-09-16 20:03:32',600,1,'819a8e8637c32116e17c5c31e9803424'),(570,'2020-09-16 20:04:01',601,1,'469a2c82a67b0113c37ff39ad1750d0d'),(571,'2020-09-16 20:04:54',602,1,'40818a38372e74465545d04b9753c5ad'),(572,'2020-09-16 20:05:10',603,1,'b3b549bdf3aae57d18b10b9d6b7faf7e'),(573,'2020-09-16 20:05:31',600,1,'819a8e8637c32116e17c5c31e9803424'),(574,'2020-09-16 20:05:56',601,1,'469a2c82a67b0113c37ff39ad1750d0d'),(575,'2020-09-16 21:59:23',604,1,'e7dcf36da23853dd5dbef1a571cd2cff'),(576,'2020-09-16 21:59:25',605,1,'cfdb23a6d1a5a3731b989fd136b1180c'),(577,'2020-09-16 22:53:29',606,1,'7432369ca6eff26dd206bcead85d55eb'),(578,'2020-09-16 22:53:39',607,1,'4841d87167568f37be251274aec84d15'),(579,'2020-09-16 23:53:31',608,1,'936650174516857cddffa9c3afb0d0fd'),(580,'2020-09-16 23:53:31',608,1,'936650174516857cddffa9c3afb0d0fd'),(581,'2020-09-17 14:18:37',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(582,'2020-09-17 14:41:36',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(583,'2020-09-17 15:08:03',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(584,'2020-09-17 15:16:56',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(585,'2020-09-17 15:20:21',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(586,'2020-09-17 15:30:56',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(587,'2020-09-17 15:32:11',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(588,'2020-09-17 16:25:14',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(589,'2020-09-17 16:28:04',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(590,'2020-09-17 16:48:22',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(591,'2020-09-17 19:22:18',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(592,'2020-09-17 19:24:22',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(593,'2020-09-17 19:42:02',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(594,'2020-09-17 19:42:31',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(595,'2020-09-17 19:47:02',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(596,'2020-09-17 19:53:27',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(597,'2020-09-17 19:57:58',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(598,'2020-09-17 21:25:43',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(599,'2020-09-17 21:32:20',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(600,'2020-09-17 21:32:37',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(601,'2020-09-17 21:32:48',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(602,'2020-09-17 21:42:16',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(603,'2020-09-17 21:42:34',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(604,'2020-09-17 21:50:35',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(605,'2020-09-17 21:57:44',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(606,'2020-09-17 22:00:45',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(607,'2020-09-17 22:02:30',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(608,'2020-09-17 23:03:44',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(609,'2020-09-17 23:19:34',582,1,'101'),(610,'2020-09-18 02:17:13',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(611,'2020-09-18 02:21:22',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(612,'2020-09-18 11:57:31',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(613,'2020-09-18 12:16:53',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(614,'2020-09-18 12:19:05',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(615,'2020-09-18 12:26:20',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(616,'2020-09-18 12:31:36',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(617,'2020-09-18 12:33:01',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(618,'2020-09-18 12:33:14',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(619,'2020-09-18 12:34:56',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(620,'2020-09-18 12:35:27',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(621,'2020-09-18 12:39:47',609,1,'c64207e2d34e0ca0d88957f0aee092f2'),(622,'2020-09-18 12:39:54',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(623,'2020-09-18 12:40:26',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(624,'2020-09-18 12:42:06',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(625,'2020-09-18 12:46:34',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(626,'2020-09-18 12:46:53',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(627,'2020-09-18 12:53:12',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(628,'2020-09-18 12:53:38',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(629,'2020-09-18 12:53:39',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(630,'2020-09-18 13:12:31',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(631,'2020-09-18 13:16:41',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(632,'2020-09-18 13:21:27',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(633,'2020-09-18 14:11:39',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(634,'2020-09-18 15:24:30',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(635,'2020-09-18 15:50:49',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(636,'2020-09-18 17:03:59',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(637,'2020-09-18 17:56:56',609,1,'c64207e2d34e0ca0d88957f0aee092f2'),(638,'2020-09-18 18:15:16',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(639,'2020-09-18 18:18:33',609,1,'c64207e2d34e0ca0d88957f0aee092f2'),(640,'2020-09-18 18:38:27',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(641,'2020-09-18 18:38:58',596,1,'d0094143af887cf9f24e935e454d49f1'),(642,'2020-09-18 18:40:30',596,1,'d0094143af887cf9f24e935e454d49f1'),(643,'2020-09-18 18:41:32',596,1,'d0094143af887cf9f24e935e454d49f1'),(644,'2020-09-18 18:46:06',596,1,'d0094143af887cf9f24e935e454d49f1'),(645,'2020-09-18 18:47:01',596,1,'d0094143af887cf9f24e935e454d49f1'),(646,'2020-09-18 18:48:28',596,1,'d0094143af887cf9f24e935e454d49f1'),(647,'2020-09-18 19:35:46',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(648,'2020-09-18 19:36:18',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(649,'2020-09-18 19:36:35',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(650,'2020-09-18 19:37:00',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(651,'2020-09-18 19:42:48',596,1,'d0094143af887cf9f24e935e454d49f1'),(652,'2020-09-18 19:42:55',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(653,'2020-09-18 19:43:11',596,1,'d0094143af887cf9f24e935e454d49f1'),(654,'2020-09-18 19:44:07',596,1,'d0094143af887cf9f24e935e454d49f1'),(655,'2020-09-18 19:49:24',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(656,'2020-09-18 19:50:35',596,1,'d0094143af887cf9f24e935e454d49f1'),(657,'2020-09-18 19:51:18',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(658,'2020-09-18 19:53:09',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(659,'2020-09-18 19:58:31',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(660,'2020-09-18 19:59:05',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(661,'2020-09-18 21:17:24',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(662,'2020-09-19 00:05:37',609,1,'c64207e2d34e0ca0d88957f0aee092f2'),(663,'2020-09-19 15:57:49',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(664,'2020-09-19 16:03:33',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(665,'2020-09-19 16:38:22',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(666,'2020-09-19 16:50:21',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(667,'2020-09-19 17:12:35',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(668,'2020-09-19 17:24:36',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(669,'2020-09-19 17:25:35',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(670,'2020-09-19 17:28:23',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(671,'2020-09-19 17:29:10',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(672,'2020-09-19 18:16:34',582,1,'101'),(673,'2020-09-19 20:05:08',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(674,'2020-09-19 20:05:17',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(675,'2020-09-19 20:06:26',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(676,'2020-09-19 20:07:33',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(677,'2020-09-19 20:07:57',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(678,'2020-09-19 20:09:39',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(679,'2020-09-19 20:15:34',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(680,'2020-09-19 20:23:30',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(681,'2020-09-19 20:31:52',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(682,'2020-09-19 20:32:37',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(683,'2020-09-19 20:33:07',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(684,'2020-09-19 20:34:06',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(685,'2020-09-19 20:36:16',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(686,'2020-09-20 18:39:33',609,1,'c64207e2d34e0ca0d88957f0aee092f2'),(687,'2020-09-20 21:28:54',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(688,'2020-09-20 21:33:31',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(689,'2020-09-20 21:51:13',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(690,'2020-09-20 22:54:28',39,1,'borrar1'),(691,'2020-09-20 23:05:05',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(692,'2020-09-20 23:07:32',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(693,'2020-09-20 23:10:50',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(694,'2020-09-20 23:12:04',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(695,'2020-09-20 23:13:00',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(696,'2020-09-20 23:18:55',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(697,'2020-09-20 23:19:54',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(698,'2020-09-20 23:35:24',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(699,'2020-09-21 00:04:21',582,1,'101'),(700,'2020-09-21 14:07:07',596,1,'d0094143af887cf9f24e935e454d49f1'),(701,'2020-09-21 14:09:33',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(702,'2020-09-21 14:11:29',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(703,'2020-09-21 14:17:05',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(704,'2020-09-21 14:17:05',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(705,'2020-09-21 14:17:49',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(706,'2020-09-21 14:18:05',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(707,'2020-09-21 14:18:14',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(708,'2020-09-21 14:18:20',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(709,'2020-09-21 14:19:07',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(710,'2020-09-21 14:21:19',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(711,'2020-09-21 14:23:11',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(712,'2020-09-21 14:24:10',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(713,'2020-09-21 14:24:26',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(714,'2020-09-21 14:29:56',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(715,'2020-09-21 14:37:53',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(716,'2020-09-21 14:39:32',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(717,'2020-09-21 14:39:46',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(718,'2020-09-21 14:39:54',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(719,'2020-09-21 14:42:34',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(720,'2020-09-21 15:56:37',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(721,'2020-09-21 15:57:04',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(722,'2020-09-21 15:57:25',39,1,'borrar1'),(723,'2020-09-21 16:12:24',596,1,'d0094143af887cf9f24e935e454d49f1'),(724,'2020-09-21 16:17:15',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(725,'2020-09-21 16:36:11',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(726,'2020-09-21 16:51:59',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(727,'2020-09-21 16:53:47',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(728,'2020-09-21 16:55:10',582,1,'101'),(729,'2020-09-21 16:55:16',39,1,'borrar1'),(730,'2020-09-21 18:13:32',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(731,'2020-09-21 18:13:55',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(732,'2020-09-21 18:16:46',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(733,'2020-09-21 18:23:10',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(734,'2020-09-21 18:54:49',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(735,'2020-09-21 18:55:07',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(736,'2020-09-21 18:56:41',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(737,'2020-09-21 18:58:22',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(738,'2020-09-21 19:24:45',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(739,'2020-09-21 19:26:16',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(740,'2020-09-21 19:26:36',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(741,'2020-09-21 19:27:50',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(742,'2020-09-21 19:29:43',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(743,'2020-09-21 19:58:41',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(744,'2020-09-21 19:59:01',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(745,'2020-09-21 20:08:40',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(746,'2020-09-21 20:08:55',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(747,'2020-09-21 20:09:12',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(748,'2020-09-21 20:17:39',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(749,'2020-09-21 20:27:57',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(750,'2020-09-21 20:37:11',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(751,'2020-09-21 22:08:43',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(752,'2020-09-21 22:13:22',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(753,'2020-09-22 10:47:32',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(754,'2020-09-22 12:50:31',596,1,'d0094143af887cf9f24e935e454d49f1'),(755,'2020-09-22 12:52:55',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(756,'2020-09-22 12:53:11',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(757,'2020-09-22 12:54:39',596,1,'d0094143af887cf9f24e935e454d49f1'),(758,'2020-09-22 13:04:04',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(759,'2020-09-22 13:06:01',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(760,'2020-09-22 13:08:48',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(761,'2020-09-22 13:09:31',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(762,'2020-09-22 13:14:21',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(763,'2020-09-22 13:44:33',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(764,'2020-09-22 13:51:58',596,1,'d0094143af887cf9f24e935e454d49f1'),(765,'2020-09-22 13:52:29',596,1,'d0094143af887cf9f24e935e454d49f1'),(766,'2020-09-22 13:52:32',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(767,'2020-09-22 13:52:47',596,1,'d0094143af887cf9f24e935e454d49f1'),(768,'2020-09-22 13:56:52',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(769,'2020-09-22 14:03:01',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(770,'2020-09-22 14:06:16',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(771,'2020-09-22 14:12:50',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(772,'2020-09-22 14:18:55',596,1,'d0094143af887cf9f24e935e454d49f1'),(773,'2020-09-22 14:48:50',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(774,'2020-09-22 14:50:33',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(775,'2020-09-22 14:50:42',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(776,'2020-09-22 14:51:20',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(777,'2020-09-22 14:52:45',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(778,'2020-09-22 14:53:43',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(779,'2020-09-22 14:53:52',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(780,'2020-09-22 15:50:30',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(781,'2020-09-22 15:55:16',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(782,'2020-09-22 16:01:20',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(783,'2020-09-23 13:54:44',582,1,'101'),(784,'2020-09-23 14:02:19',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(785,'2020-09-23 14:06:11',39,1,'borrar1'),(786,'2020-09-23 14:08:14',582,1,'101'),(787,'2020-09-23 15:12:26',39,1,'borrar1'),(788,'2020-09-23 15:32:25',39,1,'borrar1'),(789,'2020-09-23 15:47:10',39,1,'borrar1'),(790,'2020-09-23 16:53:18',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(791,'2020-09-23 17:09:43',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(792,'2020-09-23 17:14:05',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(793,'2020-09-23 17:17:14',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(794,'2020-09-23 17:18:38',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(795,'2020-09-23 17:31:00',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(796,'2020-09-23 17:33:13',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(797,'2020-09-23 17:33:51',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(798,'2020-09-23 17:35:23',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(799,'2020-09-23 17:35:49',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(800,'2020-09-23 18:02:24',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(801,'2020-09-23 18:06:20',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(802,'2020-09-23 18:13:11',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(803,'2020-09-23 18:50:25',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(804,'2020-09-23 19:17:14',39,1,'borrar1'),(805,'2020-09-23 19:41:30',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(806,'2020-09-23 19:45:50',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(807,'2020-09-23 22:00:50',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(808,'2020-09-23 22:01:37',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(809,'2020-09-23 23:20:11',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(810,'2020-09-24 13:35:18',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(811,'2020-09-24 13:36:10',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(812,'2020-09-24 17:26:25',582,1,'101'),(813,'2020-09-24 19:54:54',582,1,'101'),(814,'2020-09-24 20:47:47',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(815,'2020-09-24 20:49:56',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(816,'2020-09-24 20:53:16',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(817,'2020-09-24 20:55:23',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(818,'2020-09-24 21:51:54',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(819,'2020-09-24 21:57:43',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(820,'2020-09-24 22:00:07',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(821,'2020-09-24 22:03:36',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(822,'2020-09-24 22:05:27',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(823,'2020-09-24 22:07:58',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(824,'2020-09-24 22:10:21',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(825,'2020-09-24 22:43:25',39,1,'borrar1'),(826,'2020-09-24 22:46:26',39,1,'borrar1'),(827,'2020-09-24 22:59:11',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(828,'2020-09-24 23:09:15',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(829,'2020-09-25 03:32:09',39,1,'borrar1'),(830,'2020-09-25 06:18:23',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(831,'2020-09-25 06:55:56',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(832,'2020-09-25 08:18:52',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(833,'2020-09-25 13:03:10',582,1,'101'),(834,'2020-09-25 13:04:55',582,1,'101'),(835,'2020-09-25 13:05:05',582,1,'101'),(836,'2020-09-25 13:10:01',582,1,'101'),(837,'2020-09-25 13:12:20',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(838,'2020-09-25 13:12:33',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(839,'2020-09-28 09:14:06',585,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(840,'2020-09-28 13:27:28',611,1,'03b587786620cedd8c9e9654842a6d0b'),(841,'2020-09-28 13:46:56',585,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(842,'2020-09-28 13:48:09',585,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(843,'2020-09-28 13:50:06',585,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(844,'2020-09-28 13:53:22',585,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(845,'2020-09-28 13:55:31',585,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(846,'2020-09-28 13:55:52',585,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(847,'2020-09-28 13:56:17',585,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(848,'2020-09-28 13:56:43',585,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(849,'2020-09-28 14:06:07',585,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(850,'2020-09-28 14:07:03',585,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(851,'2020-09-28 14:07:54',585,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(852,'2020-09-28 14:14:37',611,1,'03b587786620cedd8c9e9654842a6d0b'),(853,'2020-09-28 14:45:28',585,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(854,'2020-09-28 15:20:04',585,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(855,'2020-09-28 15:22:56',585,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(856,'2020-09-28 16:25:29',612,1,'06f75c8817fad0d3e4209f9f666c9f73'),(857,'2020-09-28 16:36:58',585,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(858,'2020-09-28 16:42:10',585,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(859,'2020-09-28 16:42:45',612,1,'06f75c8817fad0d3e4209f9f666c9f73'),(860,'2020-09-29 09:36:16',611,1,'03b587786620cedd8c9e9654842a6d0b'),(861,'2020-09-29 14:01:31',612,1,'06f75c8817fad0d3e4209f9f666c9f73'),(862,'2020-09-30 13:34:30',585,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(863,'2020-09-30 13:36:03',585,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(864,'2020-09-30 13:36:16',611,1,'03b587786620cedd8c9e9654842a6d0b'),(865,'2020-09-30 13:44:09',611,1,'03b587786620cedd8c9e9654842a6d0b'),(866,'2020-09-30 13:44:45',612,1,'06f75c8817fad0d3e4209f9f666c9f73'),(867,'2020-09-30 13:45:22',611,1,'03b587786620cedd8c9e9654842a6d0b'),(868,'2020-09-30 13:45:41',612,1,'06f75c8817fad0d3e4209f9f666c9f73'),(869,'2020-09-30 13:46:48',611,1,'03b587786620cedd8c9e9654842a6d0b'),(870,'2020-09-30 13:48:43',582,1,'101'),(871,'2020-09-30 13:51:44',611,1,'03b587786620cedd8c9e9654842a6d0b'),(872,'2020-09-30 13:55:55',613,1,'03b587786620cedd8c9e9654842a6d0b'),(873,'2020-09-30 13:56:36',585,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(874,'2020-09-30 13:57:16',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(875,'2020-09-30 14:02:14',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(876,'2020-09-30 14:10:49',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(877,'2020-09-30 14:22:36',612,1,'06f75c8817fad0d3e4209f9f666c9f73'),(878,'2020-09-30 14:22:53',612,1,'06f75c8817fad0d3e4209f9f666c9f73'),(879,'2020-09-30 14:23:32',612,1,'06f75c8817fad0d3e4209f9f666c9f73'),(880,'2020-09-30 14:24:44',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(881,'2020-09-30 14:28:32',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(882,'2020-09-30 14:33:19',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(883,'2020-09-30 14:49:21',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(884,'2020-09-30 14:54:58',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(885,'2020-09-30 14:59:24',39,1,'borrar1'),(886,'2020-09-30 15:13:58',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(887,'2020-09-30 15:18:06',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(888,'2020-09-30 19:21:29',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(889,'2020-09-30 19:35:15',39,1,'borrar1'),(890,'2020-09-30 19:35:51',40,1,'borrar2'),(891,'2020-09-30 19:39:16',73,1,'borrar12'),(892,'2020-09-30 19:42:51',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(893,'2020-09-30 19:43:44',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(894,'2020-09-30 19:44:17',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(895,'2020-09-30 19:45:22',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(896,'2020-09-30 20:00:11',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(897,'2020-09-30 20:02:23',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(898,'2020-09-30 20:04:37',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(899,'2020-09-30 20:08:22',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(900,'2020-09-30 20:17:40',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(901,'2020-09-30 20:19:34',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(902,'2020-09-30 20:42:56',73,1,'borrar12'),(903,'2020-10-01 12:08:46',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(904,'2020-10-01 12:09:09',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(905,'2020-10-01 12:10:14',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(906,'2020-10-01 12:13:55',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(907,'2020-10-01 12:14:00',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(908,'2020-10-01 12:14:13',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(909,'2020-10-01 12:15:21',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(910,'2020-10-01 12:15:30',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(911,'2020-10-01 14:04:45',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(912,'2020-10-01 14:13:51',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(913,'2020-10-01 15:59:36',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(914,'2020-10-01 16:00:20',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(915,'2020-10-01 16:00:33',613,1,'03b587786620cedd8c9e9654842a6d0b'),(916,'2020-10-01 17:48:24',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(917,'2020-10-01 17:49:38',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(918,'2020-10-01 17:53:38',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(919,'2020-10-01 18:09:39',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(920,'2020-10-01 18:10:46',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(921,'2020-10-01 18:11:49',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(922,'2020-10-01 18:13:15',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(923,'2020-10-01 18:14:31',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(924,'2020-10-01 18:16:31',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(925,'2020-10-01 18:19:23',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(926,'2020-10-01 18:26:49',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(927,'2020-10-01 18:30:03',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(928,'2020-10-01 18:33:29',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(929,'2020-10-01 18:44:08',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(930,'2020-10-01 19:01:09',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(931,'2020-10-02 08:51:37',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(932,'2020-10-02 08:52:39',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(933,'2020-10-02 09:01:55',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(934,'2020-10-02 09:06:35',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(935,'2020-10-02 09:06:52',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(936,'2020-10-02 09:07:31',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(937,'2020-10-02 09:08:02',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(938,'2020-10-02 09:08:23',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(939,'2020-10-02 09:09:06',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(940,'2020-10-02 09:09:53',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(941,'2020-10-02 09:11:04',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(942,'2020-10-02 09:19:13',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(943,'2020-10-02 09:20:38',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(944,'2020-10-02 10:01:04',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(945,'2020-10-02 10:02:52',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(946,'2020-10-02 10:03:03',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(947,'2020-10-02 10:04:53',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(948,'2020-10-02 10:05:02',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(949,'2020-10-02 10:23:52',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(950,'2020-10-02 10:25:15',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(951,'2020-10-02 10:25:25',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(952,'2020-10-02 10:26:29',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(953,'2020-10-02 10:26:55',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(954,'2020-10-02 10:27:12',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(955,'2020-10-02 10:28:37',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(956,'2020-10-02 10:30:46',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(957,'2020-10-02 10:31:03',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(958,'2020-10-02 10:33:11',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(959,'2020-10-02 10:36:09',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(960,'2020-10-02 10:38:29',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(961,'2020-10-02 10:39:55',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(962,'2020-10-02 10:50:16',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(963,'2020-10-02 10:51:26',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(964,'2020-10-02 11:00:36',613,1,'03b587786620cedd8c9e9654842a6d0b'),(965,'2020-10-02 11:01:05',613,1,'03b587786620cedd8c9e9654842a6d0b'),(966,'2020-10-02 12:34:39',612,1,'06f75c8817fad0d3e4209f9f666c9f73'),(967,'2020-10-02 12:41:10',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(968,'2020-10-02 12:42:36',612,1,'06f75c8817fad0d3e4209f9f666c9f73'),(969,'2020-10-02 13:12:58',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(970,'2020-10-02 13:46:22',612,1,'06f75c8817fad0d3e4209f9f666c9f73'),(971,'2020-10-02 13:48:59',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(972,'2020-10-02 13:49:59',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(973,'2020-10-02 13:50:32',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(974,'2020-10-02 13:51:15',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(975,'2020-10-02 14:02:14',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(976,'2020-10-02 14:15:34',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(977,'2020-10-02 15:07:41',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(978,'2020-10-02 15:27:44',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(979,'2020-10-02 15:29:49',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(980,'2020-10-02 15:35:10',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(981,'2020-10-02 15:36:19',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(982,'2020-10-02 15:38:22',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(983,'2020-10-02 15:57:06',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(984,'2020-10-02 17:02:13',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(985,'2020-10-02 17:02:38',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(986,'2020-10-02 17:03:01',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(987,'2020-10-02 17:05:53',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(988,'2020-10-02 17:28:21',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(989,'2020-10-02 17:51:48',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(990,'2020-10-02 18:05:04',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(991,'2020-10-02 18:22:26',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(992,'2020-10-02 18:24:02',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(993,'2020-10-02 18:26:30',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(994,'2020-10-02 18:31:49',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(995,'2020-10-02 18:37:40',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(996,'2020-10-02 20:18:10',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(997,'2020-10-02 20:59:46',40,1,'borrar2'),(998,'2020-10-02 21:00:00',39,1,'borrar1'),(999,'2020-10-02 21:03:34',39,1,'borrar1'),(1000,'2020-10-05 12:54:24',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1001,'2020-10-05 12:55:49',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1002,'2020-10-05 12:55:59',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1003,'2020-10-05 12:56:38',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1004,'2020-10-05 12:56:55',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1005,'2020-10-05 13:02:11',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1006,'2020-10-05 13:10:16',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1007,'2020-10-05 15:03:07',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1008,'2020-10-05 15:06:23',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1009,'2020-10-05 15:06:40',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1010,'2020-10-05 15:15:51',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1011,'2020-10-05 15:16:22',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1012,'2020-10-05 15:17:06',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1013,'2020-10-05 15:21:32',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1014,'2020-10-05 15:39:32',39,1,'borrar1'),(1015,'2020-10-05 15:51:33',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1016,'2020-10-05 15:51:51',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1017,'2020-10-05 15:57:19',39,1,'borrar1'),(1018,'2020-10-05 16:05:10',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1019,'2020-10-05 16:34:34',39,1,'borrar1'),(1020,'2020-10-05 16:36:41',39,1,'borrar1'),(1021,'2020-10-05 16:38:25',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1022,'2020-10-05 18:38:20',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1023,'2020-10-05 18:39:36',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1024,'2020-10-05 19:13:21',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1025,'2020-10-05 19:23:14',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1026,'2020-10-05 19:32:08',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1027,'2020-10-05 19:33:51',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1028,'2020-10-05 19:36:39',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1029,'2020-10-05 19:37:06',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1030,'2020-10-05 19:37:59',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1031,'2020-10-05 19:39:56',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1032,'2020-10-05 19:40:20',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1033,'2020-10-05 19:52:35',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1034,'2020-10-05 19:55:17',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1035,'2020-10-05 20:02:27',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1036,'2020-10-05 20:03:58',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1037,'2020-10-05 22:52:18',39,1,'borrar1'),(1038,'2020-10-05 23:16:14',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1039,'2020-10-05 23:21:33',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1040,'2020-10-05 23:25:22',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1041,'2020-10-05 23:29:37',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1042,'2020-10-05 23:35:09',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1043,'2020-10-05 23:39:47',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1044,'2020-10-05 23:40:42',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1045,'2020-10-05 23:43:16',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1046,'2020-10-05 23:43:47',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1047,'2020-10-05 23:52:32',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1048,'2020-10-05 23:54:39',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1049,'2020-10-05 23:55:39',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1050,'2020-10-06 00:01:55',582,1,'101'),(1051,'2020-10-06 00:02:09',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1052,'2020-10-06 00:06:47',39,1,'borrar1'),(1053,'2020-10-06 00:13:07',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1054,'2020-10-06 00:13:43',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1055,'2020-10-06 00:14:55',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1056,'2020-10-06 00:16:48',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1057,'2020-10-06 00:26:32',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1058,'2020-10-06 00:27:50',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1059,'2020-10-06 00:29:21',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1060,'2020-10-06 00:37:15',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1061,'2020-10-06 00:39:33',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1062,'2020-10-06 00:40:50',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1063,'2020-10-06 09:32:31',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1064,'2020-10-06 09:38:18',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1065,'2020-10-06 09:39:17',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1066,'2020-10-06 09:43:56',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1067,'2020-10-06 09:44:46',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1068,'2020-10-06 09:48:45',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1069,'2020-10-06 09:50:36',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1070,'2020-10-06 09:55:06',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1071,'2020-10-06 09:56:06',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1072,'2020-10-06 09:56:51',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1073,'2020-10-06 09:57:47',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1074,'2020-10-06 10:00:54',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1075,'2020-10-06 10:03:46',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1076,'2020-10-06 10:06:27',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1077,'2020-10-06 10:08:31',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1078,'2020-10-06 10:12:22',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1079,'2020-10-06 10:13:58',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1080,'2020-10-06 10:43:58',39,1,'borrar1'),(1081,'2020-10-06 12:26:55',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1082,'2020-10-06 12:27:40',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1083,'2020-10-06 13:03:52',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1084,'2020-10-06 13:08:18',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1085,'2020-10-06 13:10:29',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1086,'2020-10-06 13:11:15',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1087,'2020-10-06 13:11:33',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1088,'2020-10-06 13:12:26',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1089,'2020-10-06 13:13:54',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1090,'2020-10-06 13:14:36',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1091,'2020-10-06 13:15:21',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1092,'2020-10-06 13:16:39',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1093,'2020-10-06 13:19:55',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1094,'2020-10-06 13:21:05',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1095,'2020-10-06 13:21:28',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1096,'2020-10-06 13:21:53',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1097,'2020-10-06 13:23:13',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1098,'2020-10-06 13:23:47',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1099,'2020-10-06 13:24:54',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1100,'2020-10-06 13:25:15',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1101,'2020-10-06 13:34:37',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1102,'2020-10-06 13:48:59',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1103,'2020-10-06 13:49:43',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1104,'2020-10-06 13:50:34',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1105,'2020-10-06 13:51:19',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1106,'2020-10-06 13:54:26',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1107,'2020-10-06 14:16:03',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1108,'2020-10-06 14:17:53',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1109,'2020-10-06 14:18:31',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1110,'2020-10-06 14:22:15',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1111,'2020-10-06 14:22:37',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1112,'2020-10-06 14:23:48',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1113,'2020-10-06 14:24:06',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1114,'2020-10-06 14:24:58',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1115,'2020-10-06 14:25:16',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1116,'2020-10-06 14:25:58',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1117,'2020-10-06 14:26:49',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1118,'2020-10-06 14:30:21',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1119,'2020-10-06 14:31:19',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1120,'2020-10-06 14:47:18',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1121,'2020-10-06 18:09:13',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1122,'2020-10-06 18:10:39',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1123,'2020-10-06 18:16:41',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1124,'2020-10-06 21:39:44',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1125,'2020-10-07 07:46:18',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1126,'2020-10-07 07:54:06',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1127,'2020-10-07 07:54:47',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1128,'2020-10-07 07:56:20',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1129,'2020-10-07 07:57:05',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1130,'2020-10-07 07:58:36',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1131,'2020-10-07 07:58:41',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1132,'2020-10-07 07:59:50',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1133,'2020-10-07 08:17:35',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1134,'2020-10-07 08:32:59',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1135,'2020-10-07 14:23:17',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1136,'2020-10-07 14:25:17',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1137,'2020-10-07 17:59:28',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1138,'2020-10-07 18:20:05',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(1139,'2020-10-07 18:30:27',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(1140,'2020-10-07 18:40:03',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(1141,'2020-10-07 18:43:12',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(1142,'2020-10-07 18:51:28',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1143,'2020-10-07 18:53:07',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1144,'2020-10-07 18:55:02',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(1145,'2020-10-07 19:09:29',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(1146,'2020-10-07 19:53:01',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(1147,'2020-10-08 01:37:58',39,1,'borrar1'),(1148,'2020-10-08 01:38:25',39,1,'borrar1'),(1149,'2020-10-08 01:39:04',39,1,'borrar1'),(1150,'2020-10-08 01:56:58',39,1,'borrar1'),(1151,'2020-10-08 10:14:17',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1152,'2020-10-08 10:14:51',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1153,'2020-10-08 10:19:51',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1154,'2020-10-08 10:22:05',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1155,'2020-10-08 10:40:26',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1156,'2020-10-08 10:45:28',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1157,'2020-10-08 11:08:35',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1158,'2020-10-08 12:51:02',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1159,'2020-10-08 12:57:37',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1160,'2020-10-08 13:04:57',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1161,'2020-10-08 13:06:28',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1162,'2020-10-08 13:10:01',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1163,'2020-10-08 13:29:21',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1164,'2020-10-08 13:37:45',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1165,'2020-10-08 13:38:36',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1166,'2020-10-08 13:39:22',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(1167,'2020-10-08 14:35:43',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1168,'2020-10-08 14:44:02',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1169,'2020-10-08 14:44:24',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1170,'2020-10-08 14:45:06',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1171,'2020-10-08 14:45:49',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1172,'2020-10-08 14:53:40',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1173,'2020-10-08 14:55:36',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1174,'2020-10-08 14:56:35',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1175,'2020-10-08 14:59:01',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1176,'2020-10-08 15:11:56',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1177,'2020-10-08 15:14:25',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1178,'2020-10-08 15:21:25',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1179,'2020-10-08 15:25:40',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1180,'2020-10-08 15:28:45',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1181,'2020-10-08 15:35:03',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1182,'2020-10-08 15:35:42',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1183,'2020-10-08 15:37:37',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1184,'2020-10-08 15:40:21',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1185,'2020-10-08 15:43:06',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1186,'2020-10-08 15:45:14',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1187,'2020-10-08 17:30:05',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1188,'2020-10-08 17:31:16',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(1189,'2020-10-08 17:36:10',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1190,'2020-10-08 17:40:47',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1191,'2020-10-08 18:00:12',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(1192,'2020-10-08 18:12:17',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(1193,'2020-10-08 18:19:04',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1194,'2020-10-08 18:19:52',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1195,'2020-10-08 19:02:30',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1196,'2020-10-08 19:14:34',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1197,'2020-10-08 19:16:57',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1198,'2020-10-08 19:29:44',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1199,'2020-10-08 19:36:59',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(1200,'2020-10-08 19:47:39',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1201,'2020-10-08 19:47:57',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1202,'2020-10-08 20:03:35',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1203,'2020-10-08 20:22:54',39,1,'borrar1'),(1204,'2020-10-08 21:14:21',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1205,'2020-10-08 23:17:23',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1206,'2020-10-08 23:21:40',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1207,'2020-10-08 23:21:59',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1208,'2020-10-08 23:39:28',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(1209,'2020-10-08 23:46:00',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(1210,'2020-10-08 23:51:00',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(1211,'2020-10-09 00:00:21',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1212,'2020-10-09 00:10:52',609,1,'c64207e2d34e0ca0d88957f0aee092f2'),(1213,'2020-10-09 00:24:05',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1214,'2020-10-09 02:09:56',609,1,'c64207e2d34e0ca0d88957f0aee092f2'),(1215,'2020-10-09 02:23:38',609,1,'c64207e2d34e0ca0d88957f0aee092f2'),(1216,'2020-10-09 02:38:54',609,1,'c64207e2d34e0ca0d88957f0aee092f2'),(1217,'2020-10-09 02:41:18',609,1,'c64207e2d34e0ca0d88957f0aee092f2'),(1218,'2020-10-09 07:25:20',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1219,'2020-10-09 07:25:26',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1220,'2020-10-09 07:35:21',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1221,'2020-10-09 07:36:24',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1222,'2020-10-09 07:38:28',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1223,'2020-10-09 07:39:49',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1224,'2020-10-09 07:43:10',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1225,'2020-10-09 07:50:50',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1226,'2020-10-09 07:51:55',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1227,'2020-10-09 07:52:38',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1228,'2020-10-09 08:07:44',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1229,'2020-10-09 08:08:06',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1230,'2020-10-09 08:08:46',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1231,'2020-10-09 08:09:07',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1232,'2020-10-09 08:09:25',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1233,'2020-10-09 08:10:33',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1234,'2020-10-09 08:11:28',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1235,'2020-10-09 08:13:01',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1236,'2020-10-09 08:15:12',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1237,'2020-10-09 08:16:10',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1238,'2020-10-09 08:16:55',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1239,'2020-10-09 08:19:00',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1240,'2020-10-09 08:23:06',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1241,'2020-10-09 08:25:50',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1242,'2020-10-09 08:28:50',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1243,'2020-10-09 08:52:33',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1244,'2020-10-09 08:59:47',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1245,'2020-10-09 09:00:25',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1246,'2020-10-09 09:04:55',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1247,'2020-10-09 09:05:57',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1248,'2020-10-09 09:07:24',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1249,'2020-10-09 09:15:01',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1250,'2020-10-09 09:15:37',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1251,'2020-10-09 12:03:46',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(1252,'2020-10-09 12:08:29',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(1253,'2020-10-09 12:23:20',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1254,'2020-10-09 12:25:28',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1255,'2020-10-09 12:43:51',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1256,'2020-10-09 12:45:30',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1257,'2020-10-09 12:49:18',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1258,'2020-10-09 13:20:35',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(1259,'2020-10-09 13:28:53',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(1260,'2020-10-09 13:31:31',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(1261,'2020-10-09 13:37:55',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(1262,'2020-10-09 13:38:26',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(1263,'2020-10-09 13:39:50',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(1264,'2020-10-09 13:40:59',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(1265,'2020-10-09 13:49:07',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(1266,'2020-10-09 13:52:32',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(1267,'2020-10-09 14:03:04',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1268,'2020-10-09 14:04:10',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1269,'2020-10-09 14:05:01',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1270,'2020-10-09 14:05:16',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1271,'2020-10-09 14:05:27',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1272,'2020-10-09 14:09:29',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1273,'2020-10-09 14:16:27',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(1274,'2020-10-09 14:16:33',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(1275,'2020-10-09 14:17:10',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(1276,'2020-10-09 14:20:25',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(1277,'2020-10-09 14:20:53',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(1278,'2020-10-09 14:27:42',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1279,'2020-10-09 14:28:32',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1280,'2020-10-09 14:29:58',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1281,'2020-10-09 15:42:38',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1282,'2020-10-09 15:42:58',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1283,'2020-10-09 15:43:11',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1284,'2020-10-09 15:44:11',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1285,'2020-10-09 15:46:47',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1286,'2020-10-09 15:47:15',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1287,'2020-10-09 15:53:50',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1288,'2020-10-09 15:57:50',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(1289,'2020-10-09 15:59:09',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(1290,'2020-10-09 16:02:22',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(1291,'2020-10-09 16:22:26',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(1292,'2020-10-09 18:14:49',582,1,'101'),(1293,'2020-10-09 18:15:41',582,1,'101'),(1294,'2020-10-09 21:29:01',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(1295,'2020-10-12 08:09:12',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1296,'2020-10-12 08:10:04',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1297,'2020-10-12 08:10:22',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1298,'2020-10-12 09:47:55',615,1,'5dd3903c1003dd046abbd3abf43dcbea'),(1299,'2020-10-12 09:48:25',616,1,'975ee47aa321507b2a785b252a90958d'),(1300,'2020-10-12 09:48:47',600,1,'819a8e8637c32116e17c5c31e9803424'),(1301,'2020-10-12 09:49:42',601,1,'469a2c82a67b0113c37ff39ad1750d0d'),(1302,'2020-10-12 09:54:39',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1303,'2020-10-12 09:55:11',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1304,'2020-10-12 10:04:40',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1305,'2020-10-12 10:04:49',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1306,'2020-10-12 10:05:10',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1307,'2020-10-12 10:05:28',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1308,'2020-10-12 10:05:45',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1309,'2020-10-12 10:06:00',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1310,'2020-10-12 10:11:06',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1311,'2020-10-12 11:20:27',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1312,'2020-10-12 12:23:39',582,1,'101'),(1313,'2020-10-12 12:23:58',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1314,'2020-10-12 12:47:07',582,1,'101'),(1315,'2020-10-12 12:56:07',582,1,'101'),(1316,'2020-10-12 13:04:00',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1317,'2020-10-12 13:05:28',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1318,'2020-10-12 13:05:52',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1319,'2020-10-12 13:06:30',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1320,'2020-10-12 13:07:02',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1321,'2020-10-12 13:07:31',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1322,'2020-10-12 13:07:39',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1323,'2020-10-12 13:07:57',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1324,'2020-10-12 13:08:08',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1325,'2020-10-12 13:08:15',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1326,'2020-10-12 13:08:21',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1327,'2020-10-12 13:08:26',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1328,'2020-10-12 13:08:38',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1329,'2020-10-12 13:09:20',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1330,'2020-10-12 13:09:40',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1331,'2020-10-12 13:10:56',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1332,'2020-10-12 13:16:59',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1333,'2020-10-12 13:18:45',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1334,'2020-10-12 13:19:30',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1335,'2020-10-12 13:20:20',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1336,'2020-10-12 13:21:26',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1337,'2020-10-12 13:23:21',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1338,'2020-10-12 13:23:41',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1339,'2020-10-12 14:05:52',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(1340,'2020-10-12 14:25:07',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1341,'2020-10-12 14:25:41',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1342,'2020-10-12 14:25:44',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1343,'2020-10-12 14:26:12',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1344,'2020-10-12 14:26:30',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1345,'2020-10-12 14:27:14',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1346,'2020-10-12 14:27:35',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1347,'2020-10-12 14:31:12',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1348,'2020-10-12 14:37:29',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1349,'2020-10-12 14:38:59',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1350,'2020-10-12 15:08:16',582,1,'101'),(1351,'2020-10-12 15:10:45',582,1,'101'),(1352,'2020-10-12 15:14:17',582,1,'101'),(1353,'2020-10-12 15:16:28',582,1,'101'),(1354,'2020-10-12 15:16:45',582,1,'101'),(1355,'2020-10-12 15:45:27',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1356,'2020-10-12 17:05:07',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(1357,'2020-10-12 17:05:41',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(1358,'2020-10-12 17:12:14',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(1359,'2020-10-12 17:29:33',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(1360,'2020-10-12 18:00:35',39,1,'borrar1'),(1361,'2020-10-12 18:07:13',39,1,'borrar1'),(1362,'2020-10-12 18:07:16',39,1,'borrar1'),(1363,'2020-10-12 18:09:20',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1364,'2020-10-12 19:04:23',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1365,'2020-10-12 19:04:42',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1366,'2020-10-12 19:17:05',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1367,'2020-10-12 19:18:28',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1368,'2020-10-13 12:26:16',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1369,'2020-10-14 14:14:22',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1370,'2020-10-14 15:33:37',589,1,'F3D988B7-90EC-572C-A1FC-D44AF6D7BC84'),(1371,'2020-10-15 08:57:52',617,1,'FC6F5577-6720-4663-9A1A-94D5E4AAC1E3'),(1372,'2020-10-15 09:00:40',617,1,'FC6F5577-6720-4663-9A1A-94D5E4AAC1E3'),(1373,'2020-10-15 10:19:11',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1374,'2020-10-15 11:14:04',618,1,'412238C6-DB1E-48D0-A735-BD2EFA061036'),(1375,'2020-10-15 11:50:09',618,1,'412238C6-DB1E-48D0-A735-BD2EFA061036'),(1376,'2020-10-15 14:27:29',612,1,'06f75c8817fad0d3e4209f9f666c9f73'),(1377,'2020-10-16 01:01:37',39,1,'borrar1'),(1378,'2020-10-16 01:02:50',39,1,'borrar1'),(1379,'2020-10-16 14:17:49',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1380,'2020-10-16 17:59:01',619,1,'JP'),(1381,'2020-10-17 01:03:21',619,1,'JP'),(1382,'2020-10-19 13:22:14',582,1,'101'),(1383,'2020-10-19 15:38:36',39,1,'borrar1'),(1384,'2020-10-19 15:38:50',42,1,'borrar11'),(1385,'2020-10-19 15:39:11',108,1,'borrar111'),(1386,'2020-10-19 15:39:25',620,1,'borrar1111'),(1387,'2020-10-21 15:25:11',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(1388,'2020-10-21 15:40:25',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(1389,'2020-10-21 15:48:27',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(1390,'2020-10-21 15:54:24',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(1391,'2020-10-21 16:09:20',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1392,'2020-10-21 16:59:32',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1393,'2020-10-21 17:00:33',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1394,'2020-10-21 17:04:51',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1395,'2020-10-21 17:08:47',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1396,'2020-10-21 17:14:07',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1397,'2020-10-21 17:19:50',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1398,'2020-10-21 17:22:58',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1399,'2020-10-21 17:27:27',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1400,'2020-10-21 17:32:31',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1401,'2020-10-21 17:35:53',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(1402,'2020-10-21 17:41:52',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1403,'2020-10-21 17:43:25',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1404,'2020-10-21 17:44:13',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1405,'2020-10-21 17:56:29',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1406,'2020-10-21 17:59:44',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1407,'2020-10-21 18:03:21',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(1408,'2020-10-21 18:04:16',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(1409,'2020-10-21 18:16:14',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(1410,'2020-10-23 14:19:40',582,1,'101'),(1411,'2020-10-23 17:36:01',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1412,'2020-10-23 17:37:44',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1413,'2020-10-23 17:38:48',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1414,'2020-10-23 17:54:23',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1415,'2020-10-23 17:54:35',582,1,'101'),(1416,'2020-10-23 17:55:15',582,1,'101'),(1417,'2020-10-23 18:00:51',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1418,'2020-10-23 19:02:17',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1419,'2020-10-23 19:03:53',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1420,'2020-10-23 19:04:54',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1421,'2020-10-23 19:20:48',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1422,'2020-10-23 19:25:59',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1423,'2020-10-23 19:35:50',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1424,'2020-10-23 19:50:17',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1425,'2020-10-23 22:02:52',39,1,'borrar1'),(1426,'2020-10-23 22:04:40',39,1,'borrar1'),(1427,'2020-10-23 22:10:56',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1428,'2020-10-23 22:31:04',39,1,'borrar1'),(1429,'2020-10-24 15:16:13',582,1,'101'),(1430,'2020-10-26 11:42:55',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1431,'2020-10-26 11:45:30',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1432,'2020-10-26 11:57:12',582,1,'101'),(1433,'2020-10-26 12:17:31',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1434,'2020-10-26 12:17:52',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1435,'2020-10-26 12:18:24',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1436,'2020-10-26 12:19:04',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1437,'2020-10-26 12:19:33',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1438,'2020-10-26 12:22:52',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1439,'2020-10-26 12:47:51',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1440,'2020-10-26 13:03:55',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1441,'2020-10-26 13:04:41',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1442,'2020-10-26 13:05:38',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1443,'2020-10-26 13:07:23',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1444,'2020-10-26 13:09:46',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1445,'2020-10-26 13:36:55',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1446,'2020-10-26 13:41:27',582,1,'101'),(1447,'2020-10-26 13:42:02',582,1,'101'),(1448,'2020-10-26 14:02:13',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1449,'2020-10-26 14:03:43',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1450,'2020-10-26 14:06:01',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1451,'2020-10-26 14:32:51',73,1,'borrar12'),(1452,'2020-10-26 14:33:34',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1453,'2020-10-26 14:36:12',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1454,'2020-10-26 14:36:53',73,1,'borrar12'),(1455,'2020-10-26 14:38:54',582,1,'101'),(1456,'2020-10-26 14:42:22',73,1,'borrar12'),(1457,'2020-10-26 14:43:41',582,1,'101'),(1458,'2020-10-27 12:32:38',582,1,'101'),(1459,'2020-10-27 12:50:26',621,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1460,'2020-10-27 12:53:13',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1461,'2020-10-27 14:24:22',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1462,'2020-10-27 15:32:45',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1463,'2020-10-27 16:51:00',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1464,'2020-10-27 16:51:29',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1465,'2020-10-27 16:53:44',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1466,'2020-10-27 17:35:26',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1467,'2020-10-27 17:52:30',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(1468,'2020-10-27 17:53:58',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(1469,'2020-10-27 18:23:27',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1470,'2020-10-27 18:30:19',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1471,'2020-10-27 18:30:42',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1472,'2020-10-27 18:33:58',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1473,'2020-10-27 18:38:18',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(1474,'2020-10-27 18:41:03',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(1475,'2020-10-27 18:46:36',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(1476,'2020-10-27 18:47:08',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(1477,'2020-10-27 18:49:55',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(1478,'2020-10-27 18:51:14',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(1479,'2020-10-27 18:51:42',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(1480,'2020-10-27 18:58:03',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(1481,'2020-10-27 19:12:16',622,1,'cbbb7f3efa7b639b477cff8e9a6f0f10'),(1482,'2020-10-27 19:12:45',623,1,'c30f3a200f99274563f8eb67ae571fe4'),(1483,'2020-10-27 19:13:32',601,1,'469a2c82a67b0113c37ff39ad1750d0d'),(1484,'2020-10-27 19:16:14',624,1,'979d148d6cb09b8a757a418e2c782aae'),(1485,'2020-10-27 19:33:50',600,1,'819a8e8637c32116e17c5c31e9803424'),(1486,'2020-10-28 00:59:29',39,1,'borrar1'),(1487,'2020-10-28 02:30:11',39,1,'borrar1'),(1488,'2020-10-28 02:32:41',39,1,'borrar1'),(1489,'2020-10-28 10:38:34',625,1,'6955ae5702f42b0df67967dcb3edd992'),(1490,'2020-10-28 12:27:51',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1491,'2020-10-28 12:32:32',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1492,'2020-10-28 12:32:58',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1493,'2020-10-28 12:33:21',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1494,'2020-10-28 12:33:52',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1495,'2020-10-28 12:34:27',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1496,'2020-10-28 12:46:38',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1497,'2020-10-28 12:47:54',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1498,'2020-10-28 12:54:46',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1499,'2020-10-28 17:39:15',39,1,'borrar1'),(1500,'2020-10-28 18:34:18',582,1,'101'),(1501,'2020-10-29 13:56:03',619,1,'JP'),(1502,'2020-10-29 13:56:46',619,1,'JP'),(1503,'2020-10-29 14:02:58',582,1,'101'),(1504,'2020-10-29 14:29:20',582,1,'101'),(1505,'2020-10-29 14:29:40',582,1,'101'),(1506,'2020-10-29 14:37:12',619,1,'JP'),(1507,'2020-10-29 14:42:06',582,1,'101'),(1508,'2020-10-29 14:44:53',619,1,'JP'),(1509,'2020-10-29 14:46:45',582,1,'101'),(1510,'2020-10-29 14:47:07',582,1,'101'),(1511,'2020-10-29 14:47:23',582,1,'101'),(1512,'2020-10-29 14:48:23',582,1,'101'),(1513,'2020-10-29 16:27:19',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1514,'2020-10-29 16:28:22',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1515,'2020-10-29 16:32:02',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1516,'2020-10-29 16:32:25',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1517,'2020-10-29 16:33:17',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1518,'2020-10-29 16:33:28',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1519,'2020-10-29 16:41:46',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1520,'2020-10-29 16:48:04',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1521,'2020-10-29 16:51:15',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1522,'2020-10-29 16:53:37',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1523,'2020-10-29 16:54:17',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1524,'2020-10-29 16:57:24',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1525,'2020-10-29 17:08:37',625,1,'6955ae5702f42b0df67967dcb3edd992'),(1526,'2020-10-29 17:10:03',601,1,'469a2c82a67b0113c37ff39ad1750d0d'),(1527,'2020-10-29 17:15:26',625,1,'6955ae5702f42b0df67967dcb3edd992'),(1528,'2020-10-29 17:19:15',625,1,'6955ae5702f42b0df67967dcb3edd992'),(1529,'2020-10-29 17:24:53',624,1,'979d148d6cb09b8a757a418e2c782aae'),(1530,'2020-10-29 17:29:24',624,1,'979d148d6cb09b8a757a418e2c782aae'),(1531,'2020-10-29 17:41:33',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1532,'2020-10-29 17:46:47',600,1,'819a8e8637c32116e17c5c31e9803424'),(1533,'2020-10-29 17:50:15',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1534,'2020-10-29 18:00:46',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1535,'2020-10-29 18:01:25',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1536,'2020-10-29 18:01:58',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1537,'2020-10-29 18:06:53',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1538,'2020-10-29 18:08:36',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1539,'2020-10-29 18:15:04',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1540,'2020-10-29 18:16:16',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1541,'2020-10-29 18:17:06',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1542,'2020-10-29 18:21:25',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1543,'2020-10-29 18:21:54',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1544,'2020-10-29 18:31:06',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1545,'2020-10-29 18:46:03',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1546,'2020-10-29 19:04:42',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1547,'2020-10-29 19:06:41',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1548,'2020-10-29 19:13:24',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1549,'2020-10-29 19:14:19',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1550,'2020-10-29 19:16:28',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1551,'2020-10-29 19:20:12',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1552,'2020-10-29 19:20:43',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1553,'2020-10-29 19:21:56',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1554,'2020-10-29 19:24:43',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1555,'2020-10-29 19:25:33',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1556,'2020-10-29 19:27:20',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1557,'2020-10-30 09:00:23',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1558,'2020-10-30 09:01:11',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1559,'2020-10-30 09:02:25',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1560,'2020-10-30 09:04:16',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1561,'2020-10-30 09:05:15',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1562,'2020-10-30 09:06:11',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1563,'2020-10-30 09:07:04',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1564,'2020-10-30 09:08:42',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1565,'2020-10-30 09:24:40',589,1,'F3D988B7-90EC-572C-A1FC-D44AF6D7BC84'),(1566,'2020-10-30 09:24:59',589,1,'F3D988B7-90EC-572C-A1FC-D44AF6D7BC84'),(1567,'2020-10-30 09:45:11',589,1,'F3D988B7-90EC-572C-A1FC-D44AF6D7BC84'),(1568,'2020-10-30 09:45:24',589,1,'F3D988B7-90EC-572C-A1FC-D44AF6D7BC84'),(1569,'2020-10-30 09:49:23',589,1,'F3D988B7-90EC-572C-A1FC-D44AF6D7BC84'),(1570,'2020-10-30 09:51:34',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1571,'2020-10-30 09:51:55',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1572,'2020-10-30 09:59:08',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1573,'2020-10-30 10:02:59',589,1,'F3D988B7-90EC-572C-A1FC-D44AF6D7BC84'),(1574,'2020-10-30 10:21:43',589,1,'F3D988B7-90EC-572C-A1FC-D44AF6D7BC84'),(1575,'2020-10-30 10:29:04',587,1,'4a897db81b6f6178ccde81ea7aed6544'),(1576,'2020-10-30 10:30:22',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1577,'2020-10-30 10:43:26',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1578,'2020-10-30 10:43:51',589,1,'F3D988B7-90EC-572C-A1FC-D44AF6D7BC84'),(1579,'2020-10-30 11:09:17',625,1,'6955ae5702f42b0df67967dcb3edd992'),(1580,'2020-10-30 11:12:26',625,1,'6955ae5702f42b0df67967dcb3edd992'),(1581,'2020-10-30 11:13:20',625,1,'6955ae5702f42b0df67967dcb3edd992'),(1582,'2020-10-30 11:33:04',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1583,'2020-10-30 11:35:12',582,1,'101'),(1584,'2020-10-30 11:41:51',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1585,'2020-10-30 11:42:36',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1586,'2020-10-30 11:52:39',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1587,'2020-10-30 11:52:52',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1588,'2020-10-30 11:54:26',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1589,'2020-10-30 11:55:28',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1590,'2020-10-30 12:00:35',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1591,'2020-10-30 12:01:42',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1592,'2020-10-30 12:16:55',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1593,'2020-10-30 12:17:22',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1594,'2020-10-30 12:18:24',626,1,'test_to_delete'),(1595,'2020-10-30 12:18:35',582,1,'101'),(1596,'2020-10-30 12:21:23',627,1,'6A53D68A-0CF9-4AB4-9B35-6F2DECE20963'),(1597,'2020-10-30 12:25:35',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1598,'2020-10-30 12:36:10',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1599,'2020-10-30 12:36:49',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1600,'2020-10-30 12:38:08',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1601,'2020-10-30 12:39:53',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1602,'2020-10-30 13:03:11',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1603,'2020-10-30 13:08:38',627,1,'6A53D68A-0CF9-4AB4-9B35-6F2DECE20963'),(1604,'2020-10-30 13:11:32',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1605,'2020-10-30 13:28:24',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1606,'2020-10-30 13:33:40',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1607,'2020-10-30 13:35:25',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1608,'2020-10-30 13:39:21',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(1609,'2020-10-30 13:40:44',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1610,'2020-10-30 13:41:55',628,1,'4E6C86AE-899B-4C88-BE78-69315C33F7E8'),(1611,'2020-10-30 14:16:00',628,1,'4E6C86AE-899B-4C88-BE78-69315C33F7E8'),(1612,'2020-10-30 14:28:42',629,1,'354376C1-FEE6-4474-A698-B7E9B820FB76'),(1613,'2020-10-30 14:30:34',629,1,'354376C1-FEE6-4474-A698-B7E9B820FB76'),(1614,'2020-10-30 14:46:44',629,1,'354376C1-FEE6-4474-A698-B7E9B820FB76'),(1615,'2020-10-30 14:57:46',629,1,'354376C1-FEE6-4474-A698-B7E9B820FB76'),(1616,'2020-10-30 14:57:59',629,1,'354376C1-FEE6-4474-A698-B7E9B820FB76'),(1617,'2020-10-30 15:00:39',629,1,'354376C1-FEE6-4474-A698-B7E9B820FB76'),(1618,'2020-10-30 15:03:38',630,1,'72CC8E49-1D22-4CB6-A1EF-2295D0CA29E0'),(1619,'2020-10-30 15:11:30',630,1,'72CC8E49-1D22-4CB6-A1EF-2295D0CA29E0'),(1620,'2020-10-30 15:21:16',630,1,'72CC8E49-1D22-4CB6-A1EF-2295D0CA29E0'),(1621,'2020-10-30 15:41:13',630,1,'72CC8E49-1D22-4CB6-A1EF-2295D0CA29E0'),(1622,'2020-10-30 15:41:33',630,1,'72CC8E49-1D22-4CB6-A1EF-2295D0CA29E0'),(1623,'2020-10-30 15:57:52',630,1,'72CC8E49-1D22-4CB6-A1EF-2295D0CA29E0'),(1624,'2020-10-30 15:59:05',630,1,'72CC8E49-1D22-4CB6-A1EF-2295D0CA29E0'),(1625,'2020-10-30 16:07:43',630,1,'72CC8E49-1D22-4CB6-A1EF-2295D0CA29E0'),(1626,'2020-10-30 16:11:37',631,1,'11612478-79A9-478D-AB15-9B3523C2A56D'),(1627,'2020-10-30 16:28:36',632,1,'ECBA72CB-7B95-416A-8334-CA06FCB71FE2'),(1628,'2020-10-30 16:53:01',631,1,'11612478-79A9-478D-AB15-9B3523C2A56D'),(1629,'2020-10-30 18:40:38',631,1,'11612478-79A9-478D-AB15-9B3523C2A56D'),(1630,'2020-10-30 19:38:48',631,1,'11612478-79A9-478D-AB15-9B3523C2A56D'),(1631,'2020-10-30 19:48:04',633,1,'7CE1A4B6-1FA5-416F-BB38-1BDFCF63CF90'),(1632,'2020-10-30 22:06:59',631,1,'11612478-79A9-478D-AB15-9B3523C2A56D'),(1633,'2020-10-31 08:11:16',631,1,'11612478-79A9-478D-AB15-9B3523C2A56D'),(1634,'2020-10-31 14:17:05',634,1,'7B5222FA-6E31-4973-AFA0-AB793E9D7C85'),(1635,'2020-10-31 21:38:46',631,1,'11612478-79A9-478D-AB15-9B3523C2A56D'),(1636,'2020-10-31 21:39:02',631,1,'11612478-79A9-478D-AB15-9B3523C2A56D'),(1637,'2020-11-01 07:33:37',631,1,'11612478-79A9-478D-AB15-9B3523C2A56D'),(1638,'2020-11-01 18:13:17',631,1,'11612478-79A9-478D-AB15-9B3523C2A56D'),(1639,'2020-11-02 10:11:53',631,1,'11612478-79A9-478D-AB15-9B3523C2A56D'),(1640,'2020-11-02 10:14:07',631,1,'11612478-79A9-478D-AB15-9B3523C2A56D'),(1641,'2020-11-02 10:14:28',631,1,'11612478-79A9-478D-AB15-9B3523C2A56D'),(1642,'2020-11-02 10:21:18',631,1,'11612478-79A9-478D-AB15-9B3523C2A56D'),(1643,'2020-11-02 10:35:16',629,1,'354376C1-FEE6-4474-A698-B7E9B820FB76'),(1644,'2020-11-02 10:48:36',635,1,'59442C96-B78F-47FC-86F6-6314608F7EA3'),(1645,'2020-11-02 11:04:04',635,1,'59442C96-B78F-47FC-86F6-6314608F7EA3'),(1646,'2020-11-02 13:10:03',636,1,'312D38F6-580F-422E-BAC2-E9BE3E7C816F'),(1647,'2020-11-02 13:19:49',636,1,'312D38F6-580F-422E-BAC2-E9BE3E7C816F'),(1648,'2020-11-02 13:40:05',636,1,'312D38F6-580F-422E-BAC2-E9BE3E7C816F'),(1649,'2020-11-02 13:41:17',636,1,'312D38F6-580F-422E-BAC2-E9BE3E7C816F'),(1650,'2020-11-02 13:51:19',637,1,'C5A7F65A-2C61-471D-8BC0-7B3288E67623'),(1651,'2020-11-02 13:53:25',637,1,'C5A7F65A-2C61-471D-8BC0-7B3288E67623'),(1652,'2020-11-02 14:02:09',637,1,'C5A7F65A-2C61-471D-8BC0-7B3288E67623'),(1653,'2020-11-02 14:50:00',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1654,'2020-11-02 15:00:53',638,1,'31A4DB80-8058-41E6-9BE7-26BA0E3D9C89'),(1655,'2020-11-02 15:38:50',638,1,'31A4DB80-8058-41E6-9BE7-26BA0E3D9C89'),(1656,'2020-11-02 15:39:53',638,1,'31A4DB80-8058-41E6-9BE7-26BA0E3D9C89'),(1657,'2020-11-02 15:49:53',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1658,'2020-11-02 15:54:08',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1659,'2020-11-02 15:55:29',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1660,'2020-11-02 15:56:50',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(1661,'2020-11-02 15:58:53',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1662,'2020-11-02 16:01:24',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1663,'2020-11-02 16:04:12',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1664,'2020-11-02 16:04:39',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(1665,'2020-11-02 16:05:13',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1666,'2020-11-02 16:07:30',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(1667,'2020-11-02 16:07:31',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1668,'2020-11-02 16:09:54',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1669,'2020-11-02 16:11:35',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(1670,'2020-11-02 16:11:37',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1671,'2020-11-02 16:24:24',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1672,'2020-11-02 16:40:18',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1673,'2020-11-02 16:40:37',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1674,'2020-11-02 16:46:38',582,1,'101'),(1675,'2020-11-02 16:46:45',639,1,'102'),(1676,'2020-11-02 17:25:53',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1677,'2020-11-02 17:31:07',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1678,'2020-11-02 17:31:15',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1679,'2020-11-02 17:32:12',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1680,'2020-11-02 17:33:16',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1681,'2020-11-02 17:33:56',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1682,'2020-11-02 17:34:25',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1683,'2020-11-02 17:36:58',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1684,'2020-11-02 17:39:23',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1685,'2020-11-02 17:41:09',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1686,'2020-11-02 17:42:41',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1687,'2020-11-02 17:44:36',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1688,'2020-11-02 17:47:12',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1689,'2020-11-02 17:48:22',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1690,'2020-11-02 17:49:43',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1691,'2020-11-02 17:53:25',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1692,'2020-11-02 17:54:32',613,1,'03b587786620cedd8c9e9654842a6d0b'),(1693,'2020-11-02 17:56:19',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1694,'2020-11-02 18:13:10',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1695,'2020-11-02 18:23:14',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1696,'2020-11-02 18:36:07',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1697,'2020-11-02 18:38:02',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1698,'2020-11-02 18:38:45',638,1,'31A4DB80-8058-41E6-9BE7-26BA0E3D9C89'),(1699,'2020-11-02 18:53:40',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(1700,'2020-11-02 23:52:14',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1701,'2020-11-02 23:58:06',640,1,'103'),(1702,'2020-11-03 00:05:31',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1703,'2020-11-03 00:17:25',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1704,'2020-11-03 00:20:41',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1705,'2020-11-03 00:22:37',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1706,'2020-11-03 01:55:50',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1707,'2020-11-03 02:36:52',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1708,'2020-11-03 13:03:21',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1709,'2020-11-03 13:19:52',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1710,'2020-11-03 15:17:43',619,1,'JP'),(1711,'2020-11-03 19:32:20',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1712,'2020-11-04 15:21:02',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1713,'2020-11-04 16:17:01',582,1,'101'),(1714,'2020-11-04 16:35:22',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1715,'2020-11-04 16:36:16',641,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1716,'2020-11-04 16:41:29',641,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1717,'2020-11-04 16:46:12',641,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1718,'2020-11-04 16:49:49',641,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1719,'2020-11-04 16:55:52',641,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1720,'2020-11-04 17:13:50',641,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1721,'2020-11-04 17:14:14',641,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1722,'2020-11-04 17:27:48',641,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1723,'2020-11-04 22:35:40',641,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1724,'2020-11-04 22:42:48',641,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1725,'2020-11-04 22:44:41',641,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1726,'2020-11-04 22:51:32',641,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1727,'2020-11-04 22:57:19',641,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1728,'2020-11-04 23:40:55',641,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1729,'2020-11-04 23:42:45',641,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1730,'2020-11-04 23:50:00',641,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1731,'2020-11-04 23:50:34',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1732,'2020-11-04 23:51:17',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1733,'2020-11-04 23:51:58',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1734,'2020-11-04 23:52:16',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1735,'2020-11-04 23:52:37',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1736,'2020-11-04 23:53:08',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1737,'2020-11-04 23:53:35',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1738,'2020-11-04 23:54:35',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1739,'2020-11-04 23:54:52',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1740,'2020-11-04 23:56:28',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1741,'2020-11-04 23:58:41',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1742,'2020-11-05 00:00:01',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1743,'2020-11-05 00:01:55',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1744,'2020-11-05 00:02:10',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1745,'2020-11-05 00:03:18',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1746,'2020-11-05 00:04:50',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1747,'2020-11-05 00:05:15',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1748,'2020-11-05 00:06:18',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1749,'2020-11-05 00:08:02',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1750,'2020-11-05 00:29:44',642,1,'39C69AA8-7351-4877-ABBE-1506236886CA'),(1751,'2020-11-05 00:40:25',643,1,'5269C20E-858A-4DDC-8CBF-D023408B90E4'),(1752,'2020-11-05 02:17:51',644,1,'71B455DA-C39F-4F57-A803-E59DB3F6D841'),(1753,'2020-11-05 03:37:04',645,1,'664B53AA-0E6A-46BE-9F32-1E14E426CC50'),(1754,'2020-11-05 09:41:04',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1755,'2020-11-05 09:50:07',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1756,'2020-11-05 09:50:18',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1757,'2020-11-05 09:50:23',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1758,'2020-11-05 09:51:21',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1759,'2020-11-05 09:51:46',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1760,'2020-11-05 10:06:24',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1761,'2020-11-05 10:10:26',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1762,'2020-11-05 13:26:52',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1763,'2020-11-05 13:27:09',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1764,'2020-11-05 13:54:13',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1765,'2020-11-05 13:57:27',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1766,'2020-11-05 13:59:42',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1767,'2020-11-05 14:05:14',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1768,'2020-11-05 14:49:09',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(1769,'2020-11-05 17:09:31',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1770,'2020-11-05 17:49:05',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1771,'2020-11-05 17:49:31',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1772,'2020-11-05 17:58:37',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1773,'2020-11-05 18:04:38',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1774,'2020-11-05 18:05:40',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1775,'2020-11-05 18:07:44',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1776,'2020-11-05 18:08:41',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1777,'2020-11-05 18:09:42',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1778,'2020-11-05 18:25:29',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1779,'2020-11-05 18:34:35',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1780,'2020-11-05 18:39:48',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1781,'2020-11-05 18:40:34',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1782,'2020-11-05 18:42:32',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1783,'2020-11-05 18:43:44',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1784,'2020-11-05 19:09:23',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1785,'2020-11-05 19:24:34',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1786,'2020-11-05 19:25:35',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1787,'2020-11-05 19:28:13',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1788,'2020-11-05 19:42:14',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1789,'2020-11-05 19:44:23',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1790,'2020-11-05 19:54:55',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1791,'2020-11-05 19:58:16',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1792,'2020-11-05 19:58:47',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1793,'2020-11-05 20:11:44',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1794,'2020-11-05 20:12:23',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1795,'2020-11-05 20:16:16',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1796,'2020-11-05 20:18:21',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1797,'2020-11-05 20:18:40',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1798,'2020-11-05 20:20:02',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1799,'2020-11-05 20:21:06',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1800,'2020-11-05 20:21:54',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1801,'2020-11-05 20:37:56',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1802,'2020-11-05 20:45:12',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1803,'2020-11-06 14:29:54',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1804,'2020-11-06 14:32:27',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1805,'2020-11-06 14:44:32',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1806,'2020-11-06 14:49:09',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1807,'2020-11-06 14:51:59',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1808,'2020-11-06 15:18:45',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1809,'2020-11-06 15:19:23',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1810,'2020-11-06 15:23:02',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1811,'2020-11-06 15:24:54',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1812,'2020-11-06 15:27:37',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1813,'2020-11-06 15:42:45',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1814,'2020-11-06 15:47:56',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1815,'2020-11-06 15:54:22',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1816,'2020-11-06 16:13:45',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1817,'2020-11-06 16:49:28',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1818,'2020-11-06 17:06:28',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1819,'2020-11-06 17:30:42',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1820,'2020-11-06 17:33:43',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1821,'2020-11-06 17:37:15',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1822,'2020-11-06 17:38:25',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1823,'2020-11-06 17:41:30',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1824,'2020-11-09 11:37:58',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1825,'2020-11-09 11:41:51',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1826,'2020-11-09 11:44:07',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1827,'2020-11-09 11:45:36',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1828,'2020-11-09 11:46:48',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1829,'2020-11-09 11:47:21',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1830,'2020-11-09 11:48:11',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1831,'2020-11-09 11:48:38',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1832,'2020-11-09 12:27:28',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1833,'2020-11-09 13:30:48',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1834,'2020-11-09 14:45:22',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1835,'2020-11-09 14:46:15',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1836,'2020-11-09 14:46:48',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1837,'2020-11-09 14:48:00',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1838,'2020-11-09 14:49:23',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1839,'2020-11-09 14:50:22',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1840,'2020-11-09 14:54:05',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1841,'2020-11-09 14:54:29',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1842,'2020-11-09 14:58:16',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1843,'2020-11-09 15:07:33',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1844,'2020-11-09 15:07:53',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1845,'2020-11-09 15:10:15',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1846,'2020-11-09 15:22:15',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1847,'2020-11-09 15:27:31',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1848,'2020-11-09 15:27:55',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1849,'2020-11-09 15:29:21',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1850,'2020-11-09 15:30:52',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1851,'2020-11-09 15:32:06',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1852,'2020-11-09 15:33:13',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1853,'2020-11-09 15:34:38',614,1,'e538bd360d70a7e9420928d74fb1855264b57ada'),(1854,'2020-11-09 15:39:31',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1855,'2020-11-09 15:44:15',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1856,'2020-11-09 15:45:01',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1857,'2020-11-09 15:47:14',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1858,'2020-11-09 16:00:56',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1859,'2020-11-09 16:55:06',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1860,'2020-11-09 16:55:28',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1861,'2020-11-09 17:04:05',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1862,'2020-11-09 17:04:44',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1863,'2020-11-09 17:04:57',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1864,'2020-11-09 17:07:58',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1865,'2020-11-09 17:08:19',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1866,'2020-11-09 17:16:11',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1867,'2020-11-09 17:17:53',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1868,'2020-11-09 17:20:58',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1869,'2020-11-09 17:21:25',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1870,'2020-11-09 17:22:55',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1871,'2020-11-09 17:34:52',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1872,'2020-11-09 17:38:46',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1873,'2020-11-09 17:39:00',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1874,'2020-11-09 17:39:23',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1875,'2020-11-09 17:41:04',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1876,'2020-11-09 17:41:45',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1877,'2020-11-09 17:59:29',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1878,'2020-11-09 18:01:04',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1879,'2020-11-09 18:03:04',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1880,'2020-11-09 18:05:57',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1881,'2020-11-09 18:08:50',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1882,'2020-11-09 18:11:44',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1883,'2020-11-09 18:12:22',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1884,'2020-11-09 18:16:37',619,1,'JP'),(1885,'2020-11-09 19:21:59',39,1,'borrar1'),(1886,'2020-11-09 19:23:18',582,1,'101'),(1887,'2020-11-09 19:26:55',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1888,'2020-11-09 19:32:14',39,1,'borrar1'),(1889,'2020-11-09 19:32:35',39,1,'borrar1'),(1890,'2020-11-09 19:57:39',582,1,'101'),(1891,'2020-11-09 19:57:59',639,1,'102'),(1892,'2020-11-09 19:58:08',640,1,'103'),(1893,'2020-11-09 20:00:30',646,1,'104'),(1894,'2020-11-09 20:37:00',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1895,'2020-11-09 20:37:46',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1896,'2020-11-09 20:39:11',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1897,'2020-11-09 20:39:58',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1898,'2020-11-09 20:40:15',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1899,'2020-11-09 20:41:28',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1900,'2020-11-09 20:43:02',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1901,'2020-11-09 20:43:46',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1902,'2020-11-09 20:44:57',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1903,'2020-11-09 20:47:41',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1904,'2020-11-09 20:48:35',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1905,'2020-11-09 20:48:47',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1906,'2020-11-09 20:50:42',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1907,'2020-11-09 20:50:58',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1908,'2020-11-09 20:52:56',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1909,'2020-11-09 20:54:06',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1910,'2020-11-09 20:54:31',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1911,'2020-11-09 21:00:32',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1912,'2020-11-09 21:02:36',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1913,'2020-11-09 21:03:13',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1914,'2020-11-09 21:07:39',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1915,'2020-11-09 21:08:44',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1916,'2020-11-09 21:10:28',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1917,'2020-11-09 21:14:32',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1918,'2020-11-09 21:16:19',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1919,'2020-11-09 21:18:35',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1920,'2020-11-09 21:19:15',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1921,'2020-11-09 21:21:07',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1922,'2020-11-09 21:26:33',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1923,'2020-11-09 21:28:51',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1924,'2020-11-09 21:29:08',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1925,'2020-11-09 21:32:17',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1926,'2020-11-09 21:32:47',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1927,'2020-11-09 21:40:42',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1928,'2020-11-09 21:41:03',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1929,'2020-11-09 21:42:07',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1930,'2020-11-09 21:42:32',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1931,'2020-11-09 21:43:17',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1932,'2020-11-09 21:46:37',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1933,'2020-11-09 21:56:14',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1934,'2020-11-09 21:56:58',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1935,'2020-11-09 21:59:04',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1936,'2020-11-09 22:01:17',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1937,'2020-11-09 22:07:09',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1938,'2020-11-09 22:07:32',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1939,'2020-11-09 22:13:26',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1940,'2020-11-09 22:14:34',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1941,'2020-11-09 22:17:02',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1942,'2020-11-09 22:19:13',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1943,'2020-11-09 22:19:53',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1944,'2020-11-09 22:22:54',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1945,'2020-11-09 22:27:16',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1946,'2020-11-09 22:31:23',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1947,'2020-11-10 02:20:43',39,1,'borrar1'),(1948,'2020-11-10 02:22:16',647,1,'borrar7'),(1949,'2020-11-10 03:13:19',648,1,'1840ED4A-6AEB-48E0-B743-3FB90A26B25C'),(1950,'2020-11-10 05:07:45',649,1,'89DF06EC-41A1-4B47-BC2B-172A34173153'),(1951,'2020-11-10 08:52:26',650,1,'d52ee93b7889621b6abb992bd2aac3fc07cfe27b'),(1952,'2020-11-10 08:52:54',650,1,'d52ee93b7889621b6abb992bd2aac3fc07cfe27b'),(1953,'2020-11-10 08:53:27',650,1,'d52ee93b7889621b6abb992bd2aac3fc07cfe27b'),(1954,'2020-11-10 08:53:57',650,1,'d52ee93b7889621b6abb992bd2aac3fc07cfe27b'),(1955,'2020-11-10 08:55:23',650,1,'d52ee93b7889621b6abb992bd2aac3fc07cfe27b'),(1956,'2020-11-10 08:56:33',650,1,'d52ee93b7889621b6abb992bd2aac3fc07cfe27b'),(1957,'2020-11-10 08:57:19',650,1,'d52ee93b7889621b6abb992bd2aac3fc07cfe27b'),(1958,'2020-11-10 08:58:23',650,1,'d52ee93b7889621b6abb992bd2aac3fc07cfe27b'),(1959,'2020-11-10 09:11:41',650,1,'d52ee93b7889621b6abb992bd2aac3fc07cfe27b'),(1960,'2020-11-10 09:12:53',650,1,'d52ee93b7889621b6abb992bd2aac3fc07cfe27b'),(1961,'2020-11-10 09:15:12',650,1,'d52ee93b7889621b6abb992bd2aac3fc07cfe27b'),(1962,'2020-11-10 09:19:01',650,1,'d52ee93b7889621b6abb992bd2aac3fc07cfe27b'),(1963,'2020-11-10 09:20:22',650,1,'d52ee93b7889621b6abb992bd2aac3fc07cfe27b'),(1964,'2020-11-10 10:18:47',650,1,'d52ee93b7889621b6abb992bd2aac3fc07cfe27b'),(1965,'2020-11-10 10:26:11',650,1,'d52ee93b7889621b6abb992bd2aac3fc07cfe27b'),(1966,'2020-11-10 10:26:23',650,1,'d52ee93b7889621b6abb992bd2aac3fc07cfe27b'),(1967,'2020-11-10 10:29:26',650,1,'d52ee93b7889621b6abb992bd2aac3fc07cfe27b'),(1968,'2020-11-10 10:39:39',650,1,'d52ee93b7889621b6abb992bd2aac3fc07cfe27b'),(1969,'2020-11-10 10:40:20',650,1,'d52ee93b7889621b6abb992bd2aac3fc07cfe27b'),(1970,'2020-11-10 10:40:35',650,1,'d52ee93b7889621b6abb992bd2aac3fc07cfe27b'),(1971,'2020-11-10 10:40:58',650,1,'d52ee93b7889621b6abb992bd2aac3fc07cfe27b'),(1972,'2020-11-10 10:41:54',650,1,'d52ee93b7889621b6abb992bd2aac3fc07cfe27b'),(1973,'2020-11-10 10:55:48',650,1,'d52ee93b7889621b6abb992bd2aac3fc07cfe27b'),(1974,'2020-11-10 10:56:30',650,1,'d52ee93b7889621b6abb992bd2aac3fc07cfe27b'),(1975,'2020-11-10 10:56:50',650,1,'d52ee93b7889621b6abb992bd2aac3fc07cfe27b'),(1976,'2020-11-10 10:57:10',650,1,'d52ee93b7889621b6abb992bd2aac3fc07cfe27b'),(1977,'2020-11-10 10:57:29',650,1,'d52ee93b7889621b6abb992bd2aac3fc07cfe27b'),(1978,'2020-11-10 10:57:46',650,1,'d52ee93b7889621b6abb992bd2aac3fc07cfe27b'),(1979,'2020-11-10 10:58:00',650,1,'d52ee93b7889621b6abb992bd2aac3fc07cfe27b'),(1980,'2020-11-10 10:58:16',650,1,'d52ee93b7889621b6abb992bd2aac3fc07cfe27b'),(1981,'2020-11-10 10:58:33',650,1,'d52ee93b7889621b6abb992bd2aac3fc07cfe27b'),(1982,'2020-11-10 10:59:15',650,1,'d52ee93b7889621b6abb992bd2aac3fc07cfe27b'),(1983,'2020-11-10 10:59:54',650,1,'d52ee93b7889621b6abb992bd2aac3fc07cfe27b'),(1984,'2020-11-10 11:00:37',650,1,'d52ee93b7889621b6abb992bd2aac3fc07cfe27b'),(1985,'2020-11-10 11:01:06',650,1,'d52ee93b7889621b6abb992bd2aac3fc07cfe27b'),(1986,'2020-11-10 11:01:54',650,1,'d52ee93b7889621b6abb992bd2aac3fc07cfe27b'),(1987,'2020-11-10 11:02:18',650,1,'d52ee93b7889621b6abb992bd2aac3fc07cfe27b'),(1988,'2020-11-10 11:02:51',650,1,'d52ee93b7889621b6abb992bd2aac3fc07cfe27b'),(1989,'2020-11-10 11:03:19',650,1,'d52ee93b7889621b6abb992bd2aac3fc07cfe27b'),(1990,'2020-11-10 11:57:04',650,1,'d52ee93b7889621b6abb992bd2aac3fc07cfe27b'),(1991,'2020-11-10 12:00:46',650,1,'d52ee93b7889621b6abb992bd2aac3fc07cfe27b'),(1992,'2020-11-10 12:03:21',646,1,'104'),(1993,'2020-11-10 12:08:55',646,1,'104'),(1994,'2020-11-10 12:10:40',646,1,'104'),(1995,'2020-11-10 12:11:21',646,1,'104'),(1996,'2020-11-10 12:11:39',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1997,'2020-11-10 12:13:07',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1998,'2020-11-10 12:20:03',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(1999,'2020-11-10 12:21:01',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2000,'2020-11-10 12:40:17',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2001,'2020-11-10 12:45:56',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2002,'2020-11-10 12:53:16',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2003,'2020-11-10 12:53:50',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2004,'2020-11-10 12:55:16',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2005,'2020-11-10 12:55:40',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2006,'2020-11-10 12:57:02',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2007,'2020-11-10 13:01:28',582,1,'101'),(2008,'2020-11-10 13:07:11',650,1,'d52ee93b7889621b6abb992bd2aac3fc07cfe27b'),(2009,'2020-11-10 13:10:29',650,1,'d52ee93b7889621b6abb992bd2aac3fc07cfe27b'),(2010,'2020-11-10 13:13:15',650,1,'d52ee93b7889621b6abb992bd2aac3fc07cfe27b'),(2011,'2020-11-10 13:14:29',650,1,'d52ee93b7889621b6abb992bd2aac3fc07cfe27b'),(2012,'2020-11-10 13:14:43',650,1,'d52ee93b7889621b6abb992bd2aac3fc07cfe27b'),(2013,'2020-11-10 13:14:57',650,1,'d52ee93b7889621b6abb992bd2aac3fc07cfe27b'),(2014,'2020-11-10 13:15:10',650,1,'d52ee93b7889621b6abb992bd2aac3fc07cfe27b'),(2015,'2020-11-10 13:16:06',650,1,'d52ee93b7889621b6abb992bd2aac3fc07cfe27b'),(2016,'2020-11-10 13:19:37',582,1,'101'),(2017,'2020-11-10 13:22:10',646,1,'104'),(2018,'2020-11-10 13:26:57',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2019,'2020-11-10 14:16:04',646,1,'104'),(2020,'2020-11-10 14:28:19',619,1,'JP'),(2021,'2020-11-10 14:30:01',646,1,'104'),(2022,'2020-11-10 14:31:22',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2023,'2020-11-10 15:37:36',650,1,'d52ee93b7889621b6abb992bd2aac3fc07cfe27b'),(2024,'2020-11-10 15:43:53',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2025,'2020-11-10 15:44:20',651,1,'105'),(2026,'2020-11-10 16:00:38',619,1,'JP'),(2027,'2020-11-10 16:51:56',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2028,'2020-11-10 16:53:33',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2029,'2020-11-10 16:54:14',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2030,'2020-11-10 16:54:38',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2031,'2020-11-10 16:54:50',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2032,'2020-11-10 16:55:00',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2033,'2020-11-10 16:56:03',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2034,'2020-11-10 16:56:39',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2035,'2020-11-10 16:56:41',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2036,'2020-11-10 17:13:33',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2037,'2020-11-10 17:28:46',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2038,'2020-11-10 17:29:35',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2039,'2020-11-10 17:35:32',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2040,'2020-11-10 17:46:09',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2041,'2020-11-10 17:46:22',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2042,'2020-11-10 17:47:26',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2043,'2020-11-10 18:03:03',652,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2044,'2020-11-10 18:07:24',653,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2045,'2020-11-10 18:15:03',654,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2046,'2020-11-10 18:16:46',654,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2047,'2020-11-10 18:18:08',654,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2048,'2020-11-10 18:18:59',654,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2049,'2020-11-10 18:19:37',654,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2050,'2020-11-12 15:52:27',654,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2051,'2020-11-12 15:59:45',654,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2052,'2020-11-12 16:01:20',654,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2053,'2020-11-12 16:29:17',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(2054,'2020-11-12 16:29:32',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(2055,'2020-11-12 16:39:58',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(2056,'2020-11-12 16:45:31',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(2057,'2020-11-12 17:22:27',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(2058,'2020-11-12 17:34:16',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(2059,'2020-11-12 18:24:24',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(2060,'2020-11-12 18:26:24',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(2061,'2020-11-12 18:27:22',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(2062,'2020-11-12 18:37:22',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(2063,'2020-11-13 09:36:20',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(2064,'2020-11-13 09:37:26',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(2065,'2020-11-13 09:37:33',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(2066,'2020-11-13 09:37:42',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(2067,'2020-11-13 09:38:31',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(2068,'2020-11-13 14:39:22',654,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2069,'2020-11-13 15:26:49',654,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2070,'2020-11-13 15:27:15',654,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2071,'2020-11-13 15:28:22',654,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2072,'2020-11-13 15:28:50',654,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2073,'2020-11-13 15:31:29',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2074,'2020-11-13 15:31:53',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2075,'2020-11-13 15:32:26',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2076,'2020-11-13 15:41:17',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(2077,'2020-11-13 15:43:26',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(2078,'2020-11-13 15:44:49',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(2079,'2020-11-13 15:49:56',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(2080,'2020-11-13 15:53:24',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(2081,'2020-11-13 15:56:27',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(2082,'2020-11-13 16:01:21',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(2083,'2020-11-13 16:07:29',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(2084,'2020-11-13 16:21:54',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(2085,'2020-11-13 16:27:58',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(2086,'2020-11-13 16:31:27',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(2087,'2020-11-13 16:45:21',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(2088,'2020-11-13 17:00:11',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(2089,'2020-11-13 17:15:33',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(2090,'2020-11-13 19:18:10',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2091,'2020-11-13 19:21:59',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2092,'2020-11-13 19:34:51',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2093,'2020-11-13 19:35:52',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2094,'2020-11-13 19:37:22',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2095,'2020-11-14 12:22:35',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(2096,'2020-11-16 10:19:56',650,1,'d52ee93b7889621b6abb992bd2aac3fc07cfe27b'),(2097,'2020-11-16 10:26:40',613,1,'03b587786620cedd8c9e9654842a6d0b'),(2098,'2020-11-16 10:59:27',613,1,'03b587786620cedd8c9e9654842a6d0b'),(2099,'2020-11-16 12:05:41',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(2100,'2020-11-16 13:19:22',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(2101,'2020-11-16 13:20:22',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(2102,'2020-11-16 13:20:41',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2103,'2020-11-16 14:22:23',613,1,'03b587786620cedd8c9e9654842a6d0b'),(2104,'2020-11-16 14:59:44',650,1,'d52ee93b7889621b6abb992bd2aac3fc07cfe27b'),(2105,'2020-11-16 15:39:32',613,1,'03b587786620cedd8c9e9654842a6d0b'),(2106,'2020-11-16 15:41:04',655,1,'03b587786620cedd8c9e9654842a6d0b'),(2107,'2020-11-16 15:44:13',656,1,'03b587786620cedd8c9e9654842a6d0b'),(2108,'2020-11-16 15:44:58',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(2109,'2020-11-16 15:46:38',656,1,'03b587786620cedd8c9e9654842a6d0b'),(2110,'2020-11-16 15:59:11',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2111,'2020-11-16 16:05:58',656,1,'03b587786620cedd8c9e9654842a6d0b'),(2112,'2020-11-16 16:11:50',657,1,'03b587786620cedd8c9e9654842a6d0b'),(2113,'2020-11-16 16:16:15',657,1,'03b587786620cedd8c9e9654842a6d0b'),(2114,'2020-11-16 16:27:35',657,1,'03b587786620cedd8c9e9654842a6d0b'),(2115,'2020-11-16 16:34:57',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(2116,'2020-11-16 16:36:52',658,1,'694740da81b6d0b883ac9fd95702d5a8'),(2117,'2020-11-16 16:37:30',657,1,'03b587786620cedd8c9e9654842a6d0b'),(2118,'2020-11-16 16:46:12',657,1,'03b587786620cedd8c9e9654842a6d0b'),(2119,'2020-11-16 17:00:18',657,1,'03b587786620cedd8c9e9654842a6d0b'),(2120,'2020-11-16 17:02:22',659,1,'694740da81b6d0b883ac9fd95702d5a8'),(2121,'2020-11-16 17:04:09',659,1,'694740da81b6d0b883ac9fd95702d5a8'),(2122,'2020-11-16 17:04:48',660,1,'694740da81b6d0b883ac9fd95702d5a8'),(2123,'2020-11-16 17:51:45',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2124,'2020-11-16 18:13:48',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2125,'2020-11-16 18:21:02',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2126,'2020-11-16 18:25:12',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2127,'2020-11-16 18:31:08',661,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2128,'2020-11-16 18:31:47',661,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2129,'2020-11-16 18:32:08',661,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2130,'2020-11-16 18:33:26',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2131,'2020-11-16 18:42:22',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2132,'2020-11-17 10:51:38',657,1,'03b587786620cedd8c9e9654842a6d0b'),(2133,'2020-11-17 11:08:28',657,1,'03b587786620cedd8c9e9654842a6d0b'),(2134,'2020-11-17 12:15:45',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(2135,'2020-11-17 12:17:48',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(2136,'2020-11-17 12:19:57',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(2137,'2020-11-17 12:23:43',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(2138,'2020-11-17 12:25:25',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(2139,'2020-11-17 12:26:42',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(2140,'2020-11-17 12:27:13',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(2141,'2020-11-17 12:28:24',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(2142,'2020-11-17 12:31:08',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(2143,'2020-11-17 12:55:04',657,1,'03b587786620cedd8c9e9654842a6d0b'),(2144,'2020-11-17 12:56:51',657,1,'03b587786620cedd8c9e9654842a6d0b'),(2145,'2020-11-17 13:00:45',662,1,'03b587786620cedd8c9e9654842a6d0b'),(2146,'2020-11-17 13:00:54',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(2147,'2020-11-17 13:01:37',662,1,'03b587786620cedd8c9e9654842a6d0b'),(2148,'2020-11-17 13:01:44',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(2149,'2020-11-17 13:03:53',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(2150,'2020-11-17 13:07:50',663,1,'03b587786620cedd8c9e9654842a6d0b'),(2151,'2020-11-17 13:07:58',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(2152,'2020-11-17 13:09:32',663,1,'03b587786620cedd8c9e9654842a6d0b'),(2153,'2020-11-17 13:20:24',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(2154,'2020-11-17 13:34:58',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(2155,'2020-11-17 13:38:48',593,1,'694740da81b6d0b883ac9fd95702d5a8'),(2156,'2020-11-17 15:07:06',650,1,'d52ee93b7889621b6abb992bd2aac3fc07cfe27b'),(2157,'2020-11-18 10:10:36',663,1,'03b587786620cedd8c9e9654842a6d0b'),(2158,'2020-11-18 18:44:59',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2159,'2020-11-18 21:41:28',619,1,'JP'),(2160,'2020-11-19 09:31:19',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(2161,'2020-11-19 11:41:11',582,1,'101'),(2162,'2020-11-19 12:25:16',582,1,'101'),(2163,'2020-11-19 12:30:41',664,1,'14001'),(2164,'2020-11-19 12:30:57',665,1,'14002'),(2165,'2020-11-19 12:31:15',666,1,'14003'),(2166,'2020-11-19 12:51:36',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2167,'2020-11-19 12:52:17',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2168,'2020-11-19 13:00:27',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2169,'2020-11-19 13:00:53',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2170,'2020-11-19 13:01:16',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2171,'2020-11-19 13:08:06',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2172,'2020-11-19 13:08:44',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2173,'2020-11-19 13:09:25',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2174,'2020-11-19 13:10:46',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2175,'2020-11-19 13:12:53',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2176,'2020-11-19 13:17:46',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2177,'2020-11-19 14:51:54',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2178,'2020-11-19 14:57:26',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2179,'2020-11-19 14:58:54',666,1,'14003'),(2180,'2020-11-19 14:59:01',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2181,'2020-11-19 15:00:43',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2182,'2020-11-19 21:54:33',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2183,'2020-11-19 21:56:32',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2184,'2020-11-19 21:58:07',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2185,'2020-11-19 21:58:22',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2186,'2020-11-20 11:08:21',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(2187,'2020-11-20 11:09:54',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(2188,'2020-11-20 12:08:58',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(2189,'2020-11-20 12:10:38',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(2190,'2020-11-20 12:13:54',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(2191,'2020-11-20 13:24:33',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(2192,'2020-11-20 13:26:08',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(2193,'2020-11-20 13:27:20',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2194,'2020-11-20 13:27:47',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(2195,'2020-11-20 15:35:45',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(2196,'2020-11-20 15:37:52',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(2197,'2020-11-20 15:59:20',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(2198,'2020-11-20 16:02:16',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(2199,'2020-11-20 17:20:45',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2200,'2020-11-20 17:23:04',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2201,'2020-11-20 17:23:45',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2202,'2020-11-20 17:28:23',582,1,'101'),(2203,'2020-11-20 17:28:29',595,1,'583'),(2204,'2020-11-20 17:29:18',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2205,'2020-11-20 17:31:37',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2206,'2020-11-20 17:32:38',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2207,'2020-11-23 08:59:42',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(2208,'2020-11-23 09:01:29',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(2209,'2020-11-23 09:01:39',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(2210,'2020-11-23 09:03:14',619,1,'JP'),(2211,'2020-11-23 15:42:06',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(2212,'2020-11-23 15:44:40',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(2213,'2020-11-24 10:47:44',582,1,'101'),(2214,'2020-11-24 10:58:47',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2215,'2020-11-24 10:59:22',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2216,'2020-11-24 10:59:53',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2217,'2020-11-24 11:03:09',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2218,'2020-11-24 11:05:41',582,1,'101'),(2219,'2020-11-24 11:31:46',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2220,'2020-11-24 14:48:44',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(2221,'2020-11-24 14:52:11',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(2222,'2020-11-24 14:54:02',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(2223,'2020-11-24 15:12:14',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(2224,'2020-11-24 15:40:04',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(2225,'2020-11-24 16:14:34',582,1,'101'),(2226,'2020-11-24 16:17:49',582,1,'101'),(2227,'2020-11-24 16:18:12',582,1,'101'),(2228,'2020-11-24 16:18:19',639,1,'102'),(2229,'2020-11-24 16:18:38',639,1,'102'),(2230,'2020-11-24 17:12:00',582,1,'101'),(2231,'2020-11-24 17:18:51',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2232,'2020-11-24 19:00:19',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2233,'2020-11-24 19:14:46',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2234,'2020-11-24 19:15:15',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2235,'2020-11-24 19:18:56',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2236,'2020-11-24 19:21:45',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2237,'2020-11-24 19:22:11',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2238,'2020-11-24 19:26:21',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2239,'2020-11-24 19:26:37',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2240,'2020-11-24 19:37:00',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2241,'2020-11-24 19:37:26',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2242,'2020-11-24 20:00:07',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2243,'2020-11-24 20:00:40',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2244,'2020-11-24 20:01:48',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2245,'2020-11-24 20:13:24',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2246,'2020-11-24 20:13:39',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2247,'2020-11-24 20:15:07',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2248,'2020-11-24 20:15:23',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2249,'2020-11-24 20:15:54',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2250,'2020-11-24 20:20:27',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2251,'2020-11-24 23:42:40',40,1,'borrar2'),(2252,'2020-11-24 23:42:48',39,1,'borrar1'),(2253,'2020-11-24 23:43:05',40,1,'borrar2'),(2254,'2020-11-25 12:02:02',639,1,'102'),(2255,'2020-11-25 12:02:55',582,1,'101'),(2256,'2020-11-25 12:03:30',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2257,'2020-11-25 12:06:50',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2258,'2020-11-25 12:10:32',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2259,'2020-11-25 12:13:30',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2260,'2020-11-25 13:08:56',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2261,'2020-11-25 13:09:59',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2262,'2020-11-25 13:10:17',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2263,'2020-11-25 13:11:12',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2264,'2020-11-25 13:11:33',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2265,'2020-11-25 13:11:43',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2266,'2020-11-25 13:12:02',583,1,'600bae2a730fc1ddb69117580b816ffc54bb15f8'),(2267,'2020-11-25 15:06:23',610,1,'8530218622c3c96a2f1709826276f260f89e4657'),(2268,'2020-11-25 15:06:46',610,1,'8530218622c3c96a2f1709826276f260f89e4657');
/*!40000 ALTER TABLE `game_user_login` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `game_user_spin`
--

DROP TABLE IF EXISTS `game_user_spin`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `game_user_spin` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `game_user_id` int(10) unsigned NOT NULL,
  `spinCount` int(11) DEFAULT 0,
  `last` datetime DEFAULT current_timestamp(),
  PRIMARY KEY (`id`),
  KEY `game_user_spin_game_user_id_fk` (`game_user_id`),
  CONSTRAINT `game_user_spin_game_user_id_fk` FOREIGN KEY (`game_user_id`) REFERENCES `game_user` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=46 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `game_user_spin`
--

LOCK TABLES `game_user_spin` WRITE;
/*!40000 ALTER TABLE `game_user_spin` DISABLE KEYS */;
INSERT INTO `game_user_spin` VALUES (5,581,7,'2020-08-07 13:30:49'),(6,579,49,'2020-10-08 20:21:03'),(7,586,40,'2020-09-07 16:30:46'),(8,583,1083,'2020-11-24 19:28:06'),(9,585,22,'2020-09-30 13:35:08'),(10,584,113,'2020-09-16 19:28:07'),(11,587,168,'2020-10-09 21:29:24'),(12,588,0,'2020-09-02 04:15:35'),(13,39,156,'2020-09-21 14:29:51'),(14,591,14,'2020-09-09 13:36:25'),(15,592,5,'2020-09-09 13:15:10'),(16,593,357,'2020-11-16 16:13:57'),(17,582,50,'2020-11-09 19:40:07'),(18,595,8,'2020-09-11 19:32:19'),(19,596,88,'2020-09-22 14:26:08'),(20,601,11,'2020-10-29 17:11:28'),(21,608,1,'2020-09-16 23:54:35'),(22,609,92,'2020-10-09 02:44:21'),(23,610,116,'2020-11-30 21:12:04'),(24,611,20,'2020-09-30 13:54:29'),(25,612,29,'2020-10-15 14:28:25'),(26,613,52,'2020-11-02 16:32:56'),(27,614,56,'2020-11-03 13:06:56'),(28,600,7,'2020-10-29 17:47:48'),(29,616,3,'2020-10-12 09:51:10'),(30,617,2,'2020-10-15 09:00:48'),(31,618,1,'2020-10-15 11:41:16'),(32,625,21,'2020-10-29 17:36:12'),(33,634,4,'2020-10-31 14:17:59'),(34,631,1,'2020-11-01 18:13:21'),(35,641,41,'2020-11-04 23:47:03'),(36,650,11,'2020-11-10 15:39:00'),(37,646,5,'2020-11-10 13:22:22'),(38,40,4,'2020-11-10 12:57:27'),(39,652,10,'2020-11-10 18:04:24'),(40,654,10,'2020-11-10 18:19:43'),(41,655,5,'2020-11-16 15:42:41'),(42,656,13,'2020-11-16 16:07:03'),(43,657,18,'2020-11-17 10:56:18'),(44,658,3,'2020-11-16 16:49:31'),(45,663,3,'2020-11-17 16:03:18');
/*!40000 ALTER TABLE `game_user_spin` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `iron_source`
--

DROP TABLE IF EXISTS `iron_source`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `iron_source` (
  `id` int(10) unsigned DEFAULT NULL,
  `eventId` varchar(128) DEFAULT NULL,
  `createdAd` datetime DEFAULT current_timestamp(),
  `userId` int(10) unsigned DEFAULT NULL,
  `rewards` int(11) DEFAULT NULL,
  `currency` tinytext DEFAULT NULL,
  UNIQUE KEY `iron_source_eventId_uindex` (`eventId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `iron_source`
--

LOCK TABLES `iron_source` WRITE;
/*!40000 ALTER TABLE `iron_source` DISABLE KEYS */;
INSERT INTO `iron_source` VALUES (2,'26abYe75a8195849b036aY0','2020-09-20 14:22:12',NULL,NULL,NULL),(3,'26abY147543ad5426c2edY0','2020-09-20 14:37:22',39,100,'spins'),(4,'26abY6186229df8bb0d8fY0','2020-09-20 14:37:22',39,100,'spins'),(NULL,'26abY5ba0997dda4584feY0',NULL,39,100,'spins'),(NULL,'26abYfa63c40bdfc534Y0',NULL,39,100,'spins'),(NULL,'26abY337da41f9b11ba73Y0',NULL,39,100,'spins'),(NULL,'26abY891283d4e0d7d5f1Y0',NULL,39,100,'spins'),(NULL,'26abYaf427b3e5a2b5c61Y0',NULL,39,100,'spins'),(NULL,'26abYbcfe40628aaf9c7dY0',NULL,39,100,'spins'),(NULL,'26abYcd5be5a0fcedf90eY0',NULL,39,100,'spins'),(NULL,'26abYcba8fe2be335faa4Y0',NULL,39,100,'spins'),(NULL,'26abYb0631f1a6a3bf79aY0',NULL,39,100,'spins'),(NULL,'26abYd15f2dbc5a1c466eY0',NULL,39,100,'spins'),(NULL,'26abY35ab3c7bb64fd86fY0','2020-09-20 18:17:51',39,100,'spins'),(NULL,'26abYf3ff9bf441059eb1Y0','2020-09-20 18:17:51',39,100,'spins'),(NULL,'26abY8b23d23771285d80Y0','2020-09-20 18:18:07',39,100,'spins'),(NULL,'26abY208a89024f949071Y0','2020-09-20 18:18:07',39,100,'spins'),(NULL,'26abY91a60d35a8e7a6d5Y0','2020-09-20 18:18:33',39,100,'spins'),(NULL,'26abYf6bedb43b93f3fdY0','2020-09-20 18:18:34',39,100,'spins'),(NULL,'26abY7f3750aea9f0c6bfY0','2020-09-20 18:31:26',39,100,'spins'),(NULL,'26abY46da6c344b7f148cY0','2020-09-20 18:33:36',39,100,'spins'),(NULL,'26abYff3a6a41535ed022Y0','2020-09-20 18:37:25',39,100,'spins'),(NULL,'26abYa5e5bf9fdc3ad443Y0','2020-09-20 18:38:13',39,100,'spins'),(NULL,'26abYdb1d220a94b1a4deY0','2020-09-20 18:38:43',39,100,'spins'),(NULL,'26abYa51925067359ba38Y0','2020-09-20 18:46:33',39,100,'spins'),(NULL,'26abYda33841a9c001320Y0','2020-09-20 18:46:33',39,100,'spins'),(NULL,'26abY69d3382c89e8fd0cY0','2020-09-20 18:50:01',39,100,'spins'),(NULL,'26abY3908d4a6345b20ffY0','2020-09-20 18:50:01',39,100,'spins'),(NULL,'26abY4c971fee36b65169Y0','2020-09-20 18:54:03',39,100,'spins'),(NULL,'26abY9f1e536adab2c814Y0','2020-09-20 18:56:02',39,100,'spins'),(NULL,'26abY6a2d38c3ddd9258dY0','2020-09-20 19:52:45',39,100,'spins'),(NULL,'26abY86986274ab960274Y0','2020-09-20 19:52:46',39,100,'spins'),(NULL,'26abY783bc8e9b07cc22dY0','2020-09-20 19:54:42',39,100,'spins'),(NULL,'26abY493acf4cda5a2805Y0','2020-09-20 19:54:42',39,100,'spins'),(NULL,'2235896','2020-09-20 23:43:24',583,2,'spins'),(NULL,'26abY7d794c8957b4c7Y0','2020-09-22 12:56:58',596,5,'spins'),(NULL,'26abY57b495acd9619b7Y0','2020-09-22 12:57:57',596,5,'spins'),(NULL,'26abYb9e6d9fd71b965e4Y0','2020-09-24 22:46:12',583,100,'spins'),(NULL,'26abYc8b2a6414880fe1eY0','2020-09-24 22:46:59',583,100,'spins'),(NULL,'T1NB92NYN56OIXY2AEJ5T3Z77TRK9YU6','2020-09-24 22:49:43',593,2,'spins'),(NULL,'26abY82bd392db38ffda6Y0','2020-09-24 22:51:50',583,2,'spins'),(NULL,'S95AAN7DVTHEYM4YA96XA116GQJQ3J72','2020-09-24 22:54:48',583,2,'spins'),(NULL,'S95AAN7dDVTHEYM4YA96XA116GQJQ3J72','2020-09-24 22:55:54',583,2,'spins'),(NULL,'2235d896','2020-09-24 22:56:19',39,2,'spins'),(NULL,'S95AAN7dDVTHEYM4YA96XA116GQJQ3J7','2020-09-24 22:57:57',583,2,'spins'),(NULL,'26abYe0c4fdf47dd74db5Y0','2020-09-24 22:58:35',583,100,'spins'),(NULL,'26abY23259588b409b115Y0','2020-09-24 23:05:41',39,100,'spins'),(NULL,'26abY77c569e383d0fddY0','2020-09-24 23:08:25',593,5,'spins'),(NULL,'26abY947dde86395cb5dY0','2020-09-24 23:10:44',593,5,'spins'),(NULL,'26abY7f4c8f233e3ae33Y0','2020-09-24 23:11:04',593,5,'spins'),(NULL,'26abY7facb436bcd7805Y0','2020-09-24 23:11:48',593,5,'spins'),(NULL,'26abY56c4434ddfd6369Y0','2020-09-25 08:21:44',587,5,'spins'),(NULL,'26abY7b65d0a12fef8a7Y0','2020-09-25 08:41:25',587,5,'spins'),(NULL,'26abY3aef246bf3d97d59Y0','2020-09-25 21:15:48',39,100,'spins');
/*!40000 ALTER TABLE `iron_source` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `jackpot`
--

DROP TABLE IF EXISTS `jackpot`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `jackpot` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cycle` int(11) NOT NULL,
  `prize` int(11) unsigned NOT NULL,
  `state` varchar(50) COLLATE utf8mb4_unicode_ci DEFAULT 'next',
  `repeated` int(10) unsigned NOT NULL DEFAULT 0,
  `spinCount` int(11) unsigned NOT NULL DEFAULT 0,
  `confirmed` tinyint(1) DEFAULT 0,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `jackpot`
--

LOCK TABLES `jackpot` WRITE;
/*!40000 ALTER TABLE `jackpot` DISABLE KEYS */;
INSERT INTO `jackpot` VALUES (4,10,1000,'past',0,10,1),(5,25,500,'past',181,26,1),(6,5,100,'past',23,5,1),(7,10,500,'past',4,10,1),(8,25,1000,'past',1,25,1),(9,20,5000,'past',9,20,1),(10,20,100,'live',54,10,1);
/*!40000 ALTER TABLE `jackpot` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `jackpot_win`
--

DROP TABLE IF EXISTS `jackpot_win`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `jackpot_win` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `game_user_id` int(10) unsigned NOT NULL,
  `createdAt` datetime DEFAULT current_timestamp(),
  `state` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'won',
  `jackpot_id` int(10) unsigned NOT NULL,
  `notified` tinyint(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  KEY `jackpot_win_game_user_id_fk` (`game_user_id`),
  KEY `jackpot_win_jackpot_id_fk` (`jackpot_id`),
  CONSTRAINT `jackpot_win_game_user_id_fk` FOREIGN KEY (`game_user_id`) REFERENCES `game_user` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `jackpot_win_jackpot_id_fk` FOREIGN KEY (`jackpot_id`) REFERENCES `jackpot` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=276 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `jackpot_win`
--

LOCK TABLES `jackpot_win` WRITE;
/*!40000 ALTER TABLE `jackpot_win` DISABLE KEYS */;
INSERT INTO `jackpot_win` VALUES (1,39,NULL,'won',5,1),(2,39,NULL,'won',5,1),(3,587,NULL,'won',5,1),(4,591,NULL,'won',5,1),(5,587,NULL,'won',5,1),(6,587,NULL,'won',5,1),(7,587,NULL,'won',5,1),(8,592,NULL,'won',5,1),(9,591,NULL,'won',5,1),(10,587,NULL,'won',5,1),(11,591,NULL,'won',5,0),(12,591,NULL,'won',5,0),(13,591,NULL,'won',5,0),(14,587,NULL,'won',5,1),(15,587,NULL,'won',5,1),(16,587,NULL,'won',5,1),(17,592,NULL,'won',5,1),(18,579,NULL,'won',5,0),(19,579,NULL,'won',5,0),(20,579,NULL,'won',5,0),(21,584,NULL,'won',5,1),(22,579,NULL,'won',5,0),(23,579,NULL,'won',5,0),(24,584,NULL,'won',5,1),(25,584,NULL,'won',5,1),(26,584,NULL,'won',5,1),(27,39,NULL,'won',5,1),(28,39,NULL,'won',5,1),(29,584,NULL,'won',5,1),(30,587,NULL,'won',5,1),(31,587,NULL,'won',5,1),(32,584,NULL,'won',5,1),(33,584,NULL,'won',5,1),(34,587,NULL,'won',5,1),(35,591,NULL,'won',5,0),(36,583,NULL,'won',5,1),(37,583,NULL,'won',5,1),(38,583,NULL,'won',5,1),(39,584,NULL,'won',5,1),(40,579,NULL,'won',5,0),(41,583,NULL,'won',5,1),(42,583,NULL,'won',5,1),(43,583,NULL,'won',5,1),(44,583,NULL,'won',5,1),(45,583,NULL,'won',5,1),(46,583,NULL,'won',5,1),(47,39,'2020-09-10 17:45:20','won',5,1),(48,39,'2020-09-10 17:45:27','won',5,1),(49,39,'2020-09-10 17:45:35','won',5,1),(50,39,'2020-09-10 17:45:53','won',5,1),(51,39,'2020-09-10 17:47:52','won',5,1),(52,39,'2020-09-10 17:59:07','won',5,1),(53,39,'2020-09-10 17:59:23','won',5,1),(54,39,'2020-09-10 17:59:36','won',5,1),(55,39,'2020-09-10 17:59:46','won',5,1),(56,39,'2020-09-10 17:59:49','won',5,1),(57,39,'2020-09-10 18:00:14','won',5,1),(58,39,'2020-09-10 18:00:30','won',5,1),(59,39,'2020-09-10 18:00:36','won',5,1),(60,39,'2020-09-10 18:00:40','won',5,1),(61,39,'2020-09-10 18:00:44','won',5,1),(62,39,'2020-09-10 18:00:51','won',5,1),(63,39,'2020-09-10 18:00:56','won',5,1),(64,39,'2020-09-10 18:01:03','won',5,1),(65,39,'2020-09-10 18:24:57','won',5,1),(66,39,'2020-09-10 18:25:01','won',5,1),(67,39,'2020-09-10 18:25:03','won',5,1),(68,39,'2020-09-10 18:25:05','won',5,1),(69,39,'2020-09-10 18:25:07','won',5,1),(70,39,'2020-09-10 18:26:57','won',5,1),(71,39,'2020-09-10 18:27:36','won',5,1),(72,579,'2020-09-11 15:54:43','won',5,0),(73,579,'2020-09-11 15:54:46','won',5,0),(74,39,'2020-09-11 15:55:30','won',5,1),(75,583,'2020-09-11 16:04:49','won',5,1),(76,39,'2020-09-11 16:29:42','won',5,1),(77,583,'2020-09-11 17:02:30','won',5,1),(78,583,'2020-09-11 17:30:59','won',5,1),(79,583,'2020-09-11 17:31:55','won',5,1),(80,583,'2020-09-11 17:35:14','won',5,1),(81,582,'2020-09-11 17:37:03','won',5,1),(82,582,'2020-09-11 17:43:02','won',5,1),(83,583,'2020-09-11 17:45:25','won',5,1),(84,583,'2020-09-11 17:46:19','won',5,1),(85,595,'2020-09-11 17:58:52','won',5,1),(86,583,'2020-09-11 17:59:45','won',5,1),(87,595,'2020-09-11 18:51:21','won',5,1),(88,595,'2020-09-11 19:32:17','won',5,1),(89,595,'2020-09-11 19:32:19','won',5,1),(90,39,'2020-09-11 23:35:52','won',5,1),(91,39,'2020-09-11 23:35:56','won',5,1),(92,39,'2020-09-11 23:41:56','won',5,1),(93,583,'2020-09-14 13:04:13','won',5,1),(94,583,'2020-09-14 13:14:35','won',5,1),(95,596,'2020-09-14 15:54:48','won',5,1),(96,596,'2020-09-14 17:03:00','won',5,1),(97,583,'2020-09-14 17:05:27','won',5,1),(98,583,'2020-09-14 17:06:44','won',5,1),(99,39,'2020-09-15 13:15:25','won',5,1),(100,583,'2020-09-15 13:33:47','won',5,1),(101,583,'2020-09-15 14:43:33','won',5,1),(102,583,'2020-09-15 14:44:31','won',5,1),(103,583,'2020-09-15 14:45:16','won',5,1),(104,583,'2020-09-16 13:08:26','won',5,1),(105,583,'2020-09-16 13:16:06','won',5,1),(106,583,'2020-09-16 13:21:22','won',5,1),(107,583,'2020-09-16 13:21:57','won',5,1),(108,583,'2020-09-16 13:52:53','won',5,1),(109,584,'2020-09-16 14:54:42','won',5,1),(110,583,'2020-09-16 14:55:20','won',5,1),(111,584,'2020-09-16 15:03:15','won',5,0),(112,584,'2020-09-16 15:04:36','won',5,0),(113,583,'2020-09-16 18:31:49','won',5,1),(114,583,'2020-09-16 18:32:54','won',5,1),(115,584,'2020-09-16 19:26:41','won',5,0),(116,583,'2020-09-16 19:27:48','won',5,1),(117,583,'2020-09-16 19:27:52','won',5,1),(118,584,'2020-09-16 19:28:02','won',5,0),(119,584,'2020-09-16 19:28:06','won',5,0),(120,583,'2020-09-16 19:35:29','won',5,1),(121,583,'2020-09-16 19:45:43','won',5,1),(122,582,'2020-09-16 19:47:14','won',5,1),(123,582,'2020-09-16 19:47:18','won',5,1),(124,582,'2020-09-16 19:47:21','won',5,1),(125,601,'2020-09-16 20:07:24','won',5,1),(126,39,'2020-09-16 22:55:14','won',5,1),(127,608,'2020-09-16 23:54:35','won',5,0),(128,583,'2020-09-17 14:42:13','won',5,1),(129,583,'2020-09-17 15:31:50','won',5,1),(130,593,'2020-09-17 19:23:01','won',5,1),(131,593,'2020-09-17 19:23:20','won',5,1),(132,593,'2020-09-17 19:24:55','won',5,1),(133,593,'2020-09-17 19:26:26','won',5,1),(134,593,'2020-09-17 19:27:46','won',5,1),(135,593,'2020-09-17 19:30:14','won',5,1),(136,583,'2020-09-17 19:50:41','won',5,1),(137,583,'2020-09-17 19:53:36','won',5,1),(138,583,'2020-09-17 19:53:53','won',5,1),(139,583,'2020-09-17 19:55:12','won',5,1),(140,593,'2020-09-17 19:58:24','won',5,1),(141,593,'2020-09-17 19:59:29','won',5,1),(142,593,'2020-09-17 19:59:51','won',5,1),(143,593,'2020-09-17 21:45:49','won',5,1),(144,593,'2020-09-17 21:56:01','won',5,1),(145,593,'2020-09-17 22:14:15','won',5,1),(146,593,'2020-09-18 02:18:35','won',5,1),(147,593,'2020-09-18 12:13:55','won',5,1),(148,593,'2020-09-18 12:28:49','won',5,1),(149,587,'2020-09-18 12:32:36','won',5,1),(150,587,'2020-09-18 12:34:03','won',5,1),(151,587,'2020-09-18 12:43:20','won',5,1),(152,587,'2020-09-18 13:05:21','won',5,1),(153,593,'2020-09-18 15:52:44','won',5,1),(154,593,'2020-09-18 15:54:38','won',5,1),(155,609,'2020-09-18 18:20:24','won',5,1),(156,596,'2020-09-18 18:39:13','won',5,1),(157,593,'2020-09-18 18:42:56','won',5,1),(158,596,'2020-09-18 18:48:33','won',5,1),(159,593,'2020-09-19 20:41:42','won',5,1),(160,583,'2020-09-20 23:10:53','won',5,1),(161,39,'2020-09-20 23:18:17','won',5,1),(162,583,'2020-09-20 23:35:28','won',5,1),(163,39,'2020-09-20 23:58:05','won',5,1),(164,582,'2020-09-21 00:05:14','won',5,1),(165,582,'2020-09-21 15:34:54','won',5,1),(166,583,'2020-09-21 16:19:02','won',5,1),(167,610,'2020-09-22 10:48:12','won',5,1),(168,596,'2020-09-22 12:58:07','won',5,1),(169,596,'2020-09-22 13:54:32','won',5,1),(170,587,'2020-09-22 14:22:15','won',5,1),(171,610,'2020-09-22 14:53:54','won',5,1),(172,583,'2020-09-22 16:01:36','won',5,1),(173,583,'2020-09-22 16:03:02','won',5,1),(174,593,'2020-09-24 20:51:12','won',5,1),(175,583,'2020-09-24 20:55:57','won',5,1),(176,583,'2020-09-24 22:03:44','won',5,1),(177,593,'2020-09-24 22:15:07','won',5,1),(178,593,'2020-09-24 22:59:57','won',5,1),(179,593,'2020-09-24 23:10:15','won',5,1),(180,587,'2020-09-25 08:21:53','won',5,1),(181,587,'2020-09-25 08:23:35','won',6,1),(182,587,'2020-09-25 08:39:51','won',6,1),(183,587,'2020-09-25 08:40:55','won',6,1),(184,587,'2020-09-25 08:41:34','won',6,1),(185,587,'2020-09-25 13:05:14','won',6,1),(186,587,'2020-09-25 13:10:25','won',6,1),(187,587,'2020-09-25 13:10:53','won',6,1),(188,585,'2020-09-28 09:14:31','won',6,1),(189,585,'2020-09-28 09:21:18','won',6,1),(190,611,'2020-09-28 13:29:18','won',6,1),(191,611,'2020-09-28 13:31:47','won',6,1),(192,611,'2020-09-28 13:46:22','won',6,1),(193,612,'2020-09-28 16:27:39','won',6,1),(194,611,'2020-09-28 16:33:23','won',6,1),(195,612,'2020-09-28 16:43:38','won',6,1),(196,612,'2020-09-29 14:03:29','won',6,1),(197,612,'2020-09-29 14:20:07','won',6,1),(198,612,'2020-09-29 14:23:43','won',6,1),(199,612,'2020-09-29 14:25:59','won',6,1),(200,612,'2020-09-29 14:26:34','won',6,1),(201,611,'2020-09-30 13:44:18','won',6,1),(202,613,'2020-09-30 14:32:21','won',6,1),(203,579,'2020-09-30 15:02:57','won',6,0),(204,579,'2020-09-30 19:27:20','won',6,0),(205,583,'2020-09-30 19:44:57','won',7,1),(206,583,'2020-10-01 17:50:39','won',7,1),(207,583,'2020-10-01 18:10:55','won',7,1),(208,583,'2020-10-01 18:16:44','won',7,1),(209,583,'2020-10-01 18:21:29','won',7,1),(210,583,'2020-10-01 18:33:32','won',8,1),(211,614,'2020-10-02 08:53:11','won',8,1),(212,583,'2020-10-02 15:37:02','won',9,1),(213,583,'2020-10-05 12:55:25','won',9,1),(214,610,'2020-10-06 13:35:23','won',9,1),(215,613,'2020-10-06 21:43:19','won',9,1),(216,593,'2020-10-07 18:32:27','won',9,1),(217,593,'2020-10-07 19:56:12','won',9,1),(218,593,'2020-10-08 18:03:22','won',9,1),(219,583,'2020-10-08 18:25:15','won',9,1),(220,593,'2020-10-08 19:42:31','won',9,1),(221,583,'2020-10-08 21:15:03','won',9,1),(222,583,'2020-10-08 23:23:06','won',10,1),(223,609,'2020-10-09 02:12:09','won',10,1),(224,609,'2020-10-09 02:41:30','won',10,0),(225,613,'2020-10-09 09:03:41','won',10,1),(226,593,'2020-10-09 13:44:07','won',10,1),(227,593,'2020-10-09 14:27:44','won',10,1),(228,600,'2020-10-12 09:49:30','won',10,1),(229,614,'2020-10-12 11:22:39','won',10,1),(230,593,'2020-10-12 14:06:30','won',10,1),(231,583,'2020-10-14 14:14:51','won',10,1),(232,610,'2020-10-23 16:10:58','won',10,1),(233,583,'2020-10-23 19:26:19','won',10,1),(234,583,'2020-10-23 19:36:33','won',10,1),(235,583,'2020-10-23 19:51:02','won',10,1),(236,583,'2020-10-26 14:36:24','won',10,1),(237,593,'2020-10-27 17:54:21','won',10,1),(238,625,'2020-10-29 17:13:19','won',10,1),(239,625,'2020-10-29 17:32:36','won',10,1),(240,583,'2020-10-30 12:04:34','won',10,1),(241,613,'2020-11-02 15:59:52','won',10,1),(242,613,'2020-11-02 16:29:55','won',10,1),(243,613,'2020-11-02 16:31:49','won',10,1),(244,583,'2020-11-02 17:43:10','won',10,1),(245,583,'2020-11-03 02:45:00','won',10,1),(246,641,'2020-11-04 22:52:53','won',10,1),(247,641,'2020-11-04 23:41:24','won',10,1),(248,583,'2020-11-05 00:03:23','won',10,1),(249,583,'2020-11-05 17:59:20','won',10,1),(250,583,'2020-11-05 18:08:52','won',10,1),(251,583,'2020-11-05 18:14:34','won',10,1),(252,583,'2020-11-05 18:36:05','won',10,1),(253,583,'2020-11-05 18:38:10','won',10,1),(254,583,'2020-11-05 18:43:11','won',10,1),(255,583,'2020-11-05 18:45:17','won',10,1),(256,583,'2020-11-05 19:31:13','won',10,1),(257,583,'2020-11-05 19:42:56','won',10,1),(258,583,'2020-11-05 19:55:44','won',10,1),(259,583,'2020-11-05 20:20:06','won',10,1),(260,583,'2020-11-05 20:25:30','won',10,1),(261,583,'2020-11-06 15:28:50','won',10,1),(262,583,'2020-11-09 15:45:05','won',10,1),(263,583,'2020-11-09 18:06:01','won',10,1),(264,583,'2020-11-09 21:11:43','won',10,1),(265,40,'2020-11-10 12:56:34','won',10,1),(266,583,'2020-11-10 17:47:30','won',10,1),(267,654,'2020-11-10 18:16:12','won',10,1),(268,593,'2020-11-16 15:45:38','won',10,1),(269,656,'2020-11-16 15:48:26','won',10,1),(270,657,'2020-11-16 16:12:25','won',10,1),(271,658,'2020-11-16 16:46:59','won',10,0),(272,583,'2020-11-16 17:50:48','won',10,1),(273,583,'2020-11-24 19:27:51','won',10,1),(274,610,'2020-11-30 21:03:02','won',10,0),(275,610,'2020-11-30 21:11:51','won',10,0);
/*!40000 ALTER TABLE `jackpot_win` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `language`
--

DROP TABLE IF EXISTS `language`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `language` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `language_code` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL,
  `texture_url` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `localization_url` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `deleted` tinyint(1) NOT NULL DEFAULT 0,
  `is_default` tinyint(1) DEFAULT 0,
  `localization_json` text COLLATE utf8mb4_unicode_ci DEFAULT '',
  `updated_at` datetime DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `UK_language_language_code` (`language_code`)
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `language`
--

LOCK TABLES `language` WRITE;
/*!40000 ALTER TABLE `language` DISABLE KEYS */;
INSERT INTO `language` VALUES (1,'en-US','/localization/1__en-US_05768824.png','/localization/1__en-US_09616920.json',0,0,'%7B%22languageCode%22%3A%22en-US%22%2C%22spinBtnTxt%22%3A%22PLAY%22%2C%22multiplierTxt%22%3A%22%7B0%7Dx%22%2C%22jackpotValueTxt%22%3A%22%7B0%7D%20%7B1%7D%22%2C%22spinAmountTxt%22%3A%22%7B0%7D%20x%20%7B1%7D%22%2C%22slotFrontJackpotTxt%22%3A%22jackpot%21%22%2C%22paytableTitle%22%3A%22Pay%20Table%22%2C%22paysDisclaimer%22%3A%22All%20payments%20are%20multipliable%20except%20for%20the%20jackpot%20and%20the%20free%20ticket%20prizes.%22%2C%22paytableLine%22%3A%22%7B0%7D%20%7B1%7D%22%2C%22tutorialSlide1%22%3A%22To%20start%20playing%20%3Cbr%3E%20Sloto%20Prizes%3Cbr%3Etap%20on%20the%20button%3Cbr%3ESPIN%22%2C%22tutorialSlide2%22%3A%22Increase%20your%20bet%20and%20multiply%20your%20gains%20by%20tapping%20on%20the%20green%20button%21%22%2C%22tutorialSlide3%22%3A%22Hit%20the%20JACKPOT%3Cbr%3Eto%20win%22%2C%22tutorialSlide4%22%3A%22Collect%20coins%20to%20buy%3Cbr%3ERaffle%20Tickets%22%2C%22tutorialSlide5%22%3A%22Use%20your%20tickets%3Cbr%3Eto%20participate%20in%20our%3Cbr%3Eawesome%20Raffles%3Cbr%3Eand%20win%3Cbr%3Eamazing%20prizes%21%22%2C%22tutorialSlide6%22%3A%22That%27s%20it%21%3Cbr%3EYou%27ve%20completed%20the%20tutorial...%20Get%20some%20free%20spins%20on%20the%20house%20so%20you%20can%20start%20playing%20Sloto%20Prizes%21%3Cbr%3EGood%20luck%21%22%2C%22tutorialReward%22%3A%22%7B0%7D%3A%20%7B1%7D%22%2C%22iapInitFailed%22%3A%22IAP%20Controller%20Init%20Fail%3A%20%7B0%7D.%22%2C%22iapSuccess%22%3A%22%7B0%7D%3A%20Purchase%20Complete%21%22%2C%22iapRestoreFailed%22%3A%22Could%20not%20restore.%22%2C%22iapFailedBackend%22%3A%22There%20was%20a%20server%20error%2C%20but%20the%20transaction%20will%20be%20completed%20soon.%3Cbr%3E%28%7B0%7D%29%22%2C%22iapFailed%22%3A%22The%20%27%7B0%7D%27%20transaction%20was%20unsuccessful.%3Cbr%3E%7B1%7D.%22%2C%22iapFailedPurchasingUnavailable%22%3A%22Purchasing%20unavailable%22%2C%22iapFailedExistingPurchasePending%22%3A%22An%20existing%20purchase%20is%20pending%22%2C%22iapFailedProductUnavailable%22%3A%22Unavailable%20product%22%2C%22iapFailedSignatureInvalid%22%3A%22Invalid%20signature%22%2C%22iapFailedUserCancelled%22%3A%22The%20purchase%20was%20cancelled%22%2C%22iapFailedPaymentDeclined%22%3A%22The%20payment%20was%20declined%22%2C%22iapFailedDuplicateTransaction%22%3A%22Duplicate%20transaction%22%2C%22iapFailedUnknown%22%3A%22Unknown%20error%22%2C%22iapPopupTitle%22%3A%22Remove%20Ads%22%2C%22iapPopupPurchaseDesc%22%3A%22Remove%20the%20ads%20in%20the%20game.%3Cbr%3E%3Cbr%3ENote%20that%20you%20still%20will%20be%20able%20to%20watch%20video%20Ads%20to%20obtain%20free%20spins%20if%20you%20want.%22%2C%22iapPopupRestoreDesc%22%3A%22Have%20you%20already%20paid%20for%20this%3F%20Restore%20your%20purchase.%22%2C%22iapPopupPurchaseBtn%22%3A%22remove%20ads%20for%20%7B0%7D%20%7B1%7D%22%2C%22iapPopupRestoreBtn%22%3A%22restore%20purchase%22%2C%22spinTxt%22%3A%22spin%22%2C%22spinsTxt%22%3A%22spins%22%2C%22coinTxt%22%3A%22coin%22%2C%22coinsTxt%22%3A%22coins%22%2C%22ticketTxt%22%3A%22ticket%22%2C%22ticketsTxt%22%3A%22tickets%22%2C%22jackpotTxt%22%3A%22jackpot%22%2C%22gainsTxt%22%3A%22%7B0%7D%20%7B1%7D%22%2C%22boosterMsg%22%3A%22with%20%7B0%7D%20boost%21%22%2C%22jackpotWinnerMsg%22%3A%22Player%20%7B0%7D%20from%20%7B1%7D%20just%20won%20a%20%7B2%7D%7B3%7D%20Jackpot%21%21%22%2C%22adRewardCongrats%22%3A%22Congratulations%21%20You%27ve%20got%22%2C%22adRewardCurrencyAmount%22%3A%22%7B0%7D%20%7B1%7D%22%2C%22adRewardConfirmationMainBtnTxt%22%3A%22All%20right%21%22%2C%22offerWallNotAvailableTxt%22%3A%22Sorry%2C%20the%20Offer%20Wall%20is%20not%20available%20at%20this%20time%21%22%2C%22settingsTitle%22%3A%22Settings%22%2C%22soundTxt%22%3A%22Sound%3A%22%2C%22languageTxt%22%3A%22Language%3A%22%2C%22fbUserCancelledLogin%22%3A%22User%20cancelled%20login.%22%2C%22fbNotInitialized%22%3A%22Cannot%20connect%20to%20Facebook%20at%20this%20time.%22%2C%22profileSignupTitle%22%3A%22Sign%20Up%22%2C%22profileSignupConnect%22%3A%22Connect%22%2C%22profileWindowTitle%22%3A%22Welcome%22%2C%22profileTitle%22%3A%22My%20Profile%22%2C%22profileDescription%22%3A%22Fill%20your%20profile%20with%20the%20correct%20information%20to%20receive%20amazing%20prizes%21%22%2C%22formErrorTxt%22%3A%22Please%20enter%20all%20required%20data.%22%2C%22formSubmitError%22%3A%22Error%20submiting%20form%3A%20%7B0%7D%22%2C%22formSubmitSuccess%22%3A%22Message%20sent%2C%20someone%20will%20be%20in%20touch%20with%20you%20shortly.%22%2C%22registrationComplete%22%3A%22Registration%20Complete%21%22%2C%22nameLbl%22%3A%22First%20Name%22%2C%22lastNameLbl%22%3A%22Last%20Name%22%2C%22birthDateLbl%22%3A%22Date%20of%20birth%3A%22%2C%22emailLbl%22%3A%22E-Mail%22%2C%22phoneLbl%22%3A%22Phone%22%2C%22addressLbl%22%3A%22Address%22%2C%22cityLbl%22%3A%22City%22%2C%22zipCodeLbl%22%3A%22Zip%20Code%22%2C%22stateLbl%22%3A%22State%22%2C%22countryLbl%22%3A%22Country%22%2C%22titleLbl%22%3A%22Title%22%2C%22mrLbl%22%3A%22Mr.%22%2C%22mrsLbl%22%3A%22Mrs.%22%2C%22dayInitial%22%3A%22DD%22%2C%22monthInitial%22%3A%22MM%22%2C%22yearInitial%22%3A%22YYYY%22%2C%22formFootCaption%22%3A%22*Tap%20to%20edit.%5C%5CnWe%20use%20this%20information%20to%20send%20the%20prizes.%20Make%20sure%20the%20information%20you%20provide%20is%20correct.%22%2C%22sideMenuObtainTickets%22%3A%22Obtain%20Tickets%21%22%2C%22sideMenuGifts%22%3A%22Gifts%22%2C%22sideMenuTombola%22%3A%22Raffle%20History%22%2C%22sideMenuBonus%22%3A%22Bonus%22%2C%22sideMenuWinners%22%3A%22Winners%22%2C%22sideMenuProfile%22%3A%22My%20Profile%22%2C%22sideMenuSettings%22%3A%22Settings%22%2C%22sideMenuHelp%22%3A%22Help%22%2C%22sideMenuQuit%22%3A%22Quit%22%2C%22sideMenuRemoveAds%22%3A%22Remove%20Ads%22%2C%22ticketsForParticipationTxt%22%3A%22%7B0%7D%20ticket%28s%29%20%3D%201%20participation%22%2C%22giftScrollItemBtnTxT%22%3A%22Participate%22%2C%22participationPopupClosingDate%22%3A%22Closing%20date%22%2C%22participationPopupTimeLeft%22%3A%22Time%20Left%3A%20%7B0%7Dd%20%7B1%7Dh%20%7B2%7Dm%22%2C%22participationPopupParticipationsWanted%22%3A%22How%20many%20participations%20do%20you%20want%3F%22%2C%22notEnoughTickets%22%3A%22You%20dont%20have%20enough%20tickets%20to%20participate%20on%20this%20prize.%22%2C%22notEnoughTicketsMore%22%3A%22You%20dont%20have%20enough%20tickets%20to%20buy%20more%20participations%20on%20this%20prize.%22%2C%22raffleParticipationsCount%22%3A%22You%20have%20%7B0%7D%20participations%20for%20this%20raffle.%22%2C%22giftsScreenTitle%22%3A%22Gifts%21%22%2C%22giftsScreenDescription%22%3A%22Use%20your%20tickets%20to%20participate%20and%20win%20amazing%20prizes%21%22%2C%22raffleConfirmationGotTxt%22%3A%22You%27ve%20got%22%2C%22raffleConfirmationParticipationsTxT%22%3A%22%7B0%7D%20participation%28s%29%22%2C%22raffleConfirmationForTxt%22%3A%22for%3A%22%2C%22raffleConfirmationDateTxt%22%3A%22closing%20date%22%2C%22raffleConfirmationMainBtnTxt%22%3A%22great%22%2C%22tombolaHistoryScreenTitle%22%3A%22My%20Tombola%20History%22%2C%22tombolaHistoryScreenDescription%22%3A%22Use%20your%20tickets%20to%20participate%20and%20win%20awesome%20prizes.%22%2C%22tombolaHistoryScreenDate%22%3A%22Date%22%2C%22tombolaHistoryScreenTickets%22%3A%22Tickets%22%2C%22tombolaHistoryScreenExpiration%22%3A%22Expiration%22%2C%22tombolaHistoryScreenComments%22%3A%22Prize%22%2C%22winnerLineNameTxt%22%3A%22won%20by%20%7B0%7D%22%2C%22winnersListTitleTxt%22%3A%22They%20are%20the%20winners%21%22%2C%22winnersListDescriptionTxt%22%3A%22They%27ve%20played%20and%20won%20awesome%20prizes.%22%2C%22happyTitle%22%3A%22Hurra%21%22%2C%22sadTitle%22%3A%22Oh%20no%21%22%2C%22walletTitle%22%3A%22Wallet%22%2C%22notificationMessageSample%22%3A%22Sample%20Notification%22%2C%22nextEventTxt%22%3A%22Next%20%7B0%7D%20in%20%7B1%7D%22%2C%22submitTxt%22%3A%22Submit%22%2C%22updateTxt%22%3A%22Update%22%2C%22okTxt%22%3A%22Ok%22%2C%22retryTxt%22%3A%22Retry%22%2C%22textureDownloadError%22%3A%22%7B0%7D%20-%20Error%20downloading%20texture%3A%20%7B1%7D%20%7B2%7D%22%2C%22localizationConfigError%22%3A%22Error%20downloading%20localization%20data%20for%20%7B0%7D%22%2C%22formDataError%22%3A%22Could%20not%20retrieve%20form%20data%2C%20please%20contact%20support.%22%2C%22connectionError%22%3A%22Could%20not%20connect%20to%20server.%22%2C%22versionError%22%3A%22Looks%20like%20you%20have%20an%20outdated%20game%20version%21%20Please%20update%20to%20keep%20playing%20%3A%29%22%2C%22legitError%22%3A%22Looks%20like%20your%20game%20version%20is%20incorrect%21%20Please%20install%20the%20latest%20version%20to%20keep%20playing.%22%2C%22walletUpdateErrorMsg%22%3A%22There%20was%20an%20issue%20updating%20your%20wallet%3A%20%7B0%7D%22%2C%22insuficientFundsForTickets%22%3A%22Not%20enough%20coins%20to%20buy%20more%20tickets%21%22%2C%22purchaseError%22%3A%22Purchase%20Error%22%2C%22rewardNotification%22%3A%22Received%20%7B0%7D%20free%20%7B1%7D%21%22%2C%22contactTitle%22%3A%22CONTACT%22%2C%22contactDescriptionTxt%22%3A%22Please%2C%20send%20us%20a%20message%20with%20your%20inquiry%3A%22%2C%22contactNamePlaceholder%22%3A%22Your%20name%20and%20last%20name...%22%2C%22contactEmailPlaceholder%22%3A%22Your%20email...%22%2C%22contactMessagePlaceholder%22%3A%22Your%20message...%22%2C%22sendMessageTxt%22%3A%22SEND%20MESSAGE%22%2C%22helpPopupTitle%22%3A%22HELP%22%2C%22helpPaytableBtnTxt%22%3A%22PAYTABLE%22%2C%22helpPolicyBtnTxt%22%3A%22PRIVACY%20POLICY%22%2C%22helpFaqBtnTxt%22%3A%22FAQ%22%2C%22helpContactBtnTxt%22%3A%22CONTACT%22%2C%22helpRulesBtnTxt%22%3A%22GAME%20RULES%22%2C%22helpPaytableDescriptionTxt%22%3A%22See%20the%20different%20paying%20combinations%3A%22%2C%22helpPolicyDescriptionTxt%22%3A%22Our%20privacy%20policy%3A%22%2C%22helpFaqDescriptionTxt%22%3A%22Find%20the%20answers%20to%20your%20questions%20in%20our%20FAQ%3A%22%2C%22helpContactDescriptionTxt%22%3A%22Need%20help%3F%20Contact%20our%20support%3A%22%2C%22helpRulesDescriptionTxt%22%3A%22Find%20the%20game%20rules%20here%22%2C%22privacyPolicyTitle%22%3A%22Privacy%20Policy%22%2C%22faqTitle%22%3A%22FAQ%22%2C%22rulesTitle%22%3A%22RULES%22%2C%22agreeBtnText%22%3A%22AGREE%22%2C%22legalsUpdateTxt%22%3A%22We%20have%20updated%20our%20terms%20of%20sevice%20and%20privacy%20policy.%22%2C%22dailyRewardtitleTxt%22%3A%22Daily%20Reward%21%22%2C%22dailyRewardDescriptionTxt%22%3A%22Come%20back%20tomorrow%20for%20some%20great%20rewards%21%22%2C%22dailyRewardMainBtnTxt%22%3A%22Get%20Reward%21%22%2C%22dailyRewardDaysTxt%22%3A%22%7B0%7D%20days%22%2C%22dailyRewardDetail%22%3A%22%7B0%7D%20%7B1%7D%22%2C%22jackpotCongratsTxt%22%3A%22Congratulations%21%22%2C%22jackpotDescriptionTxt%22%3A%22You%27ve%20won%3A%22%2C%22jackpotMainBtnTxt%22%3A%22Awesome%21%22%2C%22buyTicketsDescriptionTxt%22%3A%22How%20many%20tickets%20do%20you%20want%3F%22%2C%22buyTicketsBtnTxt%22%3A%22Exchange%22%2C%22ticketsConfirmationYouvegotTxt%22%3A%22You%27ve%20got%22%2C%22ticketsConfirmationNewTicketsTxt%22%3A%22%7B0%7D%20new%20tickets%21%21%22%2C%22ticketsConfirmationTotalTxt%22%3A%22Total%3A%22%2C%22ticketsConfirmationMainBtnTxt%22%3A%22All%20right%21%22%2C%22raffleWonPopupTitle%22%3A%22Congratulations%21%22%2C%22raffleWonPopupSubtitle%22%3A%22You%27ve%20won%20the%20raffle%21%22%2C%22raffleWonPopupBtn%22%3A%22Amazing%21%22%2C%22winProfileRequestMessage%22%3A%22To%20collect%20your%20prize%20make%20sure%20all%20the%20information%20in%20your%20profile%20is%20correct.%22%2C%22winProfileRequestBtn%22%3A%22OK%22%2C%22noMoreSpinsTxt%22%3A%22You%20don%27t%20have%20enough%20spins%22%2C%22watchVideoTxt%22%3A%22Watch%20a%20video%20to%20get%20some%20more%21%22%2C%22nextFreeSpinTxt%22%3A%22Next%20free%20spin%20in%3A%22%2C%22noMoreSpinsBtnTxt%22%3A%22Watch%20Video%21%22%2C%22orTxt%22%3A%22or%22%7D','2020-11-19 17:05:10'),(2,'es-ES','/localization/2__es-ES_02087724.png','/localization/2__es-ES_00208998.json',1,0,'',NULL),(8,'fr-FR','/localization/8__fr-FR_07862918.png','/localization/8__fr-FR_05412507.json',0,1,'%7B%22languageCode%22%3A%22fr-FR%22%2C%22spinBtnTxt%22%3A%22JOUER%22%2C%22multiplierTxt%22%3A%22%7B0%7Dx%22%2C%22jackpotValueTxt%22%3A%22%7B0%7D%20%7B1%7D%22%2C%22spinAmountTxt%22%3A%22%7B0%7D%20x%20%7B1%7D%22%2C%22slotFrontJackpotTxt%22%3A%22jackpot%21%22%2C%22paytableTitle%22%3A%22Combinaisons%20gagnantes%22%2C%22paysDisclaimer%22%3A%22En%20cas%20de%20parties%20multiples%2C%20tous%20les%20gains%20sont%20multipli%E9s%20sauf%20le%20jackpot.%22%2C%22paytableLine%22%3A%22%7B0%7D%20%7B1%7D%22%2C%22cardCollectionsPopupTitle%22%3A%22%22%2C%22cardCollectionsDescription%22%3A%22%22%2C%22cardTradeBtnTxt%22%3A%22%22%2C%22cardSetFooter%22%3A%22%22%2C%22cardGained%22%3A%22%22%2C%22cardCollectionCompletedCaption%22%3A%22%22%2C%22tutorialSlide1%22%3A%22Pour%20commencer%20%E0%20jouer%3Cbr%3ESlotoPrizes%3Cbr%3Etapez%20sur%20le%20button%3Cbr%3EJOUER%22%2C%22tutorialSlide2%22%3A%22Augmentez%20votre%20mise%20et%20multipliez%20vos%20gains%20en%20tapent%20sur%20le%20bouton%20vert%20%21%22%2C%22tutorialSlide3%22%3A%22Touchez%20le%20JACKPOT%3Cbr%3Epour%20gagner%22%2C%22tutorialSlide4%22%3A%22Collectez%20des%20jetons%20pour%20acheter%3Cbr%3Edes%20tickets%20Tombola%20%21%22%2C%22tutorialSlide5%22%3A%22Utilisez%20vos%20tickets%3Cbr%3Epour%20participer%20%E0%20nos%3Cbr%3Emagnifiques%20Tombolas%3Cbr%3Eet%20gagnez%3Cbr%3Edes%20prix%20incroyables%20%21%20%22%2C%22tutorialSlide6%22%3A%22Ca%20y%20est%20%21%3Cbr%3EVous%20avez%20finit%20le%20tutorial...%20Voici%20quelques%20Spins%20gratuits%20pour%20commencer%20%E0%20jouer%20Sloto%20Prizes%20%21%3Cbr%3EBonne%20chance%20%21%22%2C%22tutorialReward%22%3A%22%7B0%7D%3A%20%7B1%7D%22%2C%22iapInitFailed%22%3A%22IAP%20Controller%20Init%20Fail%3A%20%7B0%7D.%22%2C%22iapSuccess%22%3A%22%7B0%7D%3A%20Achat%20effectu%E9%20%21%22%2C%22iapRestoreFailed%22%3A%22Impossible%20de%20r%E9cup%E9rer%20l%27achat.%20%20%22%2C%22iapFailedBackend%22%3A%22Il%20se%20produit%20un%20erreur%20avec%20le%20serveur%2C%20mais%20la%20transaction%20sera%20enregistr%E9%20prochainement.%3Cbr%3E%28%7B0%7D%29%22%2C%22iapFailed%22%3A%22%7B0%7D%27%20La%20transaction%20a%20%E9chou%E9.%3Cbr%3E%7B1%7D.%22%2C%22iapFailedPurchasingUnavailable%22%3A%22Achat%20indisponible%22%2C%22iapFailedExistingPurchasePending%22%3A%22Un%20achat%20existant%20est%20en%20attente%22%2C%22iapFailedProductUnavailable%22%3A%22Produit%20indisponible%22%2C%22iapFailedSignatureInvalid%22%3A%22Signature%20invalide.%22%2C%22iapFailedUserCancelled%22%3A%22L%27achat%20a%20%E9t%E9%20annul%E9.%22%2C%22iapFailedPaymentDeclined%22%3A%22Le%20paiement%20a%20%E9t%E9%20r%E9fus%E9.%22%2C%22iapFailedDuplicateTransaction%22%3A%22Transaction%20dupliqu%E9%22%2C%22iapFailedUnknown%22%3A%22Erreur%20inconnu%22%2C%22iapPopupTitle%22%3A%22Supprimer%20pub%22%2C%22iapPopupPurchaseDesc%22%3A%22Supprimer%20la%20pub%20du%20jeu.%3Cbr%3E%3Cbr%3EVous%20aurez%20toujours%20la%20possibilit%E9%20de%20regarder%20de%20vid%E9o%20ads%20pour%20obtenir%20des%20spins%20gratuits.%22%2C%22iapPopupRestoreDesc%22%3A%22Vous%20avez%20d%E9j%E0%20pay%E9%20pour%20%E7a%20%3F%20R%E9cup%E9rez%20vos%20achats.%22%2C%22iapPopupPurchaseBtn%22%3A%22Supprimez%20la%20pub%20%7B0%7D%20%7B1%7D%22%2C%22iapPopupRestoreBtn%22%3A%22R%E9cup%E9rer%20mes%20achats%22%2C%22spinTxt%22%3A%22partie%22%2C%22spinsTxt%22%3A%22parties%22%2C%22coinTxt%22%3A%22jeton%22%2C%22coinsTxt%22%3A%22jetons%22%2C%22ticketTxt%22%3A%22ticket%22%2C%22ticketsTxt%22%3A%22tickets%22%2C%22jackpotTxt%22%3A%22jackpot%22%2C%22gainsTxt%22%3A%22%7B0%7D%20%7B1%7D%22%2C%22boosterMsg%22%3A%22avec%20%7B0%7D%20boost%21%22%2C%22jackpotWinnerMsg%22%3A%22Bravo%20%E0%20%7B0%7D%20de%20%7B1%7D%20qui%20%27a%20gagn%E9%20le%20Jackpot%20de%20%7B2%7D%7B3%7D%20%21%21%22%2C%22adRewardCongrats%22%3A%22F%E9licitations%21%20Vous%20avez%20obtenu%22%2C%22adRewardCurrencyAmount%22%3A%22%7B0%7D%20%7B1%7D%22%2C%22adRewardConfirmationMainBtnTxt%22%3A%22G%E9nial%21%22%2C%22offerWallNotAvailableTxt%22%3A%22D%E9sol%E9%2C%20cette%20fonctionnalit%E9%20n%27est%20pas%20disponible%20en%20ce%20moment%21%22%2C%22settingsTitle%22%3A%22Configuration%22%2C%22soundTxt%22%3A%22Son%3A%22%2C%22languageTxt%22%3A%22Langue%3A%22%2C%22fbUserCancelledLogin%22%3A%22Connexion%20annul%E9e%22%2C%22fbNotInitialized%22%3A%22Impossible%20de%20se%20connected%20%E0%20Facebook%22%2C%22profileSignupTitle%22%3A%22Inscription%22%2C%22profileSignupConnect%22%3A%22Se%20connecter%22%2C%22profileWindowTitle%22%3A%22Bienvenue%22%2C%22profileTitle%22%3A%22Mon%20Profil%22%2C%22profileDescription%22%3A%22Remplissez%20vos%20coordonn%E9es%20pour%20recevoir%20vos%20gains%21%22%2C%22formErrorTxt%22%3A%22S%27il%20vous%20plait%2C%20remplissez%20le%20formulaire%20en%20entier.%22%2C%22formSubmitError%22%3A%22Erreur%20dans%20l%27envoi%20du%20formulaire%3A%20%7B0%7D%22%2C%22formSubmitSuccess%22%3A%22Votre%20message%20a%20%E9t%E9%20envoy%E9%2C%20nous%20vous%20contacterons%20tr%E8s%20rapidement.%22%2C%22registrationComplete%22%3A%22Enregistrement%20r%E9ussi%21%22%2C%22nameLbl%22%3A%22Pr%E9nom%22%2C%22lastNameLbl%22%3A%22Nom%22%2C%22birthDateLbl%22%3A%22Date%20de%20Naissance%3A%22%2C%22emailLbl%22%3A%22Adresse%20e-mail%22%2C%22phoneLbl%22%3A%22T%E9l%E9phone%22%2C%22addressLbl%22%3A%22Adresse%22%2C%22cityLbl%22%3A%22Ville%22%2C%22zipCodeLbl%22%3A%22Code%20Postal%22%2C%22stateLbl%22%3A%22R%E9gion%22%2C%22countryLbl%22%3A%22Pays%22%2C%22titleLbl%22%3A%22Titre%22%2C%22mrLbl%22%3A%22Mr.%22%2C%22mrsLbl%22%3A%22Mme.%22%2C%22dayInitial%22%3A%22JJ%22%2C%22monthInitial%22%3A%22MM%22%2C%22yearInitial%22%3A%22AAAA%22%2C%22formFootCaption%22%3A%22*Cliquez%20pour%20modifier.%5C%5CnNous%20utilisons%20cette%20information%20pour%20envoyer%20les%20gains.%20Assurez-vous%20que%20l%27information%20est%20correcte.%22%2C%22sideMenuObtainTickets%22%3A%22Obtenez%20des%20tickets%21%22%2C%22sideMenuGifts%22%3A%22Cadeaux%22%2C%22sideMenuTombola%22%3A%22Historique%20Tombola%22%2C%22sideMenuBonus%22%3A%22Bonus%22%2C%22sideMenuWinners%22%3A%22Gagnants%22%2C%22sideMenuProfile%22%3A%22Mon%20profil%22%2C%22sideMenuSettings%22%3A%22Configuration%22%2C%22sideMenuHelp%22%3A%22Aide%22%2C%22sideMenuQuit%22%3A%22Quitter%22%2C%22sideMenuRemoveAds%22%3A%22Supprimer%20pub%22%2C%22ticketsForParticipationTxt%22%3A%22%7B0%7D%20ticket%28s%29%20%3A%201%20participation%22%2C%22giftScrollItemBtnTxT%22%3A%22Participer%22%2C%22participationPopupClosingDate%22%3A%22Date%20de%20fin%22%2C%22participationPopupTimeLeft%22%3A%22Temps%20restant%3A%20%7B0%7Dd%20%7B1%7Dh%20%7B2%7Dm%22%2C%22participationPopupParticipationsWanted%22%3A%22Combien%20de%20participations%20voulez-vous%3F%22%2C%22notEnoughTickets%22%3A%22Vous%20n%27avez%20pas%20suffisamment%20de%20tickets%20pour%20participer%20%E0%20cette%20tombola.%22%2C%22notEnoughTicketsMore%22%3A%22Vous%20n%27avez%20pas%20suffisamment%20de%20tickets%20pour%20participer%20%E0%20cette%20tombola.%22%2C%22raffleParticipationsCount%22%3A%22Vous%20avez%20%7B0%7D%20participation%28s%29%20pour%20cette%20tombola.%22%2C%22giftsScreenTitle%22%3A%22Cadeaux%21%22%2C%22giftsScreenDescription%22%3A%22Utilisez%20vos%20tickets%20pour%20participer%20aux%20tombolas%20et%20gagner%20de%20superbes%20cadeaux%21%22%2C%22raffleConfirmationGotTxt%22%3A%22Vous%20avez%20obtenu%22%2C%22raffleConfirmationParticipationsTxT%22%3A%22%7B0%7D%20participation%28s%29%22%2C%22raffleConfirmationForTxt%22%3A%22pour%3A%22%2C%22raffleConfirmationDateTxt%22%3A%22date%20de%20fin%22%2C%22raffleConfirmationMainBtnTxt%22%3A%22g%E9nial%22%2C%22tombolaHistoryScreenTitle%22%3A%22Mon%20historique%20de%20tombolas%22%2C%22tombolaHistoryScreenDescription%22%3A%22Utilisez%20vos%20tickets%20pour%20participer%20aux%20tombolas%20et%20gagner%20de%20superbes%20cadeaux%21%22%2C%22tombolaHistoryScreenDate%22%3A%22Date%22%2C%22tombolaHistoryScreenTickets%22%3A%22Tickets%22%2C%22tombolaHistoryScreenExpiration%22%3A%22Expiration%22%2C%22tombolaHistoryScreenComments%22%3A%22Prix%22%2C%22winnerLineNameTxt%22%3A%22Gagn%E9%20par%20%7B0%7D%22%2C%22winnersListTitleTxt%22%3A%22Nos%20grands%20gagnants%21%22%2C%22winnersListDescriptionTxt%22%3A%22Ils%20ont%20jou%E9%20et%20ils%20ont%20gagn%E9%20des%20magnifiques%20cadeaux.%22%2C%22happyTitle%22%3A%22Bravo%21%22%2C%22sadTitle%22%3A%22Oh%20non%21%22%2C%22walletTitle%22%3A%22Portefeuille%22%2C%22notificationMessageSample%22%3A%22Notification%20de%20test%22%2C%22nextEventTxt%22%3A%22Prochain%20%7B0%7D%20dans%20%7B1%7D%22%2C%22submitTxt%22%3A%22Envoyer%22%2C%22updateTxt%22%3A%22Mis%20%E0%20jour%22%2C%22okTxt%22%3A%22Ok%22%2C%22retryTxt%22%3A%22R%E9essayer%22%2C%22textureDownloadError%22%3A%22%7B0%7D%20-%20Erreur%20de%20t%E9l%E9chargement%20de%20l%27image%27%3A%20%7B1%7D%20%7B2%7D%22%2C%22localizationConfigError%22%3A%22Erreur%20de%20t%E9l%E9chargement%20de%20la%20localisation%3A%20%7B0%7D%22%2C%22formDataError%22%3A%22Impossible%20de%20r%E9cup%E9rer%20l%27information%20du%20formulaire%2C%20s%27il%20vous%20plait%2C%20contactez%20le%20support.%22%2C%22connectionError%22%3A%22Impossible%20de%20se%20connecter%20au%20serveur.%22%2C%22versionError%22%3A%22Apparement%20vous%20n%27avez%20pas%20la%20derni%E8re%20version%20de%20l%27app%21%20S%27il%20vous%20plait%2C%20faites%20la%20mise%20%E0%20jour%20pour%20continuer%20%E0%20jouer%20%3A%29%22%2C%22legitError%22%3A%22Apparement%20vous%20n%27avez%20pas%20la%20derni%E8re%20version%20de%20l%27app%21%20S%27il%20vous%20plait%2C%20faites%20la%20mise%20%E0%20jour%20pour%20continuer%20%E0%20jouer%20%3A%29%22%2C%22walletUpdateErrorMsg%22%3A%22On%20a%20rencontr%E9%20un%20probl%E8me%20pour%20r%E9cup%E9rer%20les%20informations%20de%20votre%20portefeuille%3A%20%7B0%7D%22%2C%22insuficientFundsForTickets%22%3A%22Vous%20avez%20besoin%20de%20pi%E8ces%20pour%20acheter%20des%20tickets%21%22%2C%22purchaseError%22%3A%22Erreur%20d%27achat%22%2C%22rewardNotification%22%3A%22Vous%20avez%20re%E7u%20%7B0%7D%20%7B1%7D%20gratuit%28s%29%21%22%2C%22contactTitle%22%3A%22CONTACT%22%2C%22contactDescriptionTxt%22%3A%22Envoyez-nous%20vos%20questions%3A%22%2C%22contactNamePlaceholder%22%3A%22Votre%20nom%20et%20pr%E9nom...%22%2C%22contactEmailPlaceholder%22%3A%22Votre%20email...%22%2C%22contactMessagePlaceholder%22%3A%22Votre%20message...%22%2C%22sendMessageTxt%22%3A%22ENVOYER%22%2C%22helpPopupTitle%22%3A%22AIDE%22%2C%22helpPaytableBtnTxt%22%3A%22COMBINAISONS%20GAGNANTES%22%2C%22helpPolicyBtnTxt%22%3A%22POLITIQUE%20DE%20CONFIDENTIALITE%22%2C%22helpFaqBtnTxt%22%3A%22FAQ%22%2C%22helpContactBtnTxt%22%3A%22CONTACT%22%2C%22helpRulesBtnTxt%22%3A%22R%C8GLEMENT%22%2C%22helpPaytableDescriptionTxt%22%3A%22Voici%20les%20combinaisons%20gagnantes%3A%22%2C%22helpPolicyDescriptionTxt%22%3A%22Notre%20politique%20de%20confidentialit%E9%3A%22%2C%22helpFaqDescriptionTxt%22%3A%22Trouvez%20les%20r%E9ponses%20%E0%20vos%20questions%20dans%20notre%20FAQ%3A%22%2C%22helpContactDescriptionTxt%22%3A%22Besoin%20d%27aide%3F%20Contactez%20notre%20support%3A%22%2C%22helpRulesDescriptionTxt%22%3A%22R%E8glement%22%2C%22privacyPolicyTitle%22%3A%22Politique%20de%20confidentialit%E9%20%20%20%20%22%2C%22faqTitle%22%3A%22FAQ%22%2C%22rulesTitle%22%3A%22R%E8glement%22%2C%22agreeBtnText%22%3A%22ACCEPTER%22%2C%22legalsTermsUpdateTitle%22%3A%22%22%2C%22legalsUpdateTxt%22%3A%22%22%2C%22legalsUpdate2Txt%22%3A%22%22%2C%22dailyRewardtitleTxt%22%3A%22R%E9compense%20du%20jour%21%22%2C%22dailyRewardDescriptionTxt%22%3A%22Revenez%20demain%20pour%20recevoir%20des%20gains%20incroyables%21%22%2C%22dailyRewardMainBtnTxt%22%3A%22Obtenez%20le%20prix%21%22%2C%22dailyRewardDaysTxt%22%3A%22%7B0%7D%20jours%22%2C%22dailyRewardDetail%22%3A%22%7B0%7D%20%7B1%7D%22%2C%22jackpotCongratsTxt%22%3A%22F%E9licitations%21%22%2C%22jackpotDescriptionTxt%22%3A%22Vous%20avez%20gagn%E9%3A%22%2C%22jackpotMainBtnTxt%22%3A%22Au%20Top%21%22%2C%22buyTicketsDescriptionTxt%22%3A%22Combien%20voulez-vous%20de%20tickets%3F%22%2C%22buyTicketsBtnTxt%22%3A%22%C9changer%22%2C%22ticketsConfirmationYouvegotTxt%22%3A%22Vous%20avez%20obtenu%22%2C%22ticketsConfirmationNewTicketsTxt%22%3A%22%7B0%7D%20nouveau%28x%29%20ticket%28s%29%21%21%22%2C%22ticketsConfirmationTotalTxt%22%3A%22Total%3A%22%2C%22ticketsConfirmationMainBtnTxt%22%3A%22G%E9nial%21%22%2C%22raffleWonPopupTitle%22%3A%22F%E9licitations%21%22%2C%22raffleWonPopupSubtitle%22%3A%22Vous%20avez%20remport%E9%20la%20tombola%21%22%2C%22raffleWonPopupBtn%22%3A%22Parfait%21%22%2C%22winProfileRequestMessage%22%3A%22Pour%20r%E9cup%E9rer%20votre%20gain%20assurez-vous%20que%20vos%20informations%20de%20profil%20sont%20correctes.%22%2C%22winProfileRequestBtn%22%3A%22OK%22%2C%22noMoreSpinsTxt%22%3A%22Vous%20n%27avez%20pas%20suffisamment%20de%20parties%22%2C%22watchVideoTxt%22%3A%22Regardez%20une%20vid%E9o%20pour%20obtenir%20des%20parties%20suppl%E9mentaires%21%22%2C%22nextFreeSpinTxt%22%3A%22Prochaine%20partie%20gratuite%20dans%3A%22%2C%22noMoreSpinsBtnTxt%22%3A%22Voir%20la%20video%21%22%2C%22orTxt%22%3A%22ou%22%2C%22updateAvailableMsg%22%3A%22%22%2C%22freeSpinsFeatured%22%3A%22%22%7D','2020-11-24 20:21:15');
/*!40000 ALTER TABLE `language` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `last_spin`
--

DROP TABLE IF EXISTS `last_spin`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `last_spin` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `last` date DEFAULT NULL,
  `days` int(11) DEFAULT NULL,
  `game_user_id` int(10) unsigned DEFAULT NULL,
  `last_claim` date DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=136 DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `last_spin`
--

LOCK TABLES `last_spin` WRITE;
/*!40000 ALTER TABLE `last_spin` DISABLE KEYS */;
INSERT INTO `last_spin` VALUES (45,'2020-07-21',2,752,NULL),(46,'2020-11-24',0,39,'2020-10-08'),(47,'2020-09-16',0,584,'2020-09-16'),(48,'2020-09-30',0,585,'2020-09-30'),(49,'2020-11-25',1,583,'2020-11-25'),(50,'2020-09-08',1,586,'2020-09-08'),(51,'2020-10-30',0,587,'2020-10-09'),(52,'2020-09-02',0,588,NULL),(53,'2020-11-25',1,582,'2020-09-11'),(54,'2020-10-30',0,589,'2020-10-30'),(55,'2020-07-31',0,590,NULL),(56,'2020-09-09',0,591,'2020-09-09'),(57,'2020-09-09',0,592,'2020-09-09'),(58,'2020-11-17',1,593,'2020-11-17'),(59,'2020-09-11',0,594,'2020-09-11'),(60,'2020-11-20',0,595,NULL),(61,'2020-09-22',1,596,'2020-09-22'),(62,'2020-09-16',0,597,NULL),(63,'2020-09-16',0,598,NULL),(64,'2020-09-16',0,599,'2020-09-16'),(65,'2020-10-29',0,600,'2020-10-29'),(66,'2020-10-29',0,601,'2020-10-29'),(67,'2020-09-16',0,602,NULL),(68,'2020-09-16',0,603,NULL),(69,'2020-09-16',0,604,NULL),(70,'2020-09-16',0,605,NULL),(71,'2020-09-16',0,606,NULL),(72,'2020-09-16',0,607,NULL),(73,'2020-09-16',0,608,'2020-09-16'),(74,'2020-10-09',0,609,'2020-10-09'),(75,'2020-11-25',2,610,'2020-11-25'),(76,'2020-09-30',1,611,'2020-09-30'),(77,'2020-10-15',0,612,'2020-10-15'),(78,'2020-11-16',0,613,'2020-11-16'),(79,'2020-11-09',0,614,'2020-11-09'),(80,'2020-11-24',0,40,NULL),(81,'2020-10-26',0,73,NULL),(82,'2020-10-12',0,615,NULL),(83,'2020-10-12',0,616,'2020-10-12'),(84,'2020-10-15',0,617,'2020-10-15'),(85,'2020-10-15',0,618,'2020-10-15'),(86,'2020-11-23',0,619,NULL),(87,'2020-10-19',0,42,NULL),(88,'2020-10-19',0,108,NULL),(89,'2020-10-19',0,620,NULL),(90,'2020-10-27',0,621,'2020-10-27'),(91,'2020-10-27',0,622,NULL),(92,'2020-10-27',0,623,NULL),(93,'2020-10-29',0,624,'2020-10-29'),(94,'2020-10-30',2,625,'2020-10-30'),(95,'2020-10-30',0,626,NULL),(96,'2020-10-30',0,627,'2020-10-30'),(97,'2020-10-30',0,628,'2020-10-30'),(98,'2020-11-02',0,629,'2020-11-02'),(99,'2020-10-30',0,630,'2020-10-30'),(100,'2020-11-02',3,631,'2020-11-02'),(101,'2020-10-30',0,632,NULL),(102,'2020-10-30',0,633,NULL),(103,'2020-10-31',0,634,'2020-10-31'),(104,'2020-11-02',0,635,'2020-11-02'),(105,'2020-11-02',0,636,'2020-11-02'),(106,'2020-11-02',0,637,'2020-11-02'),(107,'2020-11-02',0,638,'2020-11-02'),(108,'2020-11-25',1,639,NULL),(109,'2020-11-09',0,640,NULL),(110,'2020-11-04',0,641,'2020-11-04'),(111,'2020-11-05',0,642,NULL),(112,'2020-11-05',0,643,NULL),(113,'2020-11-05',0,644,NULL),(114,'2020-11-05',0,645,NULL),(115,'2020-11-10',1,646,NULL),(116,'2020-11-10',0,647,NULL),(117,'2020-11-10',0,648,NULL),(118,'2020-11-10',0,649,NULL),(119,'2020-11-17',1,650,'2020-11-17'),(120,'2020-11-10',0,651,NULL),(121,'2020-11-10',0,652,NULL),(122,'2020-11-10',0,653,NULL),(123,'2020-11-13',1,654,'2020-11-13'),(124,'2020-11-16',0,655,NULL),(125,'2020-11-16',0,656,'2020-11-16'),(126,'2020-11-17',1,657,'2020-11-17'),(127,'2020-11-16',0,658,NULL),(128,'2020-11-16',0,659,'2020-11-16'),(129,'2020-11-16',0,660,NULL),(130,'2020-11-16',0,661,'2020-11-16'),(131,'2020-11-17',0,662,'2020-11-17'),(132,'2020-11-18',1,663,'2020-11-18'),(133,'2020-11-19',0,664,NULL),(134,'2020-11-19',0,665,NULL),(135,'2020-11-19',0,666,NULL);
/*!40000 ALTER TABLE `last_spin` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `localization`
--

DROP TABLE IF EXISTS `localization`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `localization` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `item` tinytext DEFAULT NULL,
  `item_id` int(10) unsigned DEFAULT NULL,
  `language_id` int(10) unsigned DEFAULT NULL,
  `text` longtext DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=426 DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `localization`
--

LOCK TABLES `localization` WRITE;
/*!40000 ALTER TABLE `localization` DISABLE KEYS */;
INSERT INTO `localization` VALUES (1,'maintenanceMode',NULL,1,'We are in maintenance, we\'ll be back up soon!s'),(2,'maintenanceMode',NULL,2,'Estamos haciendo mantenimiento, estaremos pronto en línea'),(3,'maintenanceMode',NULL,8,'Oups ! On est en train de travailler sur le serveur, s\'il vous plais, essayez plus tard...'),(4,'rules',NULL,1,'Two bytes meet.  The first byte asks, “Are you ill?”\nThe second byte replies, “No, just feeling a bit off.”'),(5,'rules',NULL,2,' ¿Qué es una mujer objeto? Una instancia de una mujer con clase.'),(6,'rules',NULL,8,'<b>Règlement général de Sloto Prizes</b><br><br>  ARTICLE 1 – ORGANISATEUR<br><br>  La société Tagada Games, société par actions simplifiée au capital de 1.000 Euros dont le siège social est situé : 55 rue Legendre à Paris (75017) – France, immatriculée au RCS de Paris sous le numéro 853 730 588 (l’« Organisateur »), organise un jeu gratuit et sans obligation d\'achat, pour une durée indéfinie.<br><br>  ARTICLE 2 – ACCESSIBILITÉ<br><br>  Ce jeu, gratuit et sans obligation d’achat, est accessible aux personnes remplissant les conditions de participation et respectant les modalités de participation ci-après détaillées, en se connectant sur l’application éditée par la société Tagada Games disponible sur les plateformes de téléchargement sous le nom de Sloto Prizes (ci-après l’« Application »).<br> Cette Application est accessible 24 heures / 24 - 7 jours / 7 sous réserve de problème technique.<br><br>  ARTICLE 3 – Conditions de participation<br><br>  3.1 Ce jeu, gratuit et sans obligation d’achat, est ouvert à toute personne physique majeure dans les pays où l’Application est disponible dans le store de ces derniers, c’est-à-dire en France métropolitaine (Corse comprise) et à Monaco à l’exclusion :<br><br>  des dirigeants et associés de l’Organisateur,<br> des membres du personnel de l’Organisateur ainsi que de leur famille (même nom, même adresse),<br> de toute personne physique ou morale, ayant participé à quelque titre que ce soit à l’organisation du jeu, ainsi que les membres de leurs familles respectives (même nom, même adresse).<br><br>  3.2 La participation à Sloto Prizes se fait en se connectant à l’Application. Aucune création de compte utilisateur n’est nécessaire pour participer au jeu.<br><br>  Le participant a la possibilité à tout moment, s’il le souhaite, de créer un compte utilisateur sur l’Application en indiquant ses coordonnées, et devra renseigner ses coordonnées personnelles en cas d’obtention du Jackpot afin de pouvoir recevoir sa dotation. Il devra donc dans ce cas indiquer :<br><br> sa civilité,<br> son prénom<br> son nom,<br> son adresse électronique,<br> son adresse postale et éventuellement d\'autres informations afin notamment de pouvoir recevoir ses gains,<br> sa date de naissance,<br> son numéro de téléphone.<br><br>  Il appartient à l’utilisateur de bien s’assurer que ses civilité, prénom, nom, adresse électronique, adresse postale, date de naissance, numéro de téléphone sont renseignés correctement, et que notamment l’adresse électronique fonctionne normalement.<br><br>   L’utilisateur peut utiliser l’Application sans pour autant remplir ses coordonnées personnelles.<br><br> L’Organisateur se réserve le droit :<br><br>  d\'annuler un gain si le gagnant n\'a pas saisi correctement ses coordonnées.<br><br>  L’Organisateur se réserve le droit de supprimer les comptes utilisateurs suivants :<br><br>  les utilisateurs mineurs,<br> les utilisateurs ne s’étant pas connectés à l’Application depuis douze (12) mois.<br><br>  L’Organisateur se réserve le droit de procéder à la suppression des comptes concernés sans aucune communication préalable.<br><br>  3.3 Toute participation doit être loyale<br><br>  Toute personne ne remplissant pas les conditions de participation ci-avant détaillées qui tenterait par quelque moyen que ce soit de jouer sur Sloto Prizes ne pourrait prétendre percevoir quelque gain que ce soit et contreviendrait au présent règlement.<br><br>    Il est rigoureusement interdit, par quelque moyen que ce soit, de modifier ou de tenter de modifier les dispositifs de jeux proposés, notamment afin d\'en modifier les résultats ou tout élément déterminant l\'issue d\'une partie ainsi que les gagnants d\'une partie.<br><br>     Il est totalement interdit de jouer avec plusieurs adresses emails reliées à une même personne physique ainsi que de jouer à partir d\'un compte ouvert pour le compte d\'une tierce personne.<br><br>   Les participants qui tenteraient de participer par des moyens tels que des automates de participation automatisés, utilisant des informations (noms, prénoms, adresses électroniques…) ne correspondant pas à leur véritable identité seront automatiquement éliminés.<br><br>    L’Organisateur se réserve le droit de faire respecter l\'égalité de chance entre tous les participants, par tout moyen à sa disposition, y compris par voie judiciaire et notamment de procéder à la suppression de comptes et d\'annuler la participation au jeu de toute personne ne respectant pas le présent règlement ou encore d’annuler un gain si le gagnant a tronqué le résultat d’une partie ou ne s’est pas conformé au présent règlement.<br><br>  ARTICLE 4 - MODALITÉS DE PARTICIPATION<br><br>  Il est rappelé que le jeu proposé par l’Organisateur est un jeu régit par le hasard.<br><br> Pour participer, l’utilisateur devra:<br><br>  1. Télécharger l’Application<br> 2. Ouvrir l’Application sur son smartphone ou sur sa tablette.<br> 3. Cliquer sur le bouton « Jouer »<br><br>  Une partie de machine à sou est offerte toutes les cinq (5) minutes au joueur. Il pourra donc jouer sur une période de vingt-quatre (24) heures, deux cent quatre-vingt-huit (288) parties. S’il ne joue pas l’ensemble de ses parties gratuites, il pourra en cumuler un maximum de 20 sur son compte pour une durée indéterminée. Toutes les trois (3) parties jouées, le participant devra visionner des vidéos publicitaires d’une durée maximum de cinq (5) minutes pour pouvoir continuer à jouer.<br><br> Par ailleurs, le joueur aura la possibilité d’obtenir des parties supplémentaires gratuites en obtenant la combinaison de rang 1 telle que décrite à l’article 7 du présent règlement. Le joueur pourra également obtenir des parties supplémentaires en visionnant des vidéos publicitaires, d’une durée maximale de cinq (5) minutes, qui lui seront proposées lorsqu’il a joué toutes ses parties.<br><br>  ARTICLE 5 - CONFIDENTIALITÉ-SÉCURITÉ<br><br>  L’Application ne requérant pas d’identification spécifique avec email et mot de passe par exemple, le téléchargement de l’Application sur son smartphone ou sur sa tablette vaut preuve de sa connexion à l’Application.<br> L’Organisateur invite, à cet égard, le participant à être vigilant, surtout lorsque celui-ci donnerait les codes d’accès à son téléphone à des personnes tierces.<br><br> ARTICLE 6 - DÉSIGNATION DES GAGNANTS<br><br> 6.1 Désignation des gagnants dans le cadre de la machine à sous L’Application repose sur un principe d’instant gagnant.<br><br> Un instant gagnant est un algorithme informatique (formule mathématique aléatoire de désignation du gagnant) qui détermine pour chaque participation valide, si une combinaison est gagnante ou perdante dans la limite des lots disponibles définis à l’article 7 du présent règlement.<br><br> L’algorithme utilisé pour le jeu de machine à sous est déposé auprès de la Selarl Alexandre & associés, huissiers de justice associés, 10, rue du Port, 16100 Cognac.<br><br> Chaque ligne de machine à sous comporte 3 colonnes. Pour gagner, le participant devra obtenir l’une des combinaisons détaillées ci-dessous et tel qu’indiqué sur l’Application<br><br> Jackpot :               Lorsqu’un cycle est terminé, les gains sont réinitialisés.<br><br> Le participant sera informé immédiatement et directement sur l’Application s’il a gagné. S’il a remporté le Jackpot, le participant pourra également retrouver son gain dans la rubrique « Gagnants » où figureront son prénom, la première lettre de son patronyme, son code postal, la désignation du lot ainsi que la date de gain.<br><br>   6.2 Désignation des gagnants dans le cadre de la tombola<br><br> Le tirage au sort du(des) gagnant(s) de chaque tombola est réalisé de manière automatique et informatique lors de la clôture de chacune d’elles tel qu’indiqué sur l’Application dans la rubrique « Cadeaux ». Un script informatique automatique détermine parmi l’ensemble des tickets ayant été échangés pour ladite tombola un ou plusieurs tickets désignés gagnants tel qu’indiqué sur l’Application dans la rubrique « Cadeaux ».<br><br>  Le(s) détenteur(s) dudit(desdits) ticket(s) gagnant(s) sera(ont) avisé(s) par courrier électronique de son(leur) gain dans un délai maximal de quinze (15) jours suivant la désignation du(es) gagnant(s). Il(s) pourra(ont) également retrouver son(leur) gain dans la rubrique « Gagnants » où figureront son(leur) prénom, la première lettre de son(leur) patronyme, son(leur) code postal, la désignation du lot ainsi que la date de gain.<br><br> Les noms et prénoms et le cas échéant les photos des gagnants pourront être diffusés sur la page d’accueil de l’Application dans les conditions prévues à l’article 13.4 du présent règlement.<br><br>  ARTICLE 7 - JEUX ET DOTATIONS<br><br>  L\'attribution des gains s\'effectue sous réserve de respecter le présent règlement et notamment ses articles 3 et 4 précités et de justifier de son identité. L’organisateur se réserve le droit d\'annuler un gain si le gagnant n\'a pas saisi correctement ses coordonnées, s’il a visiblement, et par n\'importe quel moyen, réussi à tronquer le résultat d\'une partie ou ne s\'est pas conformé au présent règlement. Les photographies ou représentations graphiques présentant les produits ou services à gagner ont exclusivement une fonction d\'illustration et ne sont pas contractuelles.<br><br>  7.1 Gains obtenus sur la machine à sous<br><br>  Définition des symboles utilisés<br><br>  L’ensemble des combinaisons gagnantes est détaillé dans la rubrique « Aide » puis « Combinaisons gagnantes ». <br><br>  Afin de recevoir le Jackpot ou une dotation issue de la tombola, en cas de gain, le participant devra renseigner ses coordonnées dans la rubrique « Mon profil » et s’assurer qu’elles sont correctes afin que sa dotation puisse lui être envoyée.<br><br> Jackpot : Si le participant découvre 3 symboles identiques au symbole Jackpot, il remporte la somme telle que diffusée sur l’Application dans la case Jackpot. Il y a un lot de rang 1 sur un cycle de 10000001 de parties de machine à sous. Cette somme est susceptible d’évolution chaque jour et est visible de façon permanente et actualisée en temps réel sur l’Application dans la case Jackpot au-dessus de la machine à sous.<br><br> Lot de rang 1 : Si le participant découvre la combinaison identique au lot de rang 1, il remporte 10 parties supplémentaires pour la machine à sous. Il y a 400000 lots de rang 1 sur un cycle de 10000001 de parties de machine à sous.<br><br> Lot de rang 2 : Si le participant découvre la combinaison identique au lot de rang 2, il remporte 5 tickets de participation à la tombola. Il y a 200000 lots de rang 2 sur un cycle de 10000001 de parties de machine à sous.<br><br> Lot de rang 3 : Si le participant découvre une combinaison identique à l’une des combinaisons de lot de rang 3, il remporte le nombre de jetons correspondant à la combinaison tel qu’indiqué sur l’Application. Il pourra échanger ces jetons conte des tickets de tombola dans la rubrique Obtenez des tickets. Il y a 7400000 lots de rang 3 sur un cycle de 10000001 de parties de machine à sous. Chaque ticket de tombola équivaut à 1000 jetons. Le reste des combinaisons disponibles pour compléter le cycle, soit 2000000 de combinaisons, sont des combinaisons perdantes.<br><br> 7.2 Dotations obtenues à la tombola<br><br>  En remportant les lots des rangs 2 et 3, précédemment définis à l’article 7.1, le gagnant pourra les utiliser pour participer aux tombolas disponibles dans la rubrique Cadeaux.<br><br>  Sur cette page sont listées l’ensemble des dotations disponibles et qu’il est possible de remporter à la tombola. Pour chaque dotation sont indiquées les informations suivantes :<br><br>  Désignation du/des lot(s)<br> Le nombre de tickets de tombola nécessaires pour obtenir une participation.<br> Le temps restant avant le tirage au sort qui désignera le(s) gagnant(s) de la dotation.<br>  Il est possible d’obtenir plus d’informations concernant les lots mis en jeu en cliquant sur le bouton « Participer ».<br><br>  La liste des tombolas est évolutive et actualisée plusieurs fois par mois. Il convient aux joueurs de se rendre régulièrement sur la rubrique Cadeaux pour consulter la liste des dotations actualisée.<br><br>  ARTICLE 8 - ENVOI DES DOTATIONS<br><br>  8.1 Le gagnant pourra être amené à fournir une preuve d\'identité en envoyant la photocopie d’une pièce d’identité officielle, sur demande de l’Organisateur ainsi qu\'un justificatif de domicile à son nom (facture d\'électricité ou facture téléphonique par exemple).<br><br>  Dans certains cas, un numéro de téléphone pourra être exigé afin de pouvoir prendre rendez-vous pour la livraison de la dotation.<br><br>  Le participant devra alors renseigner ce numéro dans la partie « Mon Compte » de l’Application dans un délai maximal de 30 jours à compter de la confirmation par courrier électronique de son gain, adressée par l’Organisateur.<br><br>  Les gains sont nominatifs et ne peuvent être transmis à des tiers.<br><br>  8.2 L’Organisateur ou ses partenaires adresseront aux gagnants leurs prix sous un délai maximum de 90 jours à compter du résultat de la partie.<br><br> Jackpot obtenu sur la machine à sous : l’Organisateur établira et adressera à l’adresse postale du gagnant un chèque bancaire ou un virement bancaire du montant correspondant au lot défini pour le Jackpot en question à la date du gain tel qu’indiqué sur l’Application.<br><br> Lots de rang 1 de la machine à sous : l’Organisateur incrémentera automatiquement et immédiatement le compteur de parties de machines à sous disponible sur le compte du joueur dès la validation de la combinaison.<br><br> Lots de rang 2 de la machine à sous : l’Organisateur incrémentera automatiquement et immédiatement le compteur de tickets de participation à la tombola disponible sur le compte du joueur dès la validation de la combinaison.<br><br> Lots de rang 3 de la machine à sous : l’Organisateur incrémentera automatiquement et immédiatement le compteur de jetons disponible sur le compte du joueur dès la validation de la combinaison.<br><br> Lot obtenu à la tombola : l’Organisateur adressera, par voie postale, dans le cas d’un cadeau physique, le lot correspondant à la tombola remportée, ou par voie électronique, dans le cas d’un lot électronique, un code personnel à l’intention du gagnant qui lui permettra d’utiliser son chèque cadeau et de régler ainsi tout ou partie d’une commande sur le site internet sur lequel il peut être utilisé. Les conditions d’utilisation des lots électroniques sont indiquées lors de l’envoi de ces derniers de sorte que l’utilisateur s’engage à s’y conformer sans réserve.<br><br>  8.3 Dans le cas où l’Organisateur adresserait les dotations remportées à des coordonnées inexactes ou incomplètes, le participant ne pourrait exiger le renvoi de son gain et perdrait la propriété de ce dernier.<br><br>    Il est de la responsabilité du membre de fournir des informations exactes et valides et de vérifier qu\'elles sont toujours valides au moment de son gain.<br><br>    La responsabilité de l’Organisateur ne pourrait être engagée dans le cas où l\'inexécution ou la mauvaise exécution d\'un envoi serait imputable soit au Participant, soit au fait imprévisible et insurmontable d\'un tiers soit à un cas de force majeure.<br><br>  ARTICLE 9 - ACCEPTATION<br><br>  La participation au jeu implique la pleine et entière acceptation du présent règlement.<br><br>  Le règlement peut être consulté en ligne sur l’Application dans la rubrique « Aide ».<br><br>    ARTICLE 10 – RESPONSABILITÉ<br><br>  L’Organisateur ne pourra être tenu responsable si, pour une raison indépendante de sa volonté, ce jeu venait à être modifié, reporté ou annulé.<br><br>    L’Organisateur ne pourra être tenu responsable si le store à partir duquel le jeu est accessible était momentanément indisponible.<br><br>  ARTICLE 11 - PROPRIÉTÉ INTELLECTUELLE<br><br>  L’Application Sloto Prizes est une œuvre protégée au sens du Code de la Propriété Intellectuelle sur laquelle l’Organisateur détient la totalité des droits et notamment, les marques de fabrique, logos, graphismes, photographies ainsi que tout autre type de données figurant sur l’Application.<br><br>  L’Application Sloto Prizes, sa structure générale, ainsi que les textes, images animées ou non, sons, savoir-faire, dessins, graphismes (…), le présent règlement des jeux et tout autre élément composant l’Application, sont la propriété exclusive de l’Organisateur.<br><br>     Il en est de même des bases de données figurant sur l’Application qui sont protégées par les dispositions de la loi du 1er juillet 1998 portant transposition dans le Code de la propriété intellectuelle de la directive européenne du 11 mars 1996 relative à la protection juridique des bases de données, et dont l’Organisateur est producteur.<br><br>     Toute utilisation ou reproduction, totale ou partielle, de l’Application, des éléments qui la composent et/ou des informations qui y figurent, par quelque procédé que ce soit, est strictement interdite et constitue une contrefaçon sanctionnée par le Code de la propriété intellectuelle, sauf accord préalable et écrit de l’Organisateur.<br><br>  ARTICLE 12 - PROTECTION DES DONNÉES À CARACTÈRE PERSONNEL<br><br>  12.1 Responsable du traitement<br><br>  Les informations recueillies via les différents formulaires de collecte de Données personnelles de l’Application font l’objet de traitements de données informatiques dont le responsable est l’Organisateur.<br><br>  L’Organisateur s\'engage à respecter les dispositions de la loi « informatique et libertés » du 6 janvier 1978 modifiée, du Règlement UE 2016/679 du Parlement européen et du Conseil du 27 avril 2016 relatif à la protection des personnes physiques à l\'égard du traitement des Données à caractère personnel et à la libre circulation de ces données (« RGPD »), ainsi que les recommandations de la Commission Nationale de l\'Informatique et des Libertés (« CNIL »).<br><br>   A titre d’illustration, l’Organisateur s’engage à :<br><br>  Réaliser une collecte loyale et licite des données à caractère personnel ;<br><br> Ne pas collecter de données dites « sensibles » au sens de la Loi Informatique et Libertés telles que les données relatives aux origines raciales, à la religion, aux mœurs, aux infractions, aux condamnations ;<br><br> Conserver les données à caractère personnel uniquement le temps nécessaire à l’accomplissement de l’objectif qui était poursuivi lors de leur collecte ;<br><br> A prendre toutes précautions utiles afin de préserver la sécurité et la confidentialité des données à caractère personnel qu’il traite et notamment d’empêcher qu’elles ne soient déformées, endommagées ou communiquées à des tiers non autorisés ;<br><br> A effectuer sous sa propre responsabilité les déclarations et/ou les demandes d’autorisation auprès de la CNIL ;<br><br> Respecter les droits des personnes (droit d’information, d’accès, de rectification ou d’opposition).<br><br>  12.2 Collecte de données à caractère personnel<br><br>    La notion de Données à caractère personnel désigne toute information relative à une personne physique identifiée ou identifiable.<br><br>  L’Organisateur est amené à collecter et traiter les données à caractère personnel suivantes :<br><br>  les prénom, nom d’utilisateur, adresse email, la civilité, la date de naissance, le code postal, le numéro de téléphone, l’adresse, les données de localisation, le numéro d’identifiant du terminal et toute autre donnée qui pourrait figurer sur le formulaire d’inscription, dans le respect des principes de pertinence et de proportionnalité.<br><br> 12.3 Finalités des traitements de données personnelles et bases légales<br><br>  Vos données sont traitées par l’Organisateur pour vous permettre de bénéficier des services proposés comme par exemple :<br><br> Créer votre Compte personnel<br> Déterminer le ou la gagnante<br> Attribuer et acheminer le ou les lots<br> Diffuser la liste des gagnants<br>  Le fondement légal de ces traitements est l’exécution d’un contrat ou l’intérêt légitime.<br><br>  En cas d’acceptation expresse de votre part, vos données pourront être utilisées par l’Organisateur pour :<br><br>  Réaliser de la segmentation et des recoupement statistiques<br> Procéder à des recoupements avec d\'autres données, notamment à des fins d\'élaboration de profils<br> Réaliser du profilage, à des fins de personnalisation/recommandation de contenus et de publicités ciblées (diffusion de vidéos publicitaires dans la langue du pays de l’utilisateur)<br><br>  La base légale de ces traitements est le consentement.<br><br> Vos données peuvent également être traitées par l’Organisateur pour :<br><br>  Répondre à vos demandes/réclamations: la base légale de ce traitement est l’intérêt légitime<br> Évaluer, comprendre et rendre compte de la façon dont vous utilisez le service : la base légale de ce traitement est l’intérêt légitime<br> Procéder à l\'évaluation statistique de la fréquentation : la base légale de ce traitement est l’intérêt légitime<br>   12.4 Destinataires ou catégories de destinataires des Données à caractère personnel<br><br>  Le destinataire des données personnelles collectées est l’Organisateur en qualité de responsable du traitement.<br><br>  L’Organisateur peut également divulguer vos données à caractère personnel lorsque cette divulgation est nécessaire pour :<br><br>  Se conformer à la loi (ou à une assignation à témoigner ou ordonnance du tribunal) ;<br> Se conformer aux demandes légitimes émanant d\'autorités publiques et gouvernementales ;<br> Prévenir un délit ou procéder à une enquête, par exemple en cas de fraude ou de vol d\'identité ;<br> Protéger les droits, la propriété ou la sécurité de l’Organisateur, des Utilisateurs ou de tiers.<br><br>  Vos Données à caractère personnel peuvent, le cas échéant, être transmises aux sociétés sous-traitantes auxquelles l’Organisateur peut faire appel dans le cadre de l’exécution des services. L’Organisateur assure la conformité avec les exigences de protection des données pour toutes ses sociétés sous-traitantes.<br><br> A compter du 25 mai 2018, l’Organisateur s’engage à collecter et traiter les données à caractère personnel dans le respect du Règlement UE 2016/679 du Parlement européen et du Conseil du 27 avril 2016 relatif à la protection des personnes physiques à l\'égard du traitement des données à caractère personnel et à la libre circulation de ces données (règlement général sur la protection des données), applicable à compter de cette date.<br><br>   12.5 Droit des personnes d’accès, de rectification et d’opposition pour motifs légitimes<br><br>    Vous disposez d’un droit d’accès, de rectification, d’effacement et à la portabilité des données vous concernant. Vous pouvez également demander la limitation du traitement des données vous concernant ou vous opposer à ce traitement. Vous êtes en droit de communiquer à l’Organisateur vos directives relatives au sort des Données personnelles vous concernant en cas de décès.<br><br>  Nous nous réservons le droit d’exiger le paiement de « frais raisonnables » liés aux coûts administratifs supportés pour fournir les informations si votre demande est manifestement infondée ou excessive. Nous nous efforcerons de répondre à vos demandes dans les délais requis par le RGPD.<br><br>  Afin de protéger votre vie privée et d\'assurer votre sécurité, nous prendrons également des mesures raisonnables pour vérifier votre identité avant de vous donner accès à vos informations personnelles ou de corriger, modifier ou supprimer vos données. Toute demande pourra être accompagnée d’une copie de votre carte d’identité.<br><br> Pour exercer vos droits, veuillez contacter l’Organisateur via l’adresse postale suivante : Tagada Games 55, rue Legendre 75017 Paris.<br><br>  En cas de non-respect de vos droits, vous pouvez introduire une réclamation auprès de la CNIL.<br><br>  12.6 Diffusion du nom des gagnants<br><br>    En acceptant le présent règlement des jeux, chaque participant ayant obtenu un lot autorise l’Organisateur à utiliser son prénom et l\'initiale de son nom ainsi que son code postal, sans que cela lui confère une rémunération, un droit ou un avantage quelconque autre que l\'attribution de son lot.<br><br>     Après acceptation préalable et expresse du participant ayant obtenu un lot, l’Organisateur pourra également utiliser la photo communiquée par ce dernier afin de la diffuser sur l’Application et sur l\'ensemble de ses promotions.<br><br>    L’utilisation de ces données personnelles a pour unique objet de rendre public l’identité du gagnant pendant une période qui ne saurait dépasser 24 mois.<br><br>  12.7 Durée de conservation<br><br>  Vos informations personnelles seront conservées sous une forme identifiable que pendant le temps nécessaire aux opérations pour lesquelles elles ont été collectées et dans le respect de la réglementation en vigueur.<br><br>  Les Données personnelles recueillies pour participer au jeu seront conservées pendant toute la durée du jeu et après l’expiration de cette opération, pour la durée nécessaire à la désignation du gagnant, à la gestion des lots et des éventuelles réclamations, soit une durée totale maximale de trois ans. Au terme de cette période, les données sont détruites conformément aux mesures prescrites par la législation en vigueur.<br><br>  Les données permettant de retracer le recueil de votre consentement sont conservées par l’Organisateur pendant une durée maximum de 5 ans afin d’être en mesure, le cas échéant, d’apporter la preuve de votre consentement.<br><br>  Vos données sont supprimées sans délai en cas de décès connu par l’Organisateur.<br><br>  Certaines données pourront être conservées pour une durée supplémentaire pour la gestion de réclamations et/ou contentieux ainsi que pour répondre à nos obligations légales ou réglementaires ou encore pour répondre à des demandes d’autorités habilitées.<br><br>  ARTICLE 13 – COOKIES  Dans le cadre de l’Application, nous utilisons des cookies. Il s’agit de petits fichiers texte déposés sur votre disque dur par le site internet visité, lui permettant d’enregistrer et de stocker certaines informations de votre ordinateur mais aussi sur vous.<br><br>  Pour toute information complémentaire, veuillez consulter notre Politique de Cookies.<br><br>  ARTICLE 14 - RÉCLAMATION – DROIT APPLICABLE<br><br>  Toute réclamation ou contestation relative au jeu ou au règlement devra obligatoirement parvenir par écrit à l’Organisateur.<br><br>   Le présent règlement est soumis au droit français.<br><br>   En cas de litige, les juridictions françaises seront seules compétentes.<br><br> '),(7,'faq',NULL,1,'How many programmers does it take to change a light bulb?\nNone – It’s a hardware problem'),(8,'faq',NULL,2,' ¿Qué es un terapeuta? – 1024 Gigapeutas.'),(9,'faq',NULL,8,'<b>Fonctionnement de Sloto Prizes</b><br><br> <b>Le jeu est-il totalement gratuit ?</b><br><br> Oui. Sloto Prizes est un jeu 100% gratuit sans obligation d\'achat. L’app est financée exclusivement par les annonceurs.<br> Pour plus de détails, vous pouvez consulter notre règlement.<br><br> <b>Comment jouer et gagner sur Sloto Prizes ?</b><br><br> Sloto Prizes repose sur un principe d’instant gagnant. En jouant que Sloto Prizes, vous pouvez gagner des jetons, des parties, et du cash !<br><br> Une fois l’app installée, vous pouvez commencer directement à jouer. Il vous suffit de lancer la slot machine en cliquant sur le bouton « jouer »<br><br> Vous saurez instantanément si vous avez gagné ou perdu. La liste des combinaisons gagnantes est disponible dans la rubrique Aide du site. <br><br> <b>Qui peut jouer à Sloto Prizes ?</b><br><br> Toute personne majeure peut jouer à Sloto Prizes»<br><br> <b>Combien de parties peut-ont jouer quotidiennement ?</b><br><br> Les parties se rechargent plusieurs fois par jour.<br><br> Vous pouvez également obtenir plus de parties en vous rendant dans la rubrique Bonus. Suivez les instructions pour obtenir vos parties.<br><br> <b>Fonctionnement de la tombola</b><br><br> <b>Qu\'est-ce que la tombola ?</b><br><br> La tombola repose sur un principe de tirage au sort. Chaque participant peut miser autant de tickets qu\'il le souhaite, en fonction du nombre de tickets dont il dispose, sur le ou les cadeau(x) proposés dans la rubrique Cadeaux. Chaque tombola est définie sur une période de temps limitée. À la fin de ladite période, un tirage au sort déterminant le gagnant est effectué de manière informatique et automatique. Le gagnant reçoit une notification l\'informant de son gain.<br><br> <b>Comment gagner des tickets de tombola ?</b><br><br> Vous pouvez gagner des tickets de tombola en actionnant la machine à sous ou en échangeant vos jetons contre des tickets de tombola.<br><br> <b>Comment jouer à la tombola ?</b><br><br> Pour jouer à la tombola, rendez vous dans la rubrique Cadeaux. Choisissez le ou les cadeau(x) qui vous intéresse(nt). Pour participer, vous devez miser au minimum le nombre de tickets indiqué sur chaque lot. Chaque participation vous donne une chance de gagner. Vous pouvez acquérir autant de participations que vous le souhaitez tant que vous avez suffisamment de tickets de tombola.<br><br> <b>Qui sommes nous ?</b><br><br> Sloto Prizes, est une app éditée par la société Tagada Games - Société par actions simplifiée au capital de 1.000 Euros dont le siège social est situé : 55 rue Legendre 75017 Paris, France.<br><br> <b>Informations personnelles</b><br><br> <b>Comment modifier mes informations personnelles ?</b><br><br> Rendez vous dans la rubrique Mon compte. Vous pourrez modifier vos données personnelles.<br><br> <b>Vous n\'avez pas trouvé de réponse adaptée</b><br><br> Si vous rencontrez un problème et que la réponse à votre question n\'apparaît pas ci-dessus ou dans le règlement du jeu, n\'hésitez pas à nous contacter en utilisant la rubrique Contact en bas de chaque page.<br><br>'),(10,'privacyPolicy',NULL,1,'Why do programmers always mix up Halloween and Christmas?\nBecause Oct 31 equals Dec 25'),(11,'privacyPolicy',NULL,2,'Cuando escribí este código solo Dios y yo sabíamos, ahora solo Dios sabe'),(12,'privacyPolicy',NULL,8,'<b>Politique de Protection des Données Personnelles</b><br><br>   La présente Politique de Protection des Données Personnelles a pour objectif de vous informer du traitement de vos données personnelles lors de votre navigation sur le l’application mobile  Sloto Prizes, édités par la société Tagada Games (l’ «<b> App</b> »).<br><br>  Nous souhaitons que vous compreniez la nature des informations personnelles que nous recueillons, la façon dont nous les utilisons, avec qui nous les partageons, comment nous nous efforçons de les protéger, comment vous pouvez y accéder et/ou les corriger et, enfin, comment nous contacter.<br><br>  Le présent document a également pour objet de vous communiquer toutes les informations imposées par l’article 32 de la loi Informatique et Libertés et par l’article 13 du Règlement UE 2016/679 du Parlement européen et du Conseil du 27 avril 2016 relatif à la protection des personnes physiques à l\'égard du traitement des données à caractère personnel et à la libre circulation de ces données («<b> RGPD</b> »).<br><br>  Enfin, nous attirons votre attention sur le fait que nous pouvons être amenés à apporter des modifications à ce présent document notamment pour le conformer à toute nouvelle réglementation ou pour l’adapter à nos pratiques.<br><br>  <b>Article 1 – Responsable du traitement</b><br><br>Les Données personnelles recueillies sur l’App font l’objet de traitements de données informatiques dont le responsable est la société Tagada Games, S.A.S au capital de 1.000 euros, dont le siège social est situé 55, rue Legendre 75017 Paris.<br><br>  <b>Article 2 - Données à caractère personnel pouvant être collectées sur le Site</b><br><br>  La notion de Données à caractère personnel désigne toute information relative à une personne physique identifiée ou identifiable.<br><br>  TAGADA GAMES est amenée à collecter et traiter les Données à caractère personnel suivantes :<br><br>  <b>En renseignant ses informations personnelles:</b> les données d’identification telles que le prénom, le nom, la date de naissance, l’adresse, le téléphone et l’adresse email de l’Utilisateur. Ces données ne sont pas utilisées à des fins commerciales.<br><br>  <b>En naviguant sur l’App:</b> les données de navigation telles que l’adresse IP et les indications en matière de communication qui sont mises à disposition du fait de l’utilisation de votre dispositif sont collectées automatiquement… Ces données sont uniquement utilisées pour les finalités relatives au règlement des litiges. En outre, des données statistiques peuvent être recueillies lors de votre visite et être utilisées (nombre de pages vue, nombre de visites de l\'app…).<br><br>  L\'application utilise des services tiers susceptibles de collecter des informations permettant de vous identifier.<br><br>  Google Play Services<br> Unity<br> Appodeal<br> IronSource<br>  Les champs requis doivent être obligatoirement renseignés, faute de quoi votre demande ne pourra pas être traitée par TAGADA GAMES.<br><br>   <b>Article 3 - Finalités des traitements de données personnelles et bases légales</b><br><br>  Vos Données sont traitées par TAGADA GAMES pour vous permettre de bénéficier des services proposés par le Site. Les données collectées, le traitement qui leur est appliqué ainsi que la liste des partenaires sont présentés dans l’onglet « j’affine mes préférence ».<br><br>  En cas d’acceptation expresse de votre part, vos données pourront également être utilisées par TAGADA GAMES pour :<br><br> Évaluer, comprendre et rendre compte de la façon dont vous utilisez le service.<br> Adresser ultérieurement des publicités et/ou du contenu personnalisés dans d’autres contextes<br> Sélectionner et diffuser des contenus à votre égard, puis évaluer leur diffusion ainsi que leur efficacité<br><br>  La base légale de ces traitements est le consentement. Ces traitements sont facultatifs et ne s’appliquent que si vous les acceptez expressément. <br><br>  Vos données sont également traitées par TAGADA GAMES pour :<br><br>  Répondre à vos réclamations : la base légale de ce traitement est l’intérêt légitime<br>  Gérer les demandes d’exercice des droits des personnes (droit d’accès, de rectification, d’effacement, d’opposition et de portabilité) : la base légale de ce traitement est l’obligation légale<br> Justifier en cas de litige le respect de nos obligations légales et réglementaires : la base légale de ce traitement est l’obligation légale<br>  <b>Article 4 - Destinataires ou catégories de destinataires des Données à caractère personnel</b><br><br>  Les destinataires des données personnelles collectées sont les membres du personnel du service marketing de TAGADA GAMES.<br><br>   TAGADA GAMES peut également divulguer vos Données à caractère personnel lorsque cette divulgation est nécessaire pour :<br><br>  Se conformer à la loi (ou à une assignation à témoigner ou ordonnance du tribunal) ;<br> Se conformer aux demandes légitimes émanant d\'autorités publiques et gouvernementales ;<br> Prévenir un délit ou procéder à une enquête, par exemple en cas de fraude ou de vol d\'identité ;<br>Protéger les droits, la propriété ou la sécurité de TAGADA GAMES, des Utilisateurs ou de tiers.<br><br>  Vos Données à caractère personnel peuvent, le cas échéant, être transmises aux sociétés sous-traitantes auxquelles TAGADA GAMES peut faire appel dans le cadre de l’exécution des services. TAGADA GAMES assure la conformité avec les exigences de protection des données pour toutes ses sociétés sous-traitantes.<br><br>  <b>Article 5 - Transfert de vos données dans un pays situé en dehors de l’Union Européenne</b><br><br>  Il est entendu par transfert de données, toute communication, copie ou déplacement de données personnelles ayant vocation à être traitées dans un pays tiers ou toutes données auxquelles un tiers situé hors de France peut avoir accès.<br><br>  Dans l’hypothèse où vos données seraient transférées à nos partenaires situés en dehors de l’Union Européenne, le responsable du traitement garantit :<br><br>  Avoir recueilli toutes les éventuelles autorisations nécessaires auprès de l’autorité compétente pour réaliser ledit transfert ;<br><br>  Avoir encadré ce transfert par les clauses contractuelles types de la Commission européenne ou par des règles internes d\'entreprise (Binding Corporate Rules) ou des clauses contractuelles ad hoc dont la CNIL a préalablement reconnu qu\'elles garantissent un niveau de protection suffisant de la vie privée et des droits fondamentaux des personnes.<br><br>  En cas de transfert de vos données aux États-Unis, TAGADA GAMES s’engage à vérifier si l’entité destinataire desdites données a adhéré au « Privacy Shield », mécanisme d’auto-certification pour les entreprises établies aux États-Unis. Ce mécanisme a été reconnu par la Commission européenne comme offrant un niveau de protection adéquat aux données à caractère personnel transférées par une entité européenne vers des entreprises établies aux États-Unis.<br><br>  <b>Article 6 - Désignation d’un Délégué à la protection des données </b><br><br>  TAGADA GAMES a désigné un Délégué à la Protection des Données (« <b>DPO</b> ») en charge du respect de la réglementation relative à la protection des données personnelles dont les coordonnées apparaissent ci-dessous :<br><br>  TAGADA GAMES<br> DPO<br> 55, rue Legendre 75017 Paris<br> dpo@tagadagames.com<br>  <b>Article 7 - Droits des personnes</b><br><br>  Vous disposez d’un droit d’accès, de rectification, d’effacement et à la portabilité des données vous concernant. Vous pouvez également demander la limitation du traitement des données vous concernant ou vous opposer à ce traitement. Vous êtes en droit de communiquer à TAGADA GAMES vos directives relatives au sort des données personnelles vous concernant en cas de décès.<br><br>  Vos droits peuvent être exercés auprès du Délégué à la Protection des Données de TAGADA GAMES dont les coordonnées sont indiquées au sein de la présente Politique.<br><br>  Nous nous réservons le droit d’exiger le paiement de « frais raisonnables » liés aux coûts administratifs supportés pour fournir les informations si votre demande est manifestement infondée ou excessive. Nous nous efforcerons de répondre à vos demandes dans les délais requis par le RGPD.<br><br>  Afin de protéger votre vie privée et d\'assurer votre sécurité, nous prendrons également des mesures raisonnables pour vérifier votre identité avant de vous donner accès à vos informations personnelles ou de corriger, modifier ou supprimer vos abonnements. Toute demande pourra être accompagnée d’une copie de votre carte d’identité.<br><br>En cas de non-respect de vos droits, vous pouvez introduire une réclamation auprès de la CNIL.<br><br>   <b>Article 8 - Sécurité et confidentialité des données</b><br><br>  Nous mettons en œuvre des mesures organisationnelles et techniques de sécurité destinées à garantir la confidentialité et l’intégrité de vos données à caractère personnel. A ce titre, les précautions administratives, organisationnelles, techniques et physiques ont pour but de protéger vos données à caractère personnel de la perte, du vol, de l’abus d’utilisation, d’un accès non autorisé, de transmission non autorisée, de toute modification ou destruction indue.<br><br>  Dans tous les cas, le responsable de traitement prendra les mesures de sécurité adaptées à la nature des données collectées.<br><br>  Les données collectées sont stockées de manière confidentielle et protégées à un haut niveau de sécurité. Les serveurs où sont stockées ces données sont conformes aux normes de sécurité actuellement en vigueur. Ils sont protégés contre des attaques numériques et des attaques physiques.<br> Toutes les pages du Site sur lesquelles vous êtes amenés à communiquer des données personnelles sont sécurisées.<br><br>  Toutefois, malgré tous nos efforts, nous ne pouvons pas garantir l’infaillibilité de cette protection en raison de risques inévitables pouvant survenir lors de la transmission de données personnelles.<br><br>  <b>Article 9 - Durée de conservation des Données à caractère personnel</b><br><br>TAGADA GAMES ne conserve vos Données à caractère personnel que pendant le temps nécessaire aux opérations pour lesquelles elles ont été collectées et dans le respect de la réglementation en vigueur.<br><br>  D’une manière générale, vos Données à caractère personnel sont conservées tant que votre Compte personnel reste actif puis font l’objet d’un archivage afin de répondre aux obligations légales ou à des fins probatoires ou sont anonymisées à des fins d’études et statistiques.<br><br>  Vos Données personnelles collectées pour vous envoyer des newsletters/offres commerciales seront utilisées par TAGADA GAMES à cette fin jusqu’au retrait du consentement et au plus tard pendant une durée de trois ans à compter de la date du recueil de votre consentement.<br><br>  Les données permettant de retracer le recueil de votre consentement sont conservées par TAGADA GAMES pendant une durée de 5 ans afin d’être en mesure, le cas échéant, d’apporter la preuve de votre consentement.<br><br> Les données sont supprimées sans délai lorsque TAGADA GAMES prend connaissance du décès de la personne.<br><br>  Certaines données pourront être conservées pour une durée supplémentaire pour la gestion de réclamations et/ou contentieux ainsi que pour répondre à nos obligations légales ou réglementaires ou encore pour répondre à des demandes d’autorités habilitées.<br><br><b>Article 10 - Liens vers des sites externes</b><br><br>  Il est précisé que certains liens sur l’App permettent d’accéder à des sites externes (i-frame, bannières, etc…) et vous donnent accès à des services tiers (comme les réseau sociaux). <br><br> La présente Politique ne concerne que les informations collectées sur le Site. À ce titre, TAGADA GAMES ne saurait être responsable de l’utilisation de vos Données sur ces autres sites.<br><br>  <b>10.1 Affichage publicitaire :</b><br><br>  Certains traitements utiles pour les affichages publicitaires sur l’App sont mis en œuvre en tout ou partie par des tiers partenaires (par exemple des publicités ou des liens sponsorisés). Ceux-ci sont responsables des technologies utilisées aux fins de permettre la collecte de données (comme des identifiants contenus dans les cookies associés aux pages visitées), à des fins de ciblage publicitaire, y compris sur d’autres sites.<br> Nous vous invitons à vous reporter sur ce point à notre <b>Politique de Cookies.</b>  <b>10.2 Lien vers d’autre site</b><br><br>L’App peut par ailleurs contenir des liens vers d’autres sites ou des services proposés par des tiers.<br><br> <b>10.3 Responsabilité</b><br><br>  Nous n’avons pas de contrôle sur la manière dont les sites et services tiers traitent vos Données personnelles. Nous ne vérifions pas les sites et services tiers, et nous ne sommes pas responsables de ces sites et services tiers ou de leurs pratiques en matière de protection de la vie privée. Nous vous invitons à vous référer aux politiques de confidentialité ou déclaration de protection de la vie privée des sites ou services tiers auxquels vous accédez à partir de nos sites ou services.<br><br>  <b>Article 11 - Cookies</b><br><br>  Dans le cadre de nos applications, nous utilisons des cookies. Il s’agit de petits fichiers texte déposés dans la mémoire interne de votre dispositif, lui permettant d’enregistrer et de stocker certaines informations de votre dispositif mais aussi sur vous.<br><br>  Ils sont essentiels pour le fonctionnement d’internet car ils permettent la bonne communication entre votre dispositif et le serveur. Les informations récupérées servent aussi à faire fonctionner l\'application.<br><br>  Pour toute information complémentaire, veuillez consulter <b>notre Politique de Cookies.</b> '),(402,'card',30,1,'a'),(403,'card',30,2,'b'),(404,'card',30,8,'c'),(405,'card',31,1,'a'),(406,'card',31,2,'b'),(407,'card',31,8,'c'),(408,'card',32,1,'dd'),(409,'card',32,2,'ddd'),(410,'card',32,8,'dddd'),(423,'cardSet',27,1,'aa'),(424,'cardSet',27,2,'bb'),(425,'cardSet',27,8,'cc');
/*!40000 ALTER TABLE `localization` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `log`
--

DROP TABLE IF EXISTS `log`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `log` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cratedAt` datetime DEFAULT current_timestamp(),
  `text` longtext DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=134 DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `log`
--

LOCK TABLES `log` WRITE;
/*!40000 ALTER TABLE `log` DISABLE KEYS */;
INSERT INTO `log` VALUES (1,'2020-11-26 19:09:49','11-26 19:09 | App catch: [ReferenceError] text is not defined\n              \n                             at                            src/modules/meta/meta-services/localization.service.ts:62  rows.push({id: resp.insertId, languageId: language.id, item_id, text})\n                             at step                       src/modules/meta/meta-services/localization.service.ts:33  return row.text                                                       \n                             at next                       src/modules/meta/meta-services/localization.service.ts:14  item_id?: number;                                                     \n                             at step                       src/modules/meta/meta-services/localization.service.ts:18                                                                        \n                             at next                       src/modules/meta/meta-services/localization.service.ts:14  item_id?: number;                                                     \n                             at fulfilled                  src/modules/meta/meta-services/localization.service.ts:5   import {queryOne, queryExec, query, queryScalar} from \'../../../db\'   \n                             at processTicksAndRejections  internal/process/task_queues.js:97                                                                                                ()\n'),(2,'2020-11-26 19:10:32','11-26 19:10 | App catch: [ReferenceError] text is not defined\n              \n                             at                            src/modules/meta/meta-services/localization.service.ts:62  rows.push({id: resp.insertId, languageId: language.id, item_id, text})\n                             at step                       src/modules/meta/meta-services/localization.service.ts:33  return row.text                                                       \n                             at next                       src/modules/meta/meta-services/localization.service.ts:14  item_id?: number;                                                     \n                             at step                       src/modules/meta/meta-services/localization.service.ts:18                                                                        \n                             at next                       src/modules/meta/meta-services/localization.service.ts:14  item_id?: number;                                                     \n                             at fulfilled                  src/modules/meta/meta-services/localization.service.ts:5   import {queryOne, queryExec, query, queryScalar} from \'../../../db\'   \n                             at processTicksAndRejections  internal/process/task_queues.js:97                                                                                                ()\n'),(3,'2020-11-26 19:19:05','11-26 19:19 | App catch: [ReferenceError] text is not defined\n              \n                             at                            src/modules/meta/meta-services/localization.service.ts:62  rows.push({id: resp.insertId, languageId: language.id, item_id, text})\n                             at step                       src/modules/meta/meta-services/localization.service.ts:33  return row.text                                                       \n                             at next                       src/modules/meta/meta-services/localization.service.ts:14  item_id?: number;                                                     \n                             at step                       src/modules/meta/meta-services/localization.service.ts:18                                                                        \n                             at next                       src/modules/meta/meta-services/localization.service.ts:14  item_id?: number;                                                     \n                             at fulfilled                  src/modules/meta/meta-services/localization.service.ts:5   import {queryOne, queryExec, query, queryScalar} from \'../../../db\'   \n                             at processTicksAndRejections  internal/process/task_queues.js:97                                                                                                ()\n'),(4,'2020-11-26 19:25:27','11-26 19:25 | App catch: [ReferenceError] camelcawsekeys is not defined\n              \n                             at                   src/modules/meta/meta-services/localization.service.ts:46  const languages: Language[] = camelcawsekeys(await query(`select * from languag…\n                             at step              src/modules/meta/meta-services/localization.service.ts:33  return row.text                                                                 \n                             at next              src/modules/meta/meta-services/localization.service.ts:14  item_id?: number;                                                               \n                             at                   src/modules/meta/meta-services/localization.service.ts:8   import { getDefaultLanguage } from \'../meta.repo/language.repo\'                 \n                             at new Promise                                                                                                                                                  \n                             at __awaiter         src/modules/meta/meta-services/localization.service.ts:4   import { format } from \'date-fns\'                                               \n                             at getLocalizations  src/modules/meta/meta-services/localization.service.ts:39  export const getLocalizations = async (item: string, item_id?: number): Promise…\n                             at                   src/modules/slot/slot.controller.ts:451                    const localizations = await getLocalizations(req.query.item as string)          \n                             at step              src/modules/slot/slot.controller.ts:52                     res.status(200).json(resp)                                                      \n                             at next              src/modules/slot/slot.controller.ts:33                     import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(5,'2020-11-26 19:32:08','11-26 19:32 | App catch: {    message:   \"Column count doesn\\\'t match value count at row 1\",\n                                 code:   \"ER_WRONG_VALUE_COUNT_ON_ROW\",\n                                errno:    1136,\n                             sqlState:   \"21S01\",\n                           sqlMessage:   \"Column count doesn\\\'t match value count at row 1\",\n                                 data: { select:   \"insert into localization(item, language_id, text, item_id) …\",\n                                         params: [\"cardAlbum\", 8, \"\", 1],\n                                          trace:   \"/mnt/1t/prg/api/src/db.ts:190:51,step (/mnt/1t/prg/api/src/…\"  } } ()\n'),(6,'2020-11-26 19:32:54','11-26 19:32 | App catch: {    message:   \"Column count doesn\\\'t match value count at row 1\",\n                                 code:   \"ER_WRONG_VALUE_COUNT_ON_ROW\",\n                                errno:    1136,\n                             sqlState:   \"21S01\",\n                           sqlMessage:   \"Column count doesn\\\'t match value count at row 1\",\n                                 data: { select:   \"insert into localization(item, language_id, text, item_id) …\",\n                                         params: [\"cardAlbum\", 8, \"\", 1],\n                                          trace:   \"/mnt/1t/prg/api/src/db.ts:190:51,step (/mnt/1t/prg/api/src/…\"  } } ()\n'),(7,'2020-11-27 09:40:48','11-27 09:40 | App catch: {    message:   \"Table \\\'wopidom.card_set\\\' doesn\\\'t exist\",\n                                 code:   \"ER_NO_SUCH_TABLE\",\n                                errno:    1146,\n                             sqlState:   \"42S02\",\n                           sqlMessage:   \"Table \\\'wopidom.card_set\\\' doesn\\\'t exist\",\n                                 data: { select: \"select * from card_set\", params: [] } } ()\n'),(8,'2020-11-27 09:40:53','11-27 09:40 | App catch: {    message:   \"Table \\\'wopidom.card_set\\\' doesn\\\'t exist\",\n                                 code:   \"ER_NO_SUCH_TABLE\",\n                                errno:    1146,\n                             sqlState:   \"42S02\",\n                           sqlMessage:   \"Table \\\'wopidom.card_set\\\' doesn\\\'t exist\",\n                                 data: { select: \"select * from card_set\", params: [] } } ()\n'),(9,'2020-11-27 12:10:03','11-27 12:10 | App catch: { data: {  query:   \"\\n        select *\\n          from user\\n        where id = \\\"2\\\"\",\n                                   params: []                                                                     } } ()\n'),(10,'2020-11-27 12:10:03','11-27 12:10 | App catch: { data: {  query:   \"\\n        select *\\n          from user\\n        where id = \\\"2\\\"\",\n                                   params: []                                                                     } } ()\n'),(11,'2020-11-27 17:18:08','11-27 17:18 | App catch: {    message:   \"Table \\\'wopidom.cardSet\\\' doesn\\\'t exist\",\n                                 code:   \"ER_NO_SUCH_TABLE\",\n                                errno:    1146,\n                             sqlState:   \"42S02\",\n                           sqlMessage:   \"Table \\\'wopidom.cardSet\\\' doesn\\\'t exist\",\n                                 data: { select: \"\\n    update cardSet set \\n      reward_amount = ?,\\n      reward\\n\\n…\" } } ()\n'),(12,'2020-11-27 17:18:26','11-27 17:18 | App catch: {    message:   \"Unknown column \\\'rewardType\\\' in \\\'field list\\\'\",\n                                 code:   \"ER_BAD_FIELD_ERROR\",\n                                errno:    1054,\n                             sqlState:   \"42S22\",\n                           sqlMessage:   \"Unknown column \\\'rewardType\\\' in \\\'field list\\\'\",\n                                 data: { select: \"\\n    update card_set set \\n      reward_amount = ?,\\n      rewar\\n\\n…\" } } ()\n'),(13,'2020-11-27 17:21:33','11-27 17:21 | App catch: {    message:   \"Out of range value for column \\\'item_id\\\' at row 1\",\n                                 code:   \"ER_WARN_DATA_OUT_OF_RANGE\",\n                                errno:    1264,\n                             sqlState:   \"22003\",\n                           sqlMessage:   \"Out of range value for column \\\'item_id\\\' at row 1\",\n                                 data: { select: \"insert into localization(item, language_id, text, item_id) …\" } } ()\n'),(14,'2020-11-27 17:22:55','11-27 17:22 | App catch: {    message:   \"Out of range value for column \\\'item_id\\\' at row 1\",\n                                 code:   \"ER_WARN_DATA_OUT_OF_RANGE\",\n                                errno:    1264,\n                             sqlState:   \"22003\",\n                           sqlMessage:   \"Out of range value for column \\\'item_id\\\' at row 1\",\n                                 data: { select: \"insert into localization(item, language_id, text, item_id) …\" } } ()\n'),(15,'2020-11-27 17:48:05','11-27 17:48 | App catch: {    message:   \"Table \\\'wopidom.cardSet\\\' doesn\\\'t exist\",\n                                 code:   \"ER_NO_SUCH_TABLE\",\n                                errno:    1146,\n                             sqlState:   \"42S02\",\n                           sqlMessage:   \"Table \\\'wopidom.cardSet\\\' doesn\\\'t exist\",\n                                 data: { select: \"insert into cardSet(reward_amount,reward_type,theme_color) …\" } } ()\n'),(16,'2020-11-27 17:48:24','11-27 17:48 | App catch: {    message:   \"Column count doesn\\\'t match value count at row 1\",\n                                 code:   \"ER_WRONG_VALUE_COUNT_ON_ROW\",\n                                errno:    1136,\n                             sqlState:   \"21S01\",\n                           sqlMessage:   \"Column count doesn\\\'t match value count at row 1\",\n                                 data: { select: \"insert into card_set(reward_amount,reward_type,theme_color)…\" } } ()\n'),(17,'2020-11-27 17:55:08','11-27 17:55 | App catch: [BadRequestError] Reward Amount can not be empty\n              \n                             at                      src/modules/slot/slot.services/card.service.ts:109  if(cardSet.rewardAmount === 0) throw createHttpError(StatusCodes.BAD_REQUEST, \'…\n                             at step                 src/modules/slot/slot.services/card.service.ts:33   const where = cardSetId ? ` where card_set_id = ${cardSetId}`: \'\'               \n                             at next                 src/modules/slot/slot.services/card.service.ts:14   card set                                                                        \n                             at                      src/modules/slot/slot.services/card.service.ts:8    import { Language } from \"../../meta/models\"                                    \n                             at new Promise                                                                                                                                              \n                             at __awaiter            src/modules/slot/slot.services/card.service.ts:4    import { StatusCodes } from \"http-status-codes\"                                 \n                             at postCardSetsForCrud  src/modules/slot/slot.services/card.service.ts:106  export const postCardSetsForCrud = async (cardSet: CardSet): Promise<any> => {  \n                             at                      src/modules/slot/slot.controller.ts:486             const cards = await postCardSetsForCrud(req.body)                               \n                             at step                 src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next                 src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(18,'2020-11-27 17:58:55','11-27 17:58 | App catch: [BadRequestError] Reward Amount can not be empty\n              \n                             at                      src/modules/slot/slot.services/card.service.ts:109  if(cardSet.rewardAmount === 0) throw createHttpError(StatusCodes.BAD_REQUEST, \'…\n                             at step                 src/modules/slot/slot.services/card.service.ts:33   const where = cardSetId ? ` where card_set_id = ${cardSetId}`: \'\'               \n                             at next                 src/modules/slot/slot.services/card.service.ts:14   card set                                                                        \n                             at                      src/modules/slot/slot.services/card.service.ts:8    import { Language } from \"../../meta/models\"                                    \n                             at new Promise                                                                                                                                              \n                             at __awaiter            src/modules/slot/slot.services/card.service.ts:4    import { StatusCodes } from \"http-status-codes\"                                 \n                             at postCardSetsForCrud  src/modules/slot/slot.services/card.service.ts:106  export const postCardSetsForCrud = async (cardSet: CardSet): Promise<any> => {  \n                             at                      src/modules/slot/slot.controller.ts:486             const cards = await postCardSetsForCrud(req.body)                               \n                             at step                 src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next                 src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(19,'2020-11-27 17:59:17','11-27 17:59 | App catch: [BadRequestError] Reward Amount can not be empty\n              \n                             at                      src/modules/slot/slot.services/card.service.ts:109  if(cardSet.rewardAmount === 0) throw createHttpError(StatusCodes.BAD_REQUEST, \'…\n                             at step                 src/modules/slot/slot.services/card.service.ts:33   const where = cardSetId ? ` where card_set_id = ${cardSetId}`: \'\'               \n                             at next                 src/modules/slot/slot.services/card.service.ts:14   card set                                                                        \n                             at                      src/modules/slot/slot.services/card.service.ts:8    import { Language } from \"../../meta/models\"                                    \n                             at new Promise                                                                                                                                              \n                             at __awaiter            src/modules/slot/slot.services/card.service.ts:4    import { StatusCodes } from \"http-status-codes\"                                 \n                             at postCardSetsForCrud  src/modules/slot/slot.services/card.service.ts:106  export const postCardSetsForCrud = async (cardSet: CardSet): Promise<any> => {  \n                             at                      src/modules/slot/slot.controller.ts:486             const cards = await postCardSetsForCrud(req.body)                               \n                             at step                 src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next                 src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(20,'2020-11-27 17:59:33','11-27 17:59 | App catch: [BadRequestError] Reward Amount can not be empty\n              \n                             at                      src/modules/slot/slot.services/card.service.ts:109  if(cardSet.rewardAmount === 0) throw createHttpError(StatusCodes.BAD_REQUEST, \'…\n                             at step                 src/modules/slot/slot.services/card.service.ts:33   const where = cardSetId ? ` where card_set_id = ${cardSetId}`: \'\'               \n                             at next                 src/modules/slot/slot.services/card.service.ts:14   card set                                                                        \n                             at                      src/modules/slot/slot.services/card.service.ts:8    import { Language } from \"../../meta/models\"                                    \n                             at new Promise                                                                                                                                              \n                             at __awaiter            src/modules/slot/slot.services/card.service.ts:4    import { StatusCodes } from \"http-status-codes\"                                 \n                             at postCardSetsForCrud  src/modules/slot/slot.services/card.service.ts:106  export const postCardSetsForCrud = async (cardSet: CardSet): Promise<any> => {  \n                             at                      src/modules/slot/slot.controller.ts:486             const cards = await postCardSetsForCrud(req.body)                               \n                             at step                 src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next                 src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(21,'2020-11-27 18:03:15','11-27 18:03 | App catch: [BadRequestError] Reward Amount can not be empty\n              \n                             at                      src/modules/slot/slot.services/card.service.ts:110  if(cardSet.rewardAmount === 0) throw createHttpError(StatusCodes.BAD_REQUEST, \'…\n                             at step                 src/modules/slot/slot.services/card.service.ts:33   export const getCards = async (cardSetId?: number): Promise<Card[] | undefined>…\n                             at next                 src/modules/slot/slot.services/card.service.ts:14   /*                                                                              \n                             at                      src/modules/slot/slot.services/card.service.ts:8    import { getLocalizations, Localization } from \"../../meta/meta-services/locali…\n                             at new Promise                                                                                                                                              \n                             at __awaiter            src/modules/slot/slot.services/card.service.ts:4    import { StatusCodes } from \"http-status-codes\"                                 \n                             at postCardSetsForCrud  src/modules/slot/slot.services/card.service.ts:107  export const postCardSetsForCrud = async (cardSet: CardSet): Promise<any> => {  \n                             at                      src/modules/slot/slot.controller.ts:486             const cards = await postCardSetsForCrud(req.body)                               \n                             at step                 src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next                 src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(22,'2020-11-27 18:03:23','11-27 18:03 | App catch: [BadRequestError] Reward Type is invalid\n              \n                             at                      src/modules/slot/slot.services/card.service.ts:111  if(!isValidPaymentType(cardSet.rewardType)) throw createHttpError(StatusCodes.B…\n                             at step                 src/modules/slot/slot.services/card.service.ts:33   export const getCards = async (cardSetId?: number): Promise<Card[] | undefined>…\n                             at next                 src/modules/slot/slot.services/card.service.ts:14   /*                                                                              \n                             at                      src/modules/slot/slot.services/card.service.ts:8    import { getLocalizations, Localization } from \"../../meta/meta-services/locali…\n                             at new Promise                                                                                                                                              \n                             at __awaiter            src/modules/slot/slot.services/card.service.ts:4    import { StatusCodes } from \"http-status-codes\"                                 \n                             at postCardSetsForCrud  src/modules/slot/slot.services/card.service.ts:107  export const postCardSetsForCrud = async (cardSet: CardSet): Promise<any> => {  \n                             at                      src/modules/slot/slot.controller.ts:486             const cards = await postCardSetsForCrud(req.body)                               \n                             at step                 src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next                 src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(23,'2020-11-27 18:03:40','11-27 18:03 | App catch: [BadRequestError] Reward Type is invalid\n              \n                             at                      src/modules/slot/slot.services/card.service.ts:111  if(!isValidPaymentType(cardSet.rewardType)) throw createHttpError(StatusCodes.B…\n                             at step                 src/modules/slot/slot.services/card.service.ts:33   export const getCards = async (cardSetId?: number): Promise<Card[] | undefined>…\n                             at next                 src/modules/slot/slot.services/card.service.ts:14   /*                                                                              \n                             at                      src/modules/slot/slot.services/card.service.ts:8    import { getLocalizations, Localization } from \"../../meta/meta-services/locali…\n                             at new Promise                                                                                                                                              \n                             at __awaiter            src/modules/slot/slot.services/card.service.ts:4    import { StatusCodes } from \"http-status-codes\"                                 \n                             at postCardSetsForCrud  src/modules/slot/slot.services/card.service.ts:107  export const postCardSetsForCrud = async (cardSet: CardSet): Promise<any> => {  \n                             at                      src/modules/slot/slot.controller.ts:486             const cards = await postCardSetsForCrud(req.body)                               \n                             at step                 src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next                 src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(24,'2020-11-27 18:04:10','11-27 18:04 | App catch: [BadRequestError] Reward Type is invalid\n              \n                             at                      src/modules/slot/slot.services/card.service.ts:111  if(!isValidPaymentType(cardSet.rewardType)) throw createHttpError(StatusCodes.B…\n                             at step                 src/modules/slot/slot.services/card.service.ts:33   export const getCards = async (cardSetId?: number): Promise<Card[] | undefined>…\n                             at next                 src/modules/slot/slot.services/card.service.ts:14   /*                                                                              \n                             at                      src/modules/slot/slot.services/card.service.ts:8    import { getLocalizations, Localization } from \"../../meta/meta-services/locali…\n                             at new Promise                                                                                                                                              \n                             at __awaiter            src/modules/slot/slot.services/card.service.ts:4    import { StatusCodes } from \"http-status-codes\"                                 \n                             at postCardSetsForCrud  src/modules/slot/slot.services/card.service.ts:107  export const postCardSetsForCrud = async (cardSet: CardSet): Promise<any> => {  \n                             at                      src/modules/slot/slot.controller.ts:486             const cards = await postCardSetsForCrud(req.body)                               \n                             at step                 src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next                 src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(25,'2020-11-27 18:08:16','11-27 18:08 | App catch: [BadRequestError] Reward Amount can not be empty\n              \n                             at                      src/modules/slot/slot.services/card.service.ts:111  if(cardSet.rewardAmount === 0) throw createHttpError(StatusCodes.BAD_REQUEST, \'…\n                             at step                 src/modules/slot/slot.services/card.service.ts:33   export const getCards = async (cardSetId?: number): Promise<Card[] | undefined>…\n                             at next                 src/modules/slot/slot.services/card.service.ts:14   /*                                                                              \n                             at                      src/modules/slot/slot.services/card.service.ts:8    import { getLocalizations, Localization } from \"../../meta/meta-services/locali…\n                             at new Promise                                                                                                                                              \n                             at __awaiter            src/modules/slot/slot.services/card.service.ts:4    import { StatusCodes } from \"http-status-codes\"                                 \n                             at postCardSetsForCrud  src/modules/slot/slot.services/card.service.ts:107  export const postCardSetsForCrud = async (cardSet: CardSet): Promise<any> => {  \n                             at                      src/modules/slot/slot.controller.ts:486             const cards = await postCardSetsForCrud(req.body)                               \n                             at step                 src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next                 src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(26,'2020-11-27 18:08:20','11-27 18:08 | App catch: [BadRequestError] Reward Type is invalid\n              \n                             at                      src/modules/slot/slot.services/card.service.ts:112  if(!isValidPaymentType(cardSet.rewardType.slice(0, -1))) throw createHttpError(…\n                             at step                 src/modules/slot/slot.services/card.service.ts:33   export const getCards = async (cardSetId?: number): Promise<Card[] | undefined>…\n                             at next                 src/modules/slot/slot.services/card.service.ts:14   /*                                                                              \n                             at                      src/modules/slot/slot.services/card.service.ts:8    import { getLocalizations, Localization } from \"../../meta/meta-services/locali…\n                             at new Promise                                                                                                                                              \n                             at __awaiter            src/modules/slot/slot.services/card.service.ts:4    import { StatusCodes } from \"http-status-codes\"                                 \n                             at postCardSetsForCrud  src/modules/slot/slot.services/card.service.ts:107  export const postCardSetsForCrud = async (cardSet: CardSet): Promise<any> => {  \n                             at                      src/modules/slot/slot.controller.ts:486             const cards = await postCardSetsForCrud(req.body)                               \n                             at step                 src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next                 src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(27,'2020-11-27 18:09:24','11-27 18:09 | App catch: [BadRequestError] Reward Amount can not be empty\n              \n                             at                      src/modules/slot/slot.services/card.service.ts:111  if(cardSet.rewardAmount === 0) throw createHttpError(StatusCodes.BAD_REQUEST, \'…\n                             at step                 src/modules/slot/slot.services/card.service.ts:33   export const getCards = async (cardSetId?: number): Promise<Card[] | undefined>…\n                             at next                 src/modules/slot/slot.services/card.service.ts:14   /*                                                                              \n                             at                      src/modules/slot/slot.services/card.service.ts:8    import { getLocalizations, Localization } from \"../../meta/meta-services/locali…\n                             at new Promise                                                                                                                                              \n                             at __awaiter            src/modules/slot/slot.services/card.service.ts:4    import { StatusCodes } from \"http-status-codes\"                                 \n                             at postCardSetsForCrud  src/modules/slot/slot.services/card.service.ts:107  export const postCardSetsForCrud = async (cardSet: CardSet): Promise<any> => {  \n                             at                      src/modules/slot/slot.controller.ts:486             const cards = await postCardSetsForCrud(req.body)                               \n                             at step                 src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next                 src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(28,'2020-11-27 18:09:28','11-27 18:09 | App catch: [BadRequestError] Reward Type is invalid\n              \n                             at                      src/modules/slot/slot.services/card.service.ts:112  if(!isValidPaymentType(`${cardSet.rewardType}s`)) throw createHttpError(StatusC…\n                             at step                 src/modules/slot/slot.services/card.service.ts:33   export const getCards = async (cardSetId?: number): Promise<Card[] | undefined>…\n                             at next                 src/modules/slot/slot.services/card.service.ts:14   /*                                                                              \n                             at                      src/modules/slot/slot.services/card.service.ts:8    import { getLocalizations, Localization } from \"../../meta/meta-services/locali…\n                             at new Promise                                                                                                                                              \n                             at __awaiter            src/modules/slot/slot.services/card.service.ts:4    import { StatusCodes } from \"http-status-codes\"                                 \n                             at postCardSetsForCrud  src/modules/slot/slot.services/card.service.ts:107  export const postCardSetsForCrud = async (cardSet: CardSet): Promise<any> => {  \n                             at                      src/modules/slot/slot.controller.ts:486             const cards = await postCardSetsForCrud(req.body)                               \n                             at step                 src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next                 src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(29,'2020-11-27 18:16:29','11-27 18:16 | App catch: [BadRequestError] Reward Amount can not be empty\n              \n                             at                      src/modules/slot/slot.services/card.service.ts:111  if(cardSet.rewardAmount === 0) throw createHttpError(StatusCodes.BAD_REQUEST, \'…\n                             at step                 src/modules/slot/slot.services/card.service.ts:33   export const getCards = async (cardSetId?: number): Promise<Card[] | undefined>…\n                             at next                 src/modules/slot/slot.services/card.service.ts:14   /*                                                                              \n                             at                      src/modules/slot/slot.services/card.service.ts:8    import { getLocalizations, Localization } from \"../../meta/meta-services/locali…\n                             at new Promise                                                                                                                                              \n                             at __awaiter            src/modules/slot/slot.services/card.service.ts:4    import { StatusCodes } from \"http-status-codes\"                                 \n                             at postCardSetsForCrud  src/modules/slot/slot.services/card.service.ts:107  export const postCardSetsForCrud = async (cardSet: CardSet): Promise<any> => {  \n                             at                      src/modules/slot/slot.controller.ts:486             const cards = await postCardSetsForCrud(req.body)                               \n                             at step                 src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next                 src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(30,'2020-11-27 18:16:37','11-27 18:16 | App catch: [BadRequestError] Theme Color can not be empty\n              \n                             at                      src/modules/slot/slot.services/card.service.ts:112  if(cardSet.themeColor === \'\') throw createHttpError(StatusCodes.BAD_REQUEST, \'T…\n                             at step                 src/modules/slot/slot.services/card.service.ts:33   export const getCards = async (cardSetId?: number): Promise<Card[] | undefined>…\n                             at next                 src/modules/slot/slot.services/card.service.ts:14   /*                                                                              \n                             at                      src/modules/slot/slot.services/card.service.ts:8    import { getLocalizations, Localization } from \"../../meta/meta-services/locali…\n                             at new Promise                                                                                                                                              \n                             at __awaiter            src/modules/slot/slot.services/card.service.ts:4    import { StatusCodes } from \"http-status-codes\"                                 \n                             at postCardSetsForCrud  src/modules/slot/slot.services/card.service.ts:107  export const postCardSetsForCrud = async (cardSet: CardSet): Promise<any> => {  \n                             at                      src/modules/slot/slot.controller.ts:486             const cards = await postCardSetsForCrud(req.body)                               \n                             at step                 src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next                 src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(31,'2020-11-27 18:25:26','11-27 18:25 | App catch: [BadRequestError] Missing Card Set Localizations\n              \n                             at                            src/modules/slot/slot.services/card.service.ts:117  if(!cardSet.localizations || cardSet.localizations.length !== languages.length+…\n                             at step                       src/modules/slot/slot.services/card.service.ts:33   export const getCards = async (cardSetId?: number): Promise<Card[] | undefined>…\n                             at next                       src/modules/slot/slot.services/card.service.ts:14   /*                                                                              \n                             at fulfilled                  src/modules/slot/slot.services/card.service.ts:5    import { ResultSetHeader } from \"mysql2\"                                        \n                             at processTicksAndRejections  internal/process/task_queues.js:97                                                                                                   ()\n'),(32,'2020-11-27 18:25:59','11-27 18:25 | App catch: [BadRequestError] Card Set localizations can not be empty\n              \n                             at                            src/modules/slot/slot.services/card.service.ts:119  if(localization.text === \'\') throw createHttpError(StatusCodes.BAD_REQUEST, \'Ca…\n                             at step                       src/modules/slot/slot.services/card.service.ts:33   export const getCards = async (cardSetId?: number): Promise<Card[] | undefined>…\n                             at next                       src/modules/slot/slot.services/card.service.ts:14   /*                                                                              \n                             at fulfilled                  src/modules/slot/slot.services/card.service.ts:5    import { ResultSetHeader } from \"mysql2\"                                        \n                             at processTicksAndRejections  internal/process/task_queues.js:97                                                                                                   ()\n'),(33,'2020-11-27 19:23:42','11-27 19:23 | App catch: [BadRequestError] Card Set localizations can not be empty\n              \n                             at                            src/modules/slot/slot.services/card.service.ts:120  if(localization.text === \'\') throw createHttpError(StatusCodes.BAD_REQUEST, \'Ca…\n                             at step                       src/modules/slot/slot.services/card.service.ts:52   if(languagesCount > 0 && (!card.localizations || (card.localizations.length < l…\n                             at next                       src/modules/slot/slot.services/card.service.ts:33                                                                                   \n                             at fulfilled                  src/modules/slot/slot.services/card.service.ts:24                                                                                   \n                             at processTicksAndRejections  internal/process/task_queues.js:97                                                                                                   ()\n'),(34,'2020-11-27 19:28:40','11-27 19:28 | App catch: [BadRequestError] Theme Color can not be empty\n              \n                             at                      src/modules/slot/slot.services/card.service.ts:113  if(cardSet.themeColor === \'\') throw createHttpError(StatusCodes.BAD_REQUEST, \'T…\n                             at step                 src/modules/slot/slot.services/card.service.ts:52   if(languagesCount > 0 && (!card.localizations || (card.localizations.length < l…\n                             at next                 src/modules/slot/slot.services/card.service.ts:33                                                                                   \n                             at                      src/modules/slot/slot.services/card.service.ts:27   title                                                                           \n                             at new Promise                                                                                                                                              \n                             at __awaiter            src/modules/slot/slot.services/card.service.ts:23   atlas data                                                                      \n                             at postCardSetsForCrud  src/modules/slot/slot.services/card.service.ts:108  export const postCardSetsForCrud = async (cardSet: CardSet): Promise<any> => {  \n                             at                      src/modules/slot/slot.controller.ts:486             const cards = await postCardSetsForCrud(req.body)                               \n                             at step                 src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next                 src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(35,'2020-11-27 21:29:18','11-27 21:29 | App catch: [ReferenceError] postCardForCrud is not defined\n              \n                             at                             src/modules/slot/slot.controller.ts:490   const cards = await postCardForCrud(req.body)                                   \n                             at step                        src/modules/slot/slot.controller.ts:52    res.status(200).json(resp)                                                      \n                             at next                        src/modules/slot/slot.controller.ts:33    import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'   \n                             at                             src/modules/slot/slot.controller.ts:27    import * as slotService from \'./slot.services\'                                  \n                             at new Promise                                                                                                                                           \n                             at __awaiter                   src/modules/slot/slot.controller.ts:23    import { dailyRewardClaim, dailyRewardInfo, deleteDailyRewardPrize, getDailyRew…\n                             at cardForFrontPost            src/modules/slot/slot.controller.ts:1474                                                                                  \n                             at newFn                       express-async-errors/index.js:16          const ret = fn.apply(this, args);                                               \n                             at handle [as handle_request]  express/lib/router/layer.js:95            fn(req, res, next);                                                             \n                             at next                        express/lib/router/route.js:137           layer.handle_request(req, res, next);                                            ()\n'),(36,'2020-11-27 21:29:33','11-27 21:29 | App catch: [BadRequestError] Reward Type is invalid\n              \n                             at                  src/modules/slot/slot.services/card.service.ts:167  if(!isValidPaymentType(`${card.rewardType}s`)) throw createHttpError(StatusCode…\n                             at step             src/modules/slot/slot.services/card.service.ts:52   if(languagesCount > 0 && (!card.localizations || (card.localizations.length < l…\n                             at next             src/modules/slot/slot.services/card.service.ts:33                                                                                   \n                             at                  src/modules/slot/slot.services/card.service.ts:27   title                                                                           \n                             at new Promise                                                                                                                                          \n                             at __awaiter        src/modules/slot/slot.services/card.service.ts:23   atlas data                                                                      \n                             at postCardForCrud  src/modules/slot/slot.services/card.service.ts:161  export const postCardForCrud = async (card: CardSet): Promise<any> => {         \n                             at                  src/modules/slot/slot.controller.ts:490             const cards = await postCardForCrud(req.body)                                   \n                             at step             src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next             src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(37,'2020-11-27 21:29:58','11-27 21:29 | App catch: [BadRequestError] Card localizations can not be empty\n              \n                             at                            src/modules/slot/slot.services/card.service.ts:171  if(localization.text === \'\') throw createHttpError(StatusCodes.BAD_REQUEST, \'Ca…\n                             at step                       src/modules/slot/slot.services/card.service.ts:52   if(languagesCount > 0 && (!card.localizations || (card.localizations.length < l…\n                             at next                       src/modules/slot/slot.services/card.service.ts:33                                                                                   \n                             at fulfilled                  src/modules/slot/slot.services/card.service.ts:24                                                                                   \n                             at processTicksAndRejections  internal/process/task_queues.js:97                                                                                                   ()\n'),(38,'2020-11-27 21:30:29','11-27 21:30 | App catch: [BadRequestError] Card localizations can not be empty\n              \n                             at                            src/modules/slot/slot.services/card.service.ts:171  if(localization.text === \'\') throw createHttpError(StatusCodes.BAD_REQUEST, \'Ca…\n                             at step                       src/modules/slot/slot.services/card.service.ts:52   if(languagesCount > 0 && (!card.localizations || (card.localizations.length < l…\n                             at next                       src/modules/slot/slot.services/card.service.ts:33                                                                                   \n                             at fulfilled                  src/modules/slot/slot.services/card.service.ts:24                                                                                   \n                             at processTicksAndRejections  internal/process/task_queues.js:97                                                                                                   ()\n'),(39,'2020-11-27 21:32:44','11-27 21:32 | App catch: {    message:   \"Unknown column \\\'reward_amount\\\' in \\\'field list\\\'\",\n                                 code:   \"ER_BAD_FIELD_ERROR\",\n                                errno:    1054,\n                             sqlState:   \"42S22\",\n                           sqlMessage:   \"Unknown column \\\'reward_amount\\\' in \\\'field list\\\'\",\n                                 data: { select: \"\\n        update card set \\n          reward_amount = ?,\\n       \\n\\n…\" } } ()\n'),(40,'2020-11-27 21:58:09','11-27 21:58 | App catch: [BadRequestError] Card localizations can not be empty\n              \n                             at                            src/modules/slot/slot.services/card.service.ts:171  if(localization.text === \'\') throw createHttpError(StatusCodes.BAD_REQUEST, \'Ca…\n                             at step                       src/modules/slot/slot.services/card.service.ts:52   if(languagesCount > 0 && (!card.localizations || (card.localizations.length < l…\n                             at next                       src/modules/slot/slot.services/card.service.ts:33                                                                                   \n                             at fulfilled                  src/modules/slot/slot.services/card.service.ts:24                                                                                   \n                             at processTicksAndRejections  internal/process/task_queues.js:97                                                                                                   ()\n'),(41,'2020-11-27 21:58:23','11-27 21:58 | App catch: [BadRequestError] Card localizations can not be empty\n              \n                             at                            src/modules/slot/slot.services/card.service.ts:171  if(localization.text === \'\') throw createHttpError(StatusCodes.BAD_REQUEST, \'Ca…\n                             at step                       src/modules/slot/slot.services/card.service.ts:52   if(languagesCount > 0 && (!card.localizations || (card.localizations.length < l…\n                             at next                       src/modules/slot/slot.services/card.service.ts:33                                                                                   \n                             at fulfilled                  src/modules/slot/slot.services/card.service.ts:24                                                                                   \n                             at processTicksAndRejections  internal/process/task_queues.js:97                                                                                                   ()\n'),(42,'2020-11-27 22:18:19','11-27 22:18 | App catch: [BadRequestError] Card localizations can not be empty\n              \n                             at                            src/modules/slot/slot.services/card.service.ts:171  if(localization.text === \'\') throw createHttpError(StatusCodes.BAD_REQUEST, \'Ca…\n                             at step                       src/modules/slot/slot.services/card.service.ts:52   if(languagesCount > 0 && (!card.localizations || (card.localizations.length < l…\n                             at next                       src/modules/slot/slot.services/card.service.ts:33                                                                                   \n                             at fulfilled                  src/modules/slot/slot.services/card.service.ts:24                                                                                   \n                             at processTicksAndRejections  internal/process/task_queues.js:97                                                                                                   ()\n'),(43,'2020-11-27 22:18:30','11-27 22:18 | App catch: [BadRequestError] Card localizations can not be empty\n              \n                             at                            src/modules/slot/slot.services/card.service.ts:171  if(localization.text === \'\') throw createHttpError(StatusCodes.BAD_REQUEST, \'Ca…\n                             at step                       src/modules/slot/slot.services/card.service.ts:52   if(languagesCount > 0 && (!card.localizations || (card.localizations.length < l…\n                             at next                       src/modules/slot/slot.services/card.service.ts:33                                                                                   \n                             at fulfilled                  src/modules/slot/slot.services/card.service.ts:24                                                                                   \n                             at processTicksAndRejections  internal/process/task_queues.js:97                                                                                                   ()\n'),(44,'2020-11-28 21:20:30','11-28 21:20 | App catch: [BadRequestError] Card localizations can not be empty\n              \n                             at                            src/modules/slot/slot.services/card.service.ts:170  if(localization.text === \'\') throw createHttpError(StatusCodes.BAD_REQUEST, \'Ca…\n                             at step                       src/modules/slot/slot.services/card.service.ts:52   throw createHttpError(StatusCodes.BAD_REQUEST, \'There are missing localizations…\n                             at next                       src/modules/slot/slot.services/card.service.ts:33   export const getCards = async (cardSetId?: number): Promise<Card[] | undefined>…\n                             at fulfilled                  src/modules/slot/slot.services/card.service.ts:24   card                                                                            \n                             at processTicksAndRejections  internal/process/task_queues.js:97                                                                                                   ()\n'),(45,'2020-11-28 21:20:37','11-28 21:20 | App catch: {    message:   \"Unknown column \\\'reward_amount\\\' in \\\'field list\\\'\",\n                                 code:   \"ER_BAD_FIELD_ERROR\",\n                                errno:    1054,\n                             sqlState:   \"42S22\",\n                           sqlMessage:   \"Unknown column \\\'reward_amount\\\' in \\\'field list\\\'\",\n                                 data: { select: \"\\n        update card set \\n          reward_amount = ?,\\n       \\n\\n…\" } } ()\n'),(46,'2020-11-28 21:22:28','11-28 21:22 | App catch: {    message:   \"Unknown column \\\'reward_amount\\\' in \\\'field list\\\'\",\n                                 code:   \"ER_BAD_FIELD_ERROR\",\n                                errno:    1054,\n                             sqlState:   \"42S22\",\n                           sqlMessage:   \"Unknown column \\\'reward_amount\\\' in \\\'field list\\\'\",\n                                 data: { select: \"\\n        update card set \\n          reward_amount = ?,\\n       \\n\\n…\" } } ()\n'),(47,'2020-11-28 21:29:31','11-28 21:29 | App catch: [ReferenceError] languages is not defined\n              \n                             at                  src/modules/slot/slot.services/card.service.ts:169  if(!card.localizations || card.localizations.length !== languages.length) throw…\n                             at step             src/modules/slot/slot.services/card.service.ts:52   throw createHttpError(StatusCodes.BAD_REQUEST, \'There are missing localizations…\n                             at next             src/modules/slot/slot.services/card.service.ts:33   export const getCards = async (cardSetId?: number): Promise<Card[] | undefined>…\n                             at                  src/modules/slot/slot.services/card.service.ts:27   stars:number (drop rate)                                                        \n                             at new Promise                                                                                                                                          \n                             at __awaiter        src/modules/slot/slot.services/card.service.ts:23                                                                                   \n                             at postCardForCrud  src/modules/slot/slot.services/card.service.ts:160  export const postCardForCrud = async (card: Card): Promise<any> => {            \n                             at                  src/modules/slot/slot.controller.ts:490             const cards = await postCardForCrud(req.body)                                   \n                             at step             src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next             src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(48,'2020-11-28 22:03:05','11-28 22:03 | App catch: [Error] Request aborted\n              \n                             at <anonymous>         formidable/lib/incoming_form.js:122  self._error(new Error(\'Request aborted\'));\n                             at emit                events.js:314                                                                  \n                             at abortIncoming       _http_server.js:533                                                            \n                             at socketOnClose       _http_server.js:526                                                            \n                             at emit                events.js:326                                                                  \n                             at <anonymous>         net.js:676                                                                     \n                             at callbackTrampoline  internal/async_hooks.js:126                                                     ()\n'),(49,'2020-11-28 22:04:38','11-28 22:04 | App catch: [BadRequestError] Missing Card Set Localizations\n              \n                             at                            src/modules/slot/slot.services/card.service.ts:169  if(!card.localizations || card.localizations.length !== languages.length) throw…\n                             at step                       src/modules/slot/slot.services/card.service.ts:52   throw createHttpError(StatusCodes.BAD_REQUEST, \'There are missing localizations…\n                             at next                       src/modules/slot/slot.services/card.service.ts:33   export const getCards = async (cardSetId?: number): Promise<Card[] | undefined>…\n                             at fulfilled                  src/modules/slot/slot.services/card.service.ts:24   card                                                                            \n                             at processTicksAndRejections  internal/process/task_queues.js:97                                                                                                   ()\n'),(50,'2020-11-28 22:05:05','11-28 22:05 | App catch: [Error] Request aborted\n              \n                             at <anonymous>         formidable/lib/incoming_form.js:122  self._error(new Error(\'Request aborted\'));\n                             at emit                events.js:314                                                                  \n                             at abortIncoming       _http_server.js:533                                                            \n                             at socketOnClose       _http_server.js:526                                                            \n                             at emit                events.js:326                                                                  \n                             at <anonymous>         net.js:676                                                                     \n                             at callbackTrampoline  internal/async_hooks.js:126                                                     ()\n'),(51,'2020-11-28 22:05:15','11-28 22:05 | App catch: [BadRequestError] Missing Card Set Localizations\n              \n                             at                            src/modules/slot/slot.services/card.service.ts:169  if(!card.localizations || card.localizations.length !== languages.length) throw…\n                             at step                       src/modules/slot/slot.services/card.service.ts:52   throw createHttpError(StatusCodes.BAD_REQUEST, \'There are missing localizations…\n                             at next                       src/modules/slot/slot.services/card.service.ts:33   export const getCards = async (cardSetId?: number): Promise<Card[] | undefined>…\n                             at fulfilled                  src/modules/slot/slot.services/card.service.ts:24   card                                                                            \n                             at processTicksAndRejections  internal/process/task_queues.js:97                                                                                                   ()\n'),(52,'2020-11-28 22:10:12','11-28 22:10 | App catch: [SyntaxError] Unexpected token u in JSON at position 0\n              \n                             at undefined                                                                                                                                            \n                             at parse                                                                                                                                                \n                             at                  src/modules/slot/slot.services/card.service.ts:162  const card = JSON.parse(fields.json) as Card                                    \n                             at step             src/modules/slot/slot.services/card.service.ts:52   throw createHttpError(StatusCodes.BAD_REQUEST, \'There are missing localizations…\n                             at next             src/modules/slot/slot.services/card.service.ts:33   export const getCards = async (cardSetId?: number): Promise<Card[] | undefined>…\n                             at                  src/modules/slot/slot.services/card.service.ts:27   stars:number (drop rate)                                                        \n                             at new Promise                                                                                                                                          \n                             at __awaiter        src/modules/slot/slot.services/card.service.ts:23                                                                                   \n                             at postCardForCrud  src/modules/slot/slot.services/card.service.ts:161  export const postCardForCrud = async (fields: any, files:[]): Promise<any> => { \n                             at                  src/modules/slot/slot.controller.ts:490             const resp = await postCardForCrud(req.fields, req.files)                       \n                             at step             src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                       ()\n'),(53,'2020-11-28 22:11:07','11-28 22:11 | App catch: [SyntaxError] Unexpected token o in JSON at position 1\n              \n                             at undefined                                                                                                                                            \n                             at parse                                                                                                                                                \n                             at                  src/modules/slot/slot.services/card.service.ts:164  if(card.localizations) card.localizations = JSON.parse(<any>card.localizations) \n                             at step             src/modules/slot/slot.services/card.service.ts:52   throw createHttpError(StatusCodes.BAD_REQUEST, \'There are missing localizations…\n                             at next             src/modules/slot/slot.services/card.service.ts:33   export const getCards = async (cardSetId?: number): Promise<Card[] | undefined>…\n                             at                  src/modules/slot/slot.services/card.service.ts:27   stars:number (drop rate)                                                        \n                             at new Promise                                                                                                                                          \n                             at __awaiter        src/modules/slot/slot.services/card.service.ts:23                                                                                   \n                             at postCardForCrud  src/modules/slot/slot.services/card.service.ts:161  export const postCardForCrud = async (fields: any, files:[]): Promise<any> => { \n                             at                  src/modules/slot/slot.controller.ts:490             const resp = await postCardForCrud(req.fields, req.files)                       \n                             at step             src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                       ()\n'),(54,'2020-11-28 23:29:59','11-28 23:29 | App catch: [Error] ENOENT: no such file or directory, scandir \'/var/www/html/public/assets/cards\'\n              \n                             at readdirSync                fs.js:955                                                                                                                           \n                             at saveFile                   src/helpers.ts:112                                  const files = readdirSync(path)                                                 \n                             at                            src/modules/slot/slot.services/card.service.ts:218  const saveResp = saveFile({                                                     \n                             at step                       src/modules/slot/slot.services/card.service.ts:52   throw createHttpError(StatusCodes.BAD_REQUEST, \'There are missing localizations…\n                             at next                       src/modules/slot/slot.services/card.service.ts:33   export const getCards = async (cardSetId?: number): Promise<Card[] | undefined>…\n                             at fulfilled                  src/modules/slot/slot.services/card.service.ts:24   card                                                                            \n                             at processTicksAndRejections  internal/process/task_queues.js:97                                                                                                   ()\n'),(55,'2020-11-28 23:30:25','11-28 23:30 | App catch: {    message:   \"Unknown column \\\'textureUrl\\\' in \\\'field list\\\'\",\n                                 code:   \"ER_BAD_FIELD_ERROR\",\n                                errno:    1054,\n                             sqlState:   \"42S22\",\n                           sqlMessage:   \"Unknown column \\\'textureUrl\\\' in \\\'field list\\\'\",\n                                 data: { select:   \"update card set textureUrl = ? where id = ?\",\n                                         params: [\"/cards/1_03132646.jpeg\", \"1\"]                  } } ()\n'),(56,'2020-11-28 23:32:35','11-28 23:32 | App catch: [BadRequestError] Select an image for the thumb\n              \n                             at                  src/modules/slot/slot.services/card.service.ts:172  if ((!thumbFile && !fields.thumbUrl)) throw createHttpError(StatusCodes.BAD_REQ…\n                             at step             src/modules/slot/slot.services/card.service.ts:52   throw createHttpError(StatusCodes.BAD_REQUEST, \'There are missing localizations…\n                             at next             src/modules/slot/slot.services/card.service.ts:33   export const getCards = async (cardSetId?: number): Promise<Card[] | undefined>…\n                             at                  src/modules/slot/slot.services/card.service.ts:27   stars:number (drop rate)                                                        \n                             at new Promise                                                                                                                                          \n                             at __awaiter        src/modules/slot/slot.services/card.service.ts:23                                                                                   \n                             at postCardForCrud  src/modules/slot/slot.services/card.service.ts:161  export const postCardForCrud = async (fields: any, files): Promise<any> => {    \n                             at                  src/modules/slot/slot.controller.ts:490             const resp = await postCardForCrud(req.fields, req.files)                       \n                             at step             src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next             src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(57,'2020-11-28 23:38:16','11-28 23:38 | App catch: {    message:   \"Unknown column \\\'thub_url\\\' in \\\'field list\\\'\",\n                                 code:   \"ER_BAD_FIELD_ERROR\",\n                                errno:    1054,\n                             sqlState:   \"42S22\",\n                           sqlMessage:   \"Unknown column \\\'thub_url\\\' in \\\'field list\\\'\",\n                                 data: { select:   \"\\n    select \\n      id, card_set_id, stars,\\n      concat(\\\'http:\\n\\n…\",\n                                         params: []                                                                           } } ()\n'),(58,'2020-11-28 23:39:10','11-28 23:39 | App catch: [BadRequestError] Select an image for the thumb\n              \n                             at                  src/modules/slot/slot.services/card.service.ts:177  if ((!thumbFile && !fields.thumbUrl)) throw createHttpError(StatusCodes.BAD_REQ…\n                             at step             src/modules/slot/slot.services/card.service.ts:52   else resp = await queryExec(`insert into card ?`, [cardDTO])                    \n                             at next             src/modules/slot/slot.services/card.service.ts:33   const where = cardSetId ? ` where card_set_id = ${cardSetId}`: \'\'               \n                             at                  src/modules/slot/slot.services/card.service.ts:27   stars:number (drop rate)                                                        \n                             at new Promise                                                                                                                                          \n                             at __awaiter        src/modules/slot/slot.services/card.service.ts:23                                                                                   \n                             at postCardForCrud  src/modules/slot/slot.services/card.service.ts:166  export const postCardForCrud = async (fields: any, files): Promise<any> => {    \n                             at                  src/modules/slot/slot.controller.ts:490             const resp = await postCardForCrud(req.fields, req.files)                       \n                             at step             src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next             src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(59,'2020-11-28 23:47:59','11-28 23:47 | App catch: [BadRequestError] Select a card image\n              \n                             at                  src/modules/slot/slot.services/card.service.ts:176  if ((!textureFile && !fields.textureUrl)) throw createHttpError(StatusCodes.BAD…\n                             at step             src/modules/slot/slot.services/card.service.ts:52   else resp = await queryExec(`insert into card ?`, [cardDTO])                    \n                             at next             src/modules/slot/slot.services/card.service.ts:33   const where = cardSetId ? ` where card_set_id = ${cardSetId}`: \'\'               \n                             at                  src/modules/slot/slot.services/card.service.ts:27   stars:number (drop rate)                                                        \n                             at new Promise                                                                                                                                          \n                             at __awaiter        src/modules/slot/slot.services/card.service.ts:23                                                                                   \n                             at postCardForCrud  src/modules/slot/slot.services/card.service.ts:166  export const postCardForCrud = async (fields: any, files): Promise<any> => {    \n                             at                  src/modules/slot/slot.controller.ts:490             const resp = await postCardForCrud(req.fields, req.files)                       \n                             at step             src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next             src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(60,'2020-11-28 23:49:44','11-28 23:49 | App catch: [BadRequestError] Select a card image\n              \n                             at                  src/modules/slot/slot.services/card.service.ts:176  if ((!textureFile && !fields.textureUrl)) throw createHttpError(StatusCodes.BAD…\n                             at step             src/modules/slot/slot.services/card.service.ts:52   else resp = await queryExec(`insert into card ?`, [cardDTO])                    \n                             at next             src/modules/slot/slot.services/card.service.ts:33   const where = cardSetId ? ` where card_set_id = ${cardSetId}`: \'\'               \n                             at                  src/modules/slot/slot.services/card.service.ts:27   stars:number (drop rate)                                                        \n                             at new Promise                                                                                                                                          \n                             at __awaiter        src/modules/slot/slot.services/card.service.ts:23                                                                                   \n                             at postCardForCrud  src/modules/slot/slot.services/card.service.ts:166  export const postCardForCrud = async (fields: any, files): Promise<any> => {    \n                             at                  src/modules/slot/slot.controller.ts:490             const resp = await postCardForCrud(req.fields, req.files)                       \n                             at step             src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next             src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(61,'2020-11-28 23:51:04','11-28 23:51 | App catch: [BadRequestError] Select a card image\n              \n                             at                  src/modules/slot/slot.services/card.service.ts:176  if ((!textureFile && !fields.textureUrl)) throw createHttpError(StatusCodes.BAD…\n                             at step             src/modules/slot/slot.services/card.service.ts:52   else resp = await queryExec(`insert into card ?`, [cardDTO])                    \n                             at next             src/modules/slot/slot.services/card.service.ts:33   const where = cardSetId ? ` where card_set_id = ${cardSetId}`: \'\'               \n                             at                  src/modules/slot/slot.services/card.service.ts:27   stars:number (drop rate)                                                        \n                             at new Promise                                                                                                                                          \n                             at __awaiter        src/modules/slot/slot.services/card.service.ts:23                                                                                   \n                             at postCardForCrud  src/modules/slot/slot.services/card.service.ts:166  export const postCardForCrud = async (fields: any, files): Promise<any> => {    \n                             at                  src/modules/slot/slot.controller.ts:490             const resp = await postCardForCrud(req.fields, req.files)                       \n                             at step             src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next             src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(62,'2020-11-28 23:51:55','11-28 23:51 | App catch: [BadRequestError] Select a card image\n              \n                             at                  src/modules/slot/slot.services/card.service.ts:175  if ((!textureFile && !card.textureUrl)) throw createHttpError(StatusCodes.BAD_R…\n                             at step             src/modules/slot/slot.services/card.service.ts:52   else resp = await queryExec(`insert into card ?`, [cardDTO])                    \n                             at next             src/modules/slot/slot.services/card.service.ts:33   const where = cardSetId ? ` where card_set_id = ${cardSetId}`: \'\'               \n                             at                  src/modules/slot/slot.services/card.service.ts:27   stars:number (drop rate)                                                        \n                             at new Promise                                                                                                                                          \n                             at __awaiter        src/modules/slot/slot.services/card.service.ts:23                                                                                   \n                             at postCardForCrud  src/modules/slot/slot.services/card.service.ts:166  export const postCardForCrud = async (fields: any, files): Promise<any> => {    \n                             at                  src/modules/slot/slot.controller.ts:490             const resp = await postCardForCrud(req.fields, req.files)                       \n                             at step             src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next             src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(63,'2020-11-29 00:01:39','11-29 00:01 | App catch: [BadRequestError] Card localizations can not be empty\n              \n                             at                            src/modules/slot/slot.services/card.service.ts:187  if(localization.text === \'\') throw createHttpError(StatusCodes.BAD_REQUEST, \'Ca…\n                             at step                       src/modules/slot/slot.services/card.service.ts:52   else resp = await queryExec(`insert into card ?`, [cardDTO])                    \n                             at next                       src/modules/slot/slot.services/card.service.ts:33   const where = cardSetId ? ` where card_set_id = ${cardSetId}`: \'\'               \n                             at fulfilled                  src/modules/slot/slot.services/card.service.ts:24   card                                                                            \n                             at processTicksAndRejections  internal/process/task_queues.js:97                                                                                                   ()\n'),(64,'2020-11-29 13:30:16','11-29 13:30 | App catch: [SyntaxError] Unexpected token u in JSON at position 0\n              \n                             at undefined                                                                                                                                        \n                             at parse                                                                                                                                            \n                             at                  src/modules/slot/slot.services/card.service.ts:167  const card = JSON.parse(fields.json) as Card                                \n                             at step             src/modules/slot/slot.services/card.service.ts:52   else resp = await queryExec(`insert into card ?`, [cardDTO])                \n                             at next             src/modules/slot/slot.services/card.service.ts:33   const where = cardSetId ? ` where card_set_id = ${cardSetId}`: \'\'           \n                             at                  src/modules/slot/slot.services/card.service.ts:27   stars:number (drop rate)                                                    \n                             at new Promise                                                                                                                                      \n                             at __awaiter        src/modules/slot/slot.services/card.service.ts:23                                                                               \n                             at postCardForCrud  src/modules/slot/slot.services/card.service.ts:166  export const postCardForCrud = async (fields: any, files): Promise<any> => {\n                             at                  src/modules/slot/slot.controller.ts:490             const resp = await postCardForCrud(req.body, req.files)                     \n                             at step             src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                   ()\n'),(65,'2020-11-29 13:30:42','11-29 13:30 | App catch: [SyntaxError] Unexpected token u in JSON at position 0\n              \n                             at undefined                                                                                                                                        \n                             at parse                                                                                                                                            \n                             at                  src/modules/slot/slot.services/card.service.ts:168  const card = JSON.parse(fields.json) as Card                                \n                             at step             src/modules/slot/slot.services/card.service.ts:52   else resp = await queryExec(`insert into card ?`, [cardDTO])                \n                             at next             src/modules/slot/slot.services/card.service.ts:33   const where = cardSetId ? ` where card_set_id = ${cardSetId}`: \'\'           \n                             at                  src/modules/slot/slot.services/card.service.ts:27   stars:number (drop rate)                                                    \n                             at new Promise                                                                                                                                      \n                             at __awaiter        src/modules/slot/slot.services/card.service.ts:23                                                                               \n                             at postCardForCrud  src/modules/slot/slot.services/card.service.ts:166  export const postCardForCrud = async (fields: any, files): Promise<any> => {\n                             at                  src/modules/slot/slot.controller.ts:490             const resp = await postCardForCrud(req.body, req.files)                     \n                             at step             src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                   ()\n'),(66,'2020-11-29 13:31:46','11-29 13:31 | App catch: [SyntaxError] Unexpected token u in JSON at position 0\n              \n                             at undefined                                                                                                                                        \n                             at parse                                                                                                                                            \n                             at                  src/modules/slot/slot.services/card.service.ts:168  const card = JSON.parse(fields.json) as Card                                \n                             at step             src/modules/slot/slot.services/card.service.ts:52   else resp = await queryExec(`insert into card ?`, [cardDTO])                \n                             at next             src/modules/slot/slot.services/card.service.ts:33   const where = cardSetId ? ` where card_set_id = ${cardSetId}`: \'\'           \n                             at                  src/modules/slot/slot.services/card.service.ts:27   stars:number (drop rate)                                                    \n                             at new Promise                                                                                                                                      \n                             at __awaiter        src/modules/slot/slot.services/card.service.ts:23                                                                               \n                             at postCardForCrud  src/modules/slot/slot.services/card.service.ts:166  export const postCardForCrud = async (fields: any, files): Promise<any> => {\n                             at                  src/modules/slot/slot.controller.ts:490             const resp = await postCardForCrud(req.body, req.files)                     \n                             at step             src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                   ()\n'),(67,'2020-11-29 13:32:30','11-29 13:32 | App catch: [TypeError] Cannot read property \'textureFile\' of undefined\n              \n                             at                  src/modules/slot/slot.services/card.service.ts:171  const textureFile: { path: string; name: string; } = files.textureFile       \n                             at step             src/modules/slot/slot.services/card.service.ts:52   else resp = await queryExec(`insert into card ?`, [cardDTO])                 \n                             at next             src/modules/slot/slot.services/card.service.ts:33   const where = cardSetId ? ` where card_set_id = ${cardSetId}`: \'\'            \n                             at                  src/modules/slot/slot.services/card.service.ts:27   stars:number (drop rate)                                                     \n                             at new Promise                                                                                                                                       \n                             at __awaiter        src/modules/slot/slot.services/card.service.ts:23                                                                                \n                             at postCardForCrud  src/modules/slot/slot.services/card.service.ts:166  export const postCardForCrud = async (card: any, files): Promise<any> => {   \n                             at                  src/modules/slot/slot.controller.ts:490             const resp = await postCardForCrud(req.body, req.files)                      \n                             at step             src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                   \n                             at next             src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\' ()\n'),(68,'2020-11-29 13:36:29','11-29 13:36 | App catch: [TypeError] Cannot read property \'textureFile\' of undefined\n              \n                             at                  src/modules/slot/slot.services/card.service.ts:171  const textureFile: { path: string; name: string; } = files.textureFile       \n                             at step             src/modules/slot/slot.services/card.service.ts:52   else resp = await queryExec(`insert into card ?`, [cardDTO])                 \n                             at next             src/modules/slot/slot.services/card.service.ts:33   const where = cardSetId ? ` where card_set_id = ${cardSetId}`: \'\'            \n                             at                  src/modules/slot/slot.services/card.service.ts:27   stars:number (drop rate)                                                     \n                             at new Promise                                                                                                                                       \n                             at __awaiter        src/modules/slot/slot.services/card.service.ts:23                                                                                \n                             at postCardForCrud  src/modules/slot/slot.services/card.service.ts:166  export const postCardForCrud = async (card: any, files): Promise<any> => {   \n                             at                  src/modules/slot/slot.controller.ts:490             const resp = await postCardForCrud(req.body, req.files)                      \n                             at step             src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                   \n                             at next             src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\' ()\n'),(69,'2020-11-29 13:37:07','11-29 13:37 | App catch: [TypeError] Cannot read property \'textureFile\' of undefined\n              \n                             at                  src/modules/slot/slot.services/card.service.ts:171  const textureFile: { path: string; name: string; } = files.textureFile       \n                             at step             src/modules/slot/slot.services/card.service.ts:52   else resp = await queryExec(`insert into card ?`, [cardDTO])                 \n                             at next             src/modules/slot/slot.services/card.service.ts:33   const where = cardSetId ? ` where card_set_id = ${cardSetId}`: \'\'            \n                             at                  src/modules/slot/slot.services/card.service.ts:27   stars:number (drop rate)                                                     \n                             at new Promise                                                                                                                                       \n                             at __awaiter        src/modules/slot/slot.services/card.service.ts:23                                                                                \n                             at postCardForCrud  src/modules/slot/slot.services/card.service.ts:166  export const postCardForCrud = async (card: any, files): Promise<any> => {   \n                             at                  src/modules/slot/slot.controller.ts:490             const resp = await postCardForCrud(req.body, req.files)                      \n                             at step             src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                   \n                             at next             src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\' ()\n'),(70,'2020-11-29 13:37:49','11-29 13:37 | App catch: [BadRequestError] Stars has to be less or equal to 5\n              \n                             at                  src/modules/slot/slot.services/card.service.ts:179  if(!card.stars || card.stars > 5) throw createHttpError(StatusCodes.BAD_REQUEST…\n                             at step             src/modules/slot/slot.services/card.service.ts:52   else resp = await queryExec(`insert into card ?`, [cardDTO])                    \n                             at next             src/modules/slot/slot.services/card.service.ts:33   const where = cardSetId ? ` where card_set_id = ${cardSetId}`: \'\'               \n                             at                  src/modules/slot/slot.services/card.service.ts:27   stars:number (drop rate)                                                        \n                             at new Promise                                                                                                                                          \n                             at __awaiter        src/modules/slot/slot.services/card.service.ts:23                                                                                   \n                             at postCardForCrud  src/modules/slot/slot.services/card.service.ts:166  export const postCardForCrud = async (card: any, files): Promise<any> => {      \n                             at                  src/modules/slot/slot.controller.ts:490             const resp = await postCardForCrud(req.body, req.files)                         \n                             at step             src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next             src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(71,'2020-11-29 13:39:21','11-29 13:39 | App catch: [TypeError] Cannot read property \'split\' of undefined\n              \n                             at saveFile                   src/helpers.ts:91                                   const extension = options.file.name.split(\'.\').pop() || \'\'       \n                             at                            src/modules/slot/slot.services/card.service.ts:225  const saveResp = saveFile({                                      \n                             at step                       src/modules/slot/slot.services/card.service.ts:52   else resp = await queryExec(`insert into card ?`, [cardDTO])     \n                             at next                       src/modules/slot/slot.services/card.service.ts:33   const where = cardSetId ? ` where card_set_id = ${cardSetId}`: \'\'\n                             at fulfilled                  src/modules/slot/slot.services/card.service.ts:24   card                                                             \n                             at processTicksAndRejections  internal/process/task_queues.js:97                                                                                    ()\n'),(72,'2020-11-29 13:43:33','11-29 13:43 | App catch: [Error] Request aborted\n              \n                             at <anonymous>                formidable/lib/incoming_form.js:122  self._error(new Error(\'Request aborted\'));\n                             at emit                       events.js:314                                                                  \n                             at abortIncoming              _http_server.js:533                                                            \n                             at socketOnEnd                _http_server.js:549                                                            \n                             at emit                       events.js:326                                                                  \n                             at endReadableNT              _stream_readable.js:1223                                                       \n                             at processTicksAndRejections  internal/process/task_queues.js:84                                              ()\n'),(73,'2020-11-29 13:43:33','11-29 13:43 | App catch: [Error] Request aborted\n              \n                             at <anonymous>                formidable/lib/incoming_form.js:122  self._error(new Error(\'Request aborted\'));\n                             at emit                       events.js:314                                                                  \n                             at abortIncoming              _http_server.js:533                                                            \n                             at socketOnEnd                _http_server.js:549                                                            \n                             at emit                       events.js:326                                                                  \n                             at endReadableNT              _stream_readable.js:1223                                                       \n                             at processTicksAndRejections  internal/process/task_queues.js:84                                              ()\n'),(74,'2020-11-29 13:43:33','11-29 13:43 | App catch: [Error] Request aborted\n              \n                             at <anonymous>                formidable/lib/incoming_form.js:122  self._error(new Error(\'Request aborted\'));\n                             at emit                       events.js:314                                                                  \n                             at abortIncoming              _http_server.js:533                                                            \n                             at socketOnEnd                _http_server.js:549                                                            \n                             at emit                       events.js:326                                                                  \n                             at endReadableNT              _stream_readable.js:1223                                                       \n                             at processTicksAndRejections  internal/process/task_queues.js:84                                              ()\n'),(75,'2020-11-29 13:45:26','11-29 13:45 | App catch: [Error] Request aborted\n              \n                             at <anonymous>                formidable/lib/incoming_form.js:122  self._error(new Error(\'Request aborted\'));\n                             at emit                       events.js:314                                                                  \n                             at abortIncoming              _http_server.js:533                                                            \n                             at socketOnEnd                _http_server.js:549                                                            \n                             at emit                       events.js:326                                                                  \n                             at endReadableNT              _stream_readable.js:1223                                                       \n                             at processTicksAndRejections  internal/process/task_queues.js:84                                              ()\n'),(76,'2020-11-29 13:52:39','11-29 13:52 | App catch: [TypeError] Cannot read property \'json\' of undefined\n              \n                             at                  src/modules/slot/slot.services/card.service.ts:167  const card = JSON.parse(fields.json) as Card                                 \n                             at step             src/modules/slot/slot.services/card.service.ts:52   else resp = await queryExec(`insert into card ?`, [cardDTO])                 \n                             at next             src/modules/slot/slot.services/card.service.ts:33   const where = cardSetId ? ` where card_set_id = ${cardSetId}`: \'\'            \n                             at                  src/modules/slot/slot.services/card.service.ts:27   stars:number (drop rate)                                                     \n                             at new Promise                                                                                                                                       \n                             at __awaiter        src/modules/slot/slot.services/card.service.ts:23                                                                                \n                             at postCardForCrud  src/modules/slot/slot.services/card.service.ts:166  export const postCardForCrud = async (fields: any, files): Promise<any> => { \n                             at                  src/modules/slot/slot.controller.ts:490             const resp = await postCardForCrud(req.fields, req.files)                    \n                             at step             src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                   \n                             at next             src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\' ()\n'),(77,'2020-11-29 13:54:00','11-29 13:54 | App catch: [TypeError] Cannot read property \'json\' of undefined\n              \n                             at                  src/modules/slot/slot.services/card.service.ts:167  const card = JSON.parse(fields.json) as Card                                 \n                             at step             src/modules/slot/slot.services/card.service.ts:52   else resp = await queryExec(`insert into card ?`, [cardDTO])                 \n                             at next             src/modules/slot/slot.services/card.service.ts:33   const where = cardSetId ? ` where card_set_id = ${cardSetId}`: \'\'            \n                             at                  src/modules/slot/slot.services/card.service.ts:27   stars:number (drop rate)                                                     \n                             at new Promise                                                                                                                                       \n                             at __awaiter        src/modules/slot/slot.services/card.service.ts:23                                                                                \n                             at postCardForCrud  src/modules/slot/slot.services/card.service.ts:166  export const postCardForCrud = async (fields: any, files): Promise<any> => { \n                             at                  src/modules/slot/slot.controller.ts:490             const resp = await postCardForCrud(req.fields, req.files)                    \n                             at step             src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                   \n                             at next             src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\' ()\n'),(78,'2020-11-29 14:04:11','11-29 14:04 | App catch: [Error] Request aborted\n              \n                             at <anonymous>         formidable/lib/incoming_form.js:122  self._error(new Error(\'Request aborted\'));\n                             at emit                events.js:314                                                                  \n                             at abortIncoming       _http_server.js:533                                                            \n                             at socketOnClose       _http_server.js:526                                                            \n                             at emit                events.js:326                                                                  \n                             at <anonymous>         net.js:676                                                                     \n                             at callbackTrampoline  internal/async_hooks.js:126                                                     ()\n'),(79,'2020-11-29 14:07:33','11-29 14:07 | App catch: [TypeError] Object is not iterable.\n              \n                             at __values         src/modules/slot/slot.services/card.service.ts:66   const cardSets: CardSet[] = camelcaseKeys(await query(`select * from card_set`))\n                             at                  src/modules/slot/slot.services/card.service.ts:167  for (const field of fields)                                                     \n                             at step             src/modules/slot/slot.services/card.service.ts:52   else resp = await queryExec(`insert into card ?`, [cardDTO])                    \n                             at next             src/modules/slot/slot.services/card.service.ts:33   const where = cardSetId ? ` where card_set_id = ${cardSetId}`: \'\'               \n                             at                  src/modules/slot/slot.services/card.service.ts:27   stars:number (drop rate)                                                        \n                             at new Promise                                                                                                                                          \n                             at __awaiter        src/modules/slot/slot.services/card.service.ts:23                                                                                   \n                             at postCardForCrud  src/modules/slot/slot.services/card.service.ts:166  export const postCardForCrud = async (fields: any, files): Promise<any> => {    \n                             at                  src/modules/slot/slot.controller.ts:490             const resp = await postCardForCrud(req.fields, req.files)                       \n                             at step             src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                       ()\n'),(80,'2020-11-29 14:14:58','11-29 14:14 | App catch: [BadRequestError] Stars has to be less or equal to 5\n              \n                             at                  src/modules/slot/slot.services/card.service.ts:179  if(!card.stars || card.stars > 5) throw createHttpError(StatusCodes.BAD_REQUEST…\n                             at step             src/modules/slot/slot.services/card.service.ts:52   else resp = await queryExec(`insert into card ?`, [cardDTO])                    \n                             at next             src/modules/slot/slot.services/card.service.ts:33   const where = cardSetId ? ` where card_set_id = ${cardSetId}`: \'\'               \n                             at                  src/modules/slot/slot.services/card.service.ts:27   stars:number (drop rate)                                                        \n                             at new Promise                                                                                                                                          \n                             at __awaiter        src/modules/slot/slot.services/card.service.ts:23                                                                                   \n                             at postCardForCrud  src/modules/slot/slot.services/card.service.ts:166  export const postCardForCrud = async (card: any, files): Promise<any> => {      \n                             at                  src/modules/slot/slot.controller.ts:490             const resp = await postCardForCrud(req.fields, req.files)                       \n                             at step             src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next             src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(81,'2020-11-29 14:15:40','11-29 14:15 | App catch: [BadRequestError] Missing Card Set Localizations\n              \n                             at                            src/modules/slot/slot.services/card.service.ts:185  if(!card.localizations || card.localizations.length !== languages.length) throw…\n                             at step                       src/modules/slot/slot.services/card.service.ts:52   else resp = await queryExec(`insert into card ?`, [cardDTO])                    \n                             at next                       src/modules/slot/slot.services/card.service.ts:33   const where = cardSetId ? ` where card_set_id = ${cardSetId}`: \'\'               \n                             at fulfilled                  src/modules/slot/slot.services/card.service.ts:24   card                                                                            \n                             at processTicksAndRejections  internal/process/task_queues.js:97                                                                                                   ()\n'),(82,'2020-11-29 14:23:56','11-29 14:23 | App catch: [BadRequestError] Error parsing fields in Card Post\n              \n                             at                  src/modules/slot/slot.services/card.service.ts:171  throw createHttpError(StatusCodes.BAD_REQUEST, \'Error parsing fields in Card Po…\n                             at step             src/modules/slot/slot.services/card.service.ts:52   else resp = await queryExec(`insert into card ?`, [cardDTO])                    \n                             at next             src/modules/slot/slot.services/card.service.ts:33   const where = cardSetId ? ` where card_set_id = ${cardSetId}`: \'\'               \n                             at                  src/modules/slot/slot.services/card.service.ts:27   stars:number (drop rate)                                                        \n                             at new Promise                                                                                                                                          \n                             at __awaiter        src/modules/slot/slot.services/card.service.ts:23                                                                                   \n                             at postCardForCrud  src/modules/slot/slot.services/card.service.ts:166  export const postCardForCrud = async (fields: any, files): Promise<any> => {    \n                             at                  src/modules/slot/slot.controller.ts:490             const resp = await postCardForCrud(req.fields, req.files)                       \n                             at step             src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next             src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(83,'2020-11-29 19:01:08','11-29 19:01 | App catch: [BadRequestError] Reward Amount can not be empty\n              \n                             at                      src/modules/slot/slot.services/card.service.ts:115  if(cardSet.rewardAmount === 0) throw createHttpError(StatusCodes.BAD_REQUEST, \'…\n                             at step                 src/modules/slot/slot.services/card.service.ts:52   if (!cardInDb) card.id = resp.insertId                                          \n                             at next                 src/modules/slot/slot.services/card.service.ts:33   const where = cardSetId ? ` where card_set_id = ${cardSetId}`: \'\'               \n                             at                      src/modules/slot/slot.services/card.service.ts:27   stars:number (drop rate)                                                        \n                             at new Promise                                                                                                                                              \n                             at __awaiter            src/modules/slot/slot.services/card.service.ts:23                                                                                   \n                             at postCardSetsForCrud  src/modules/slot/slot.services/card.service.ts:111  export const postCardSetsForCrud = async (cardSet: CardSet): Promise<any> => {  \n                             at                      src/modules/slot/slot.controller.ts:486             const cards = await postCardSetsForCrud(req.body)                               \n                             at step                 src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next                 src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(84,'2020-11-29 19:01:14','11-29 19:01 | App catch: [BadRequestError] Theme Color can not be empty\n              \n                             at                      src/modules/slot/slot.services/card.service.ts:116  if(cardSet.themeColor === \'\') throw createHttpError(StatusCodes.BAD_REQUEST, \'T…\n                             at step                 src/modules/slot/slot.services/card.service.ts:52   if (!cardInDb) card.id = resp.insertId                                          \n                             at next                 src/modules/slot/slot.services/card.service.ts:33   const where = cardSetId ? ` where card_set_id = ${cardSetId}`: \'\'               \n                             at                      src/modules/slot/slot.services/card.service.ts:27   stars:number (drop rate)                                                        \n                             at new Promise                                                                                                                                              \n                             at __awaiter            src/modules/slot/slot.services/card.service.ts:23                                                                                   \n                             at postCardSetsForCrud  src/modules/slot/slot.services/card.service.ts:111  export const postCardSetsForCrud = async (cardSet: CardSet): Promise<any> => {  \n                             at                      src/modules/slot/slot.controller.ts:486             const cards = await postCardSetsForCrud(req.body)                               \n                             at step                 src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next                 src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(85,'2020-11-29 19:01:18','11-29 19:01 | App catch: [BadRequestError] Reward Type is invalid\n              \n                             at                      src/modules/slot/slot.services/card.service.ts:117  if(!isValidPaymentType(`${cardSet.rewardType}s`)) throw createHttpError(StatusC…\n                             at step                 src/modules/slot/slot.services/card.service.ts:52   if (!cardInDb) card.id = resp.insertId                                          \n                             at next                 src/modules/slot/slot.services/card.service.ts:33   const where = cardSetId ? ` where card_set_id = ${cardSetId}`: \'\'               \n                             at                      src/modules/slot/slot.services/card.service.ts:27   stars:number (drop rate)                                                        \n                             at new Promise                                                                                                                                              \n                             at __awaiter            src/modules/slot/slot.services/card.service.ts:23                                                                                   \n                             at postCardSetsForCrud  src/modules/slot/slot.services/card.service.ts:111  export const postCardSetsForCrud = async (cardSet: CardSet): Promise<any> => {  \n                             at                      src/modules/slot/slot.controller.ts:486             const cards = await postCardSetsForCrud(req.body)                               \n                             at step                 src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next                 src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(86,'2020-11-29 19:31:40','11-29 19:31 | App catch: [BadRequestError] Select a card image\n              \n                             at                  src/modules/slot/slot.services/card.service.ts:180  if ((!textureFile && !fields.textureUrl)) throw createHttpError(StatusCodes.BAD…\n                             at step             src/modules/slot/slot.services/card.service.ts:52   if (!cardInDb) card.id = resp.insertId                                          \n                             at next             src/modules/slot/slot.services/card.service.ts:33   const where = cardSetId ? ` where card_set_id = ${cardSetId}`: \'\'               \n                             at                  src/modules/slot/slot.services/card.service.ts:27   stars:number (drop rate)                                                        \n                             at new Promise                                                                                                                                          \n                             at __awaiter        src/modules/slot/slot.services/card.service.ts:23                                                                                   \n                             at postCardForCrud  src/modules/slot/slot.services/card.service.ts:165  export const postCardForCrud = async (_fields: any, files): Promise<any> => {   \n                             at                  src/modules/slot/slot.controller.ts:490             const resp = await postCardForCrud(req.fields, req.files)                       \n                             at step             src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next             src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(87,'2020-11-29 19:39:00','11-29 19:39 | App catch: {    message:   \"Field \\\'card_set_id\\\' doesn\\\'t have a default value\",\n                                 code:   \"ER_NO_DEFAULT_FOR_FIELD\",\n                                errno:    1364,\n                             sqlState:   \"HY000\",\n                           sqlMessage:   \"Field \\\'card_set_id\\\' doesn\\\'t have a default value\",\n                                 data: { select: \"insert into card(stars) values (?)\" }         } ()\n'),(88,'2020-11-29 19:42:33','11-29 19:42 | App catch: {    message:   \"Field \\\'card_set_id\\\' doesn\\\'t have a default value\",\n                                 code:   \"ER_NO_DEFAULT_FOR_FIELD\",\n                                errno:    1364,\n                             sqlState:   \"HY000\",\n                           sqlMessage:   \"Field \\\'card_set_id\\\' doesn\\\'t have a default value\",\n                                 data: { select: \"insert into card(stars) values (?)\" }         } ()\n'),(89,'2020-11-29 19:46:52','11-29 19:46 | App catch: [BadRequestError] Stars has to be less or equal to 5\n              \n                             at                  src/modules/slot/slot.services/card.service.ts:184  if(!fields.stars || fields.stars > 5) throw createHttpError(StatusCodes.BAD_REQ…\n                             at step             src/modules/slot/slot.services/card.service.ts:52   if (!cardInDb) card.id = resp.insertId                                          \n                             at next             src/modules/slot/slot.services/card.service.ts:33   const where = cardSetId ? ` where card_set_id = ${cardSetId}`: \'\'               \n                             at                  src/modules/slot/slot.services/card.service.ts:27   stars:number (drop rate)                                                        \n                             at new Promise                                                                                                                                          \n                             at __awaiter        src/modules/slot/slot.services/card.service.ts:23                                                                                   \n                             at postCardForCrud  src/modules/slot/slot.services/card.service.ts:167  export const postCardForCrud = async (_fields: any, files): Promise<any> => {   \n                             at                  src/modules/slot/slot.controller.ts:490             const resp = await postCardForCrud(req.fields, req.files)                       \n                             at step             src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next             src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(90,'2020-11-29 19:48:20','11-29 19:48 | App catch: [BadRequestError] Select a card image\n              \n                             at                  src/modules/slot/slot.services/card.service.ts:188  if ((!textureFile && !fields.textureUrl)) throw createHttpError(StatusCodes.BAD…\n                             at step             src/modules/slot/slot.services/card.service.ts:52   if (!cardInDb) card.id = resp.insertId                                          \n                             at next             src/modules/slot/slot.services/card.service.ts:33   const where = cardSetId ? ` where card_set_id = ${cardSetId}`: \'\'               \n                             at                  src/modules/slot/slot.services/card.service.ts:27   stars:number (drop rate)                                                        \n                             at new Promise                                                                                                                                          \n                             at __awaiter        src/modules/slot/slot.services/card.service.ts:23                                                                                   \n                             at postCardForCrud  src/modules/slot/slot.services/card.service.ts:167  export const postCardForCrud = async (_fields: any, files): Promise<any> => {   \n                             at                  src/modules/slot/slot.controller.ts:490             const resp = await postCardForCrud(req.fields, req.files)                       \n                             at step             src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next             src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(91,'2020-11-29 20:07:28','11-29 20:07 | App catch: [BadRequestError] Card localizations can not be empty\n              \n                             at                            src/modules/slot/slot.services/card.service.ts:200  if(localization.text === \'\') throw createHttpError(StatusCodes.BAD_REQUEST, \'Ca…\n                             at step                       src/modules/slot/slot.services/card.service.ts:52   if (!cardInDb) card.id = resp.insertId                                          \n                             at next                       src/modules/slot/slot.services/card.service.ts:33   const where = cardSetId ? ` where card_set_id = ${cardSetId}`: \'\'               \n                             at fulfilled                  src/modules/slot/slot.services/card.service.ts:24   card                                                                            \n                             at processTicksAndRejections  internal/process/task_queues.js:97                                                                                                   ()\n'),(92,'2020-11-30 10:03:14','11-30 10:03 | App catch: [BadRequestError] Card Set ID param is required\n              \n                             at                       src/modules/slot/slot.services/card.service.ts:253  if(!cardSetId) throw createHttpError(StatusCodes.BAD_REQUEST, \'Card Set ID para…\n                             at step                  src/modules/slot/slot.services/card.service.ts:52   else resp = await queryExec(`insert into card ?`, [cardDTO])                    \n                             at next                  src/modules/slot/slot.services/card.service.ts:33   export const getCards = async (cardSetId?: number): Promise<Card[] | undefined>…\n                             at                       src/modules/slot/slot.services/card.service.ts:27   title                                                                           \n                             at new Promise                                                                                                                                               \n                             at __awaiter             src/modules/slot/slot.services/card.service.ts:23   atlas data                                                                      \n                             at deleteCardSetForCrud  src/modules/slot/slot.services/card.service.ts:252  export const deleteCardSetForCrud = async (cardSetId: number): Promise<void> =>…\n                             at                       src/modules/slot/slot.controller.ts:482             const cards = await deleteCardSetForCrud(Number(req.query.cardSetId))           \n                             at step                  src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next                  src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(93,'2020-11-30 10:04:58','11-30 10:04 | App catch: [BadRequestError] Card Set ID param is required\n              \n                             at                       src/modules/slot/slot.services/card.service.ts:253  if(!cardSetId) throw createHttpError(StatusCodes.BAD_REQUEST, \'Card Set ID para…\n                             at step                  src/modules/slot/slot.services/card.service.ts:52   else resp = await queryExec(`insert into card ?`, [cardDTO])                    \n                             at next                  src/modules/slot/slot.services/card.service.ts:33   export const getCards = async (cardSetId?: number): Promise<Card[] | undefined>…\n                             at                       src/modules/slot/slot.services/card.service.ts:27   title                                                                           \n                             at new Promise                                                                                                                                               \n                             at __awaiter             src/modules/slot/slot.services/card.service.ts:23   atlas data                                                                      \n                             at deleteCardSetForCrud  src/modules/slot/slot.services/card.service.ts:252  export const deleteCardSetForCrud = async (cardSetId: number): Promise<void> =>…\n                             at                       src/modules/slot/slot.controller.ts:482             const cards = await deleteCardSetForCrud(Number(req.query.cardSetId))           \n                             at step                  src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next                  src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(94,'2020-11-30 10:05:01','11-30 10:05 | App catch: [BadRequestError] Card Set ID param is required\n              \n                             at                       src/modules/slot/slot.services/card.service.ts:253  if(!cardSetId) throw createHttpError(StatusCodes.BAD_REQUEST, \'Card Set ID para…\n                             at step                  src/modules/slot/slot.services/card.service.ts:52   else resp = await queryExec(`insert into card ?`, [cardDTO])                    \n                             at next                  src/modules/slot/slot.services/card.service.ts:33   export const getCards = async (cardSetId?: number): Promise<Card[] | undefined>…\n                             at                       src/modules/slot/slot.services/card.service.ts:27   title                                                                           \n                             at new Promise                                                                                                                                               \n                             at __awaiter             src/modules/slot/slot.services/card.service.ts:23   atlas data                                                                      \n                             at deleteCardSetForCrud  src/modules/slot/slot.services/card.service.ts:252  export const deleteCardSetForCrud = async (cardSetId: number): Promise<void> =>…\n                             at                       src/modules/slot/slot.controller.ts:482             const cards = await deleteCardSetForCrud(Number(req.query.cardSetId))           \n                             at step                  src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next                  src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(95,'2020-11-30 10:05:47','11-30 10:05 | App catch: [BadRequestError] Card Set ID param is required\n              \n                             at                       src/modules/slot/slot.services/card.service.ts:253  if(!cardSetId) throw createHttpError(StatusCodes.BAD_REQUEST, \'Card Set ID para…\n                             at step                  src/modules/slot/slot.services/card.service.ts:52   else resp = await queryExec(`insert into card ?`, [cardDTO])                    \n                             at next                  src/modules/slot/slot.services/card.service.ts:33   export const getCards = async (cardSetId?: number): Promise<Card[] | undefined>…\n                             at                       src/modules/slot/slot.services/card.service.ts:27   title                                                                           \n                             at new Promise                                                                                                                                               \n                             at __awaiter             src/modules/slot/slot.services/card.service.ts:23   atlas data                                                                      \n                             at deleteCardSetForCrud  src/modules/slot/slot.services/card.service.ts:252  export const deleteCardSetForCrud = async (cardSetId: number): Promise<void> =>…\n                             at                       src/modules/slot/slot.controller.ts:482             const cards = await deleteCardSetForCrud(Number(req.query.cardSetId))           \n                             at step                  src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next                  src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(96,'2020-11-30 10:05:51','11-30 10:05 | App catch: [BadRequestError] Card Set ID param is required\n              \n                             at                       src/modules/slot/slot.services/card.service.ts:253  if(!cardSetId) throw createHttpError(StatusCodes.BAD_REQUEST, \'Card Set ID para…\n                             at step                  src/modules/slot/slot.services/card.service.ts:52   else resp = await queryExec(`insert into card ?`, [cardDTO])                    \n                             at next                  src/modules/slot/slot.services/card.service.ts:33   export const getCards = async (cardSetId?: number): Promise<Card[] | undefined>…\n                             at                       src/modules/slot/slot.services/card.service.ts:27   title                                                                           \n                             at new Promise                                                                                                                                               \n                             at __awaiter             src/modules/slot/slot.services/card.service.ts:23   atlas data                                                                      \n                             at deleteCardSetForCrud  src/modules/slot/slot.services/card.service.ts:252  export const deleteCardSetForCrud = async (cardSetId: number): Promise<void> =>…\n                             at                       src/modules/slot/slot.controller.ts:482             const cards = await deleteCardSetForCrud(Number(req.query.cardSetId))           \n                             at step                  src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next                  src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(97,'2020-11-30 10:05:56','11-30 10:05 | App catch: [BadRequestError] Card Set ID param is required\n              \n                             at                       src/modules/slot/slot.services/card.service.ts:253  if(!cardSetId) throw createHttpError(StatusCodes.BAD_REQUEST, \'Card Set ID para…\n                             at step                  src/modules/slot/slot.services/card.service.ts:52   else resp = await queryExec(`insert into card ?`, [cardDTO])                    \n                             at next                  src/modules/slot/slot.services/card.service.ts:33   export const getCards = async (cardSetId?: number): Promise<Card[] | undefined>…\n                             at                       src/modules/slot/slot.services/card.service.ts:27   title                                                                           \n                             at new Promise                                                                                                                                               \n                             at __awaiter             src/modules/slot/slot.services/card.service.ts:23   atlas data                                                                      \n                             at deleteCardSetForCrud  src/modules/slot/slot.services/card.service.ts:252  export const deleteCardSetForCrud = async (cardSetId: number): Promise<void> =>…\n                             at                       src/modules/slot/slot.controller.ts:482             const cards = await deleteCardSetForCrud(Number(req.query.cardSetId))           \n                             at step                  src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next                  src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(98,'2020-11-30 10:07:48','11-30 10:07 | App catch: [BadRequestError] Card Set ID param is required\n              \n                             at                       src/modules/slot/slot.services/card.service.ts:253  if(!cardSetId) throw createHttpError(StatusCodes.BAD_REQUEST, \'Card Set ID para…\n                             at step                  src/modules/slot/slot.services/card.service.ts:52   else resp = await queryExec(`insert into card ?`, [cardDTO])                    \n                             at next                  src/modules/slot/slot.services/card.service.ts:33   export const getCards = async (cardSetId?: number): Promise<Card[] | undefined>…\n                             at                       src/modules/slot/slot.services/card.service.ts:27   title                                                                           \n                             at new Promise                                                                                                                                               \n                             at __awaiter             src/modules/slot/slot.services/card.service.ts:23   atlas data                                                                      \n                             at deleteCardSetForCrud  src/modules/slot/slot.services/card.service.ts:252  export const deleteCardSetForCrud = async (cardSetId: number): Promise<void> =>…\n                             at                       src/modules/slot/slot.controller.ts:482             const cards = await deleteCardSetForCrud(Number(req.query.cardSetId))           \n                             at step                  src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next                  src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(99,'2020-11-30 10:09:45','11-30 10:09 | App catch: [BadRequestError] Card Set ID param is required\n              \n                             at                       src/modules/slot/slot.services/card.service.ts:253  if(!cardSetId) throw createHttpError(StatusCodes.BAD_REQUEST, \'Card Set ID para…\n                             at step                  src/modules/slot/slot.services/card.service.ts:52   else resp = await queryExec(`insert into card ?`, [cardDTO])                    \n                             at next                  src/modules/slot/slot.services/card.service.ts:33   export const getCards = async (cardSetId?: number): Promise<Card[] | undefined>…\n                             at                       src/modules/slot/slot.services/card.service.ts:27   title                                                                           \n                             at new Promise                                                                                                                                               \n                             at __awaiter             src/modules/slot/slot.services/card.service.ts:23   atlas data                                                                      \n                             at deleteCardSetForCrud  src/modules/slot/slot.services/card.service.ts:252  export const deleteCardSetForCrud = async (cardSetId: number): Promise<void> =>…\n                             at                       src/modules/slot/slot.controller.ts:482             const cards = await deleteCardSetForCrud(Number(req.query.cardSetId))           \n                             at step                  src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next                  src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(100,'2020-11-30 10:10:26','11-30 10:10 | App catch: [BadRequestError] Card Set ID param is required\n              \n                             at                       src/modules/slot/slot.services/card.service.ts:253  if(!cardSetId) throw createHttpError(StatusCodes.BAD_REQUEST, \'Card Set ID para…\n                             at step                  src/modules/slot/slot.services/card.service.ts:52   else resp = await queryExec(`insert into card ?`, [cardDTO])                    \n                             at next                  src/modules/slot/slot.services/card.service.ts:33   export const getCards = async (cardSetId?: number): Promise<Card[] | undefined>…\n                             at                       src/modules/slot/slot.services/card.service.ts:27   title                                                                           \n                             at new Promise                                                                                                                                               \n                             at __awaiter             src/modules/slot/slot.services/card.service.ts:23   atlas data                                                                      \n                             at deleteCardSetForCrud  src/modules/slot/slot.services/card.service.ts:252  export const deleteCardSetForCrud = async (cardSetId: number): Promise<void> =>…\n                             at                       src/modules/slot/slot.controller.ts:482             const cards = await deleteCardSetForCrud(Number(req.query.cardSetId))           \n                             at step                  src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next                  src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(101,'2020-11-30 10:13:03','11-30 10:13 | App catch: [BadRequestError] Card Set ID param is required\n              \n                             at                       src/modules/slot/slot.services/card.service.ts:254  if(!cardSetId) throw createHttpError(StatusCodes.BAD_REQUEST, \'Card Set ID para…\n                             at step                  src/modules/slot/slot.services/card.service.ts:52   else resp = await queryExec(`insert into card ?`, [cardDTO])                    \n                             at next                  src/modules/slot/slot.services/card.service.ts:33   export const getCards = async (cardSetId?: number): Promise<Card[] | undefined>…\n                             at                       src/modules/slot/slot.services/card.service.ts:27   title                                                                           \n                             at new Promise                                                                                                                                               \n                             at __awaiter             src/modules/slot/slot.services/card.service.ts:23   atlas data                                                                      \n                             at deleteCardSetForCrud  src/modules/slot/slot.services/card.service.ts:252  export const deleteCardSetForCrud = async (cardSetId: number): Promise<void> =>…\n                             at                       src/modules/slot/slot.controller.ts:483             const cards = await deleteCardSetForCrud(Number(req.query.cardSetId))           \n                             at step                  src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next                  src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(102,'2020-11-30 10:14:12','11-30 10:14 | App catch: [BadRequestError] Problem deleting card 1\n              \n                             at                            src/modules/slot/slot.services/card.service.ts:256  if(resp.affectedRows !== 1) throw createHttpError(StatusCodes.BAD_REQUEST, \'Pro…\n                             at step                       src/modules/slot/slot.services/card.service.ts:52   else resp = await queryExec(`insert into card ?`, [cardDTO])                    \n                             at next                       src/modules/slot/slot.services/card.service.ts:33   export const getCards = async (cardSetId?: number): Promise<Card[] | undefined>…\n                             at fulfilled                  src/modules/slot/slot.services/card.service.ts:24                                                                                   \n                             at processTicksAndRejections  internal/process/task_queues.js:97                                                                                                   ()\n'),(103,'2020-11-30 10:14:18','11-30 10:14 | App catch: [BadRequestError] Problem deleting card 1\n              \n                             at                            src/modules/slot/slot.services/card.service.ts:256  if(resp.affectedRows !== 1) throw createHttpError(StatusCodes.BAD_REQUEST, \'Pro…\n                             at step                       src/modules/slot/slot.services/card.service.ts:52   else resp = await queryExec(`insert into card ?`, [cardDTO])                    \n                             at next                       src/modules/slot/slot.services/card.service.ts:33   export const getCards = async (cardSetId?: number): Promise<Card[] | undefined>…\n                             at fulfilled                  src/modules/slot/slot.services/card.service.ts:24                                                                                   \n                             at processTicksAndRejections  internal/process/task_queues.js:97                                                                                                   ()\n'),(104,'2020-11-30 10:15:00','11-30 10:15 | App catch: [BadRequestError] Problem deleting card 1\n              \n                             at                            src/modules/slot/slot.services/card.service.ts:256  if(resp.affectedRows !== 1) throw createHttpError(StatusCodes.BAD_REQUEST, \'Pro…\n                             at step                       src/modules/slot/slot.services/card.service.ts:52   else resp = await queryExec(`insert into card ?`, [cardDTO])                    \n                             at next                       src/modules/slot/slot.services/card.service.ts:33   export const getCards = async (cardSetId?: number): Promise<Card[] | undefined>…\n                             at fulfilled                  src/modules/slot/slot.services/card.service.ts:24                                                                                   \n                             at processTicksAndRejections  internal/process/task_queues.js:97                                                                                                   ()\n'),(105,'2020-11-30 10:38:31','11-30 10:38 | App catch: [BadRequestError] Theme Color can not be empty\n              \n                             at                      src/modules/slot/slot.services/card.service.ts:123  if(cardSet.themeColor === \'\') throw createHttpError(StatusCodes.BAD_REQUEST, \'T…\n                             at step                 src/modules/slot/slot.services/card.service.ts:52   else resp = await queryExec(`insert into card ?`, [cardDTO])                    \n                             at next                 src/modules/slot/slot.services/card.service.ts:33   export const getCards = async (cardSetId?: number): Promise<Card[] | undefined>…\n                             at                      src/modules/slot/slot.services/card.service.ts:27   title                                                                           \n                             at new Promise                                                                                                                                              \n                             at __awaiter            src/modules/slot/slot.services/card.service.ts:23   atlas data                                                                      \n                             at postCardSetsForCrud  src/modules/slot/slot.services/card.service.ts:118  export const postCardSetsForCrud = async (cardSet: CardSet): Promise<any> => {  \n                             at                      src/modules/slot/slot.controller.ts:491             const cards = await postCardSetsForCrud(req.body)                               \n                             at step                 src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next                 src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(106,'2020-11-30 10:38:46','11-30 10:38 | App catch: [BadRequestError] Select a card image\n              \n                             at                  src/modules/slot/slot.services/card.service.ts:194  if ((!textureFile && !fields.textureUrl)) throw createHttpError(StatusCodes.BAD…\n                             at step             src/modules/slot/slot.services/card.service.ts:52   else resp = await queryExec(`insert into card ?`, [cardDTO])                    \n                             at next             src/modules/slot/slot.services/card.service.ts:33   export const getCards = async (cardSetId?: number): Promise<Card[] | undefined>…\n                             at                  src/modules/slot/slot.services/card.service.ts:27   title                                                                           \n                             at new Promise                                                                                                                                          \n                             at __awaiter        src/modules/slot/slot.services/card.service.ts:23   atlas data                                                                      \n                             at postCardForCrud  src/modules/slot/slot.services/card.service.ts:172  export const postCardForCrud = async (_fields: any, files): Promise<any> => {   \n                             at                  src/modules/slot/slot.controller.ts:495             const resp = await postCardForCrud(req.fields, req.files)                       \n                             at step             src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next             src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(107,'2020-11-30 10:38:55','11-30 10:38 | App catch: [BadRequestError] Select a card image\n              \n                             at                  src/modules/slot/slot.services/card.service.ts:194  if ((!textureFile && !fields.textureUrl)) throw createHttpError(StatusCodes.BAD…\n                             at step             src/modules/slot/slot.services/card.service.ts:52   else resp = await queryExec(`insert into card ?`, [cardDTO])                    \n                             at next             src/modules/slot/slot.services/card.service.ts:33   export const getCards = async (cardSetId?: number): Promise<Card[] | undefined>…\n                             at                  src/modules/slot/slot.services/card.service.ts:27   title                                                                           \n                             at new Promise                                                                                                                                          \n                             at __awaiter        src/modules/slot/slot.services/card.service.ts:23   atlas data                                                                      \n                             at postCardForCrud  src/modules/slot/slot.services/card.service.ts:172  export const postCardForCrud = async (_fields: any, files): Promise<any> => {   \n                             at                  src/modules/slot/slot.controller.ts:495             const resp = await postCardForCrud(req.fields, req.files)                       \n                             at step             src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next             src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(108,'2020-11-30 10:39:40','11-30 10:39 | App catch: [BadRequestError] Select a card image\n              \n                             at                  src/modules/slot/slot.services/card.service.ts:194  if ((!textureFile && !fields.textureUrl)) throw createHttpError(StatusCodes.BAD…\n                             at step             src/modules/slot/slot.services/card.service.ts:52   else resp = await queryExec(`insert into card ?`, [cardDTO])                    \n                             at next             src/modules/slot/slot.services/card.service.ts:33   export const getCards = async (cardSetId?: number): Promise<Card[] | undefined>…\n                             at                  src/modules/slot/slot.services/card.service.ts:27   title                                                                           \n                             at new Promise                                                                                                                                          \n                             at __awaiter        src/modules/slot/slot.services/card.service.ts:23   atlas data                                                                      \n                             at postCardForCrud  src/modules/slot/slot.services/card.service.ts:172  export const postCardForCrud = async (_fields: any, files): Promise<any> => {   \n                             at                  src/modules/slot/slot.controller.ts:495             const resp = await postCardForCrud(req.fields, req.files)                       \n                             at step             src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next             src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(109,'2020-11-30 10:39:50','11-30 10:39 | App catch: [BadRequestError] Select an image for the thumb\n              \n                             at                  src/modules/slot/slot.services/card.service.ts:195  if ((!thumbFile && !fields.thumbUrl)) throw createHttpError(StatusCodes.BAD_REQ…\n                             at step             src/modules/slot/slot.services/card.service.ts:52   else resp = await queryExec(`insert into card ?`, [cardDTO])                    \n                             at next             src/modules/slot/slot.services/card.service.ts:33   export const getCards = async (cardSetId?: number): Promise<Card[] | undefined>…\n                             at                  src/modules/slot/slot.services/card.service.ts:27   title                                                                           \n                             at new Promise                                                                                                                                          \n                             at __awaiter        src/modules/slot/slot.services/card.service.ts:23   atlas data                                                                      \n                             at postCardForCrud  src/modules/slot/slot.services/card.service.ts:172  export const postCardForCrud = async (_fields: any, files): Promise<any> => {   \n                             at                  src/modules/slot/slot.controller.ts:495             const resp = await postCardForCrud(req.fields, req.files)                       \n                             at step             src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next             src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(110,'2020-11-30 10:40:07','11-30 10:40 | App catch: [BadRequestError] Stars has to be less or equal to 5\n              \n                             at                  src/modules/slot/slot.services/card.service.ts:196  if(!fields.stars || fields.stars > 5) throw createHttpError(StatusCodes.BAD_REQ…\n                             at step             src/modules/slot/slot.services/card.service.ts:52   else resp = await queryExec(`insert into card ?`, [cardDTO])                    \n                             at next             src/modules/slot/slot.services/card.service.ts:33   export const getCards = async (cardSetId?: number): Promise<Card[] | undefined>…\n                             at                  src/modules/slot/slot.services/card.service.ts:27   title                                                                           \n                             at new Promise                                                                                                                                          \n                             at __awaiter        src/modules/slot/slot.services/card.service.ts:23   atlas data                                                                      \n                             at postCardForCrud  src/modules/slot/slot.services/card.service.ts:172  export const postCardForCrud = async (_fields: any, files): Promise<any> => {   \n                             at                  src/modules/slot/slot.controller.ts:495             const resp = await postCardForCrud(req.fields, req.files)                       \n                             at step             src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next             src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(111,'2020-11-30 10:41:03','11-30 10:41 | App catch: [BadRequestError] Reward Amount can not be empty\n              \n                             at                      src/modules/slot/slot.services/card.service.ts:123  if(cardSet.rewardAmount === 0) throw createHttpError(StatusCodes.BAD_REQUEST, \'…\n                             at step                 src/modules/slot/slot.services/card.service.ts:52   else resp = await queryExec(`insert into card ?`, [cardDTO])                    \n                             at next                 src/modules/slot/slot.services/card.service.ts:33   export const getCards = async (cardSetId?: number): Promise<Card[] | undefined>…\n                             at                      src/modules/slot/slot.services/card.service.ts:27   title                                                                           \n                             at new Promise                                                                                                                                              \n                             at __awaiter            src/modules/slot/slot.services/card.service.ts:23   atlas data                                                                      \n                             at postCardSetsForCrud  src/modules/slot/slot.services/card.service.ts:119  export const postCardSetsForCrud = async (cardSet: CardSet): Promise<any> => {  \n                             at                      src/modules/slot/slot.controller.ts:491             const cards = await postCardSetsForCrud(req.body)                               \n                             at step                 src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next                 src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(112,'2020-11-30 10:41:08','11-30 10:41 | App catch: [BadRequestError] Theme Color can not be empty\n              \n                             at                      src/modules/slot/slot.services/card.service.ts:124  if(cardSet.themeColor === \'\') throw createHttpError(StatusCodes.BAD_REQUEST, \'T…\n                             at step                 src/modules/slot/slot.services/card.service.ts:52   else resp = await queryExec(`insert into card ?`, [cardDTO])                    \n                             at next                 src/modules/slot/slot.services/card.service.ts:33   export const getCards = async (cardSetId?: number): Promise<Card[] | undefined>…\n                             at                      src/modules/slot/slot.services/card.service.ts:27   title                                                                           \n                             at new Promise                                                                                                                                              \n                             at __awaiter            src/modules/slot/slot.services/card.service.ts:23   atlas data                                                                      \n                             at postCardSetsForCrud  src/modules/slot/slot.services/card.service.ts:119  export const postCardSetsForCrud = async (cardSet: CardSet): Promise<any> => {  \n                             at                      src/modules/slot/slot.controller.ts:491             const cards = await postCardSetsForCrud(req.body)                               \n                             at step                 src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next                 src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(113,'2020-11-30 10:42:02','11-30 10:42 | App catch: [BadRequestError] Card Set localizations can not be empty\n              \n                             at                            src/modules/slot/slot.services/card.service.ts:131  if(localization.text === \'\') throw createHttpError(StatusCodes.BAD_REQUEST, \'Ca…\n                             at step                       src/modules/slot/slot.services/card.service.ts:52   else resp = await queryExec(`insert into card ?`, [cardDTO])                    \n                             at next                       src/modules/slot/slot.services/card.service.ts:33   export const getCards = async (cardSetId?: number): Promise<Card[] | undefined>…\n                             at fulfilled                  src/modules/slot/slot.services/card.service.ts:24                                                                                   \n                             at processTicksAndRejections  internal/process/task_queues.js:97                                                                                                   ()\n'),(114,'2020-11-30 10:42:55','11-30 10:42 | App catch: [BadRequestError] Card Set localizations can not be empty\n              \n                             at                            src/modules/slot/slot.services/card.service.ts:131  if(localization.text === \'\') throw createHttpError(StatusCodes.BAD_REQUEST, \'Ca…\n                             at step                       src/modules/slot/slot.services/card.service.ts:52   else resp = await queryExec(`insert into card ?`, [cardDTO])                    \n                             at next                       src/modules/slot/slot.services/card.service.ts:33   export const getCards = async (cardSetId?: number): Promise<Card[] | undefined>…\n                             at fulfilled                  src/modules/slot/slot.services/card.service.ts:24                                                                                   \n                             at processTicksAndRejections  internal/process/task_queues.js:97                                                                                                   ()\n'),(115,'2020-11-30 10:43:00','11-30 10:43 | App catch: [BadRequestError] Card Set localizations can not be empty\n              \n                             at                            src/modules/slot/slot.services/card.service.ts:131  if(localization.text === \'\') throw createHttpError(StatusCodes.BAD_REQUEST, \'Ca…\n                             at step                       src/modules/slot/slot.services/card.service.ts:52   else resp = await queryExec(`insert into card ?`, [cardDTO])                    \n                             at next                       src/modules/slot/slot.services/card.service.ts:33   export const getCards = async (cardSetId?: number): Promise<Card[] | undefined>…\n                             at fulfilled                  src/modules/slot/slot.services/card.service.ts:24                                                                                   \n                             at processTicksAndRejections  internal/process/task_queues.js:97                                                                                                   ()\n'),(116,'2020-11-30 10:43:14','11-30 10:43 | App catch: [BadRequestError] Select a card image\n              \n                             at                  src/modules/slot/slot.services/card.service.ts:195  if ((!textureFile && !fields.textureUrl)) throw createHttpError(StatusCodes.BAD…\n                             at step             src/modules/slot/slot.services/card.service.ts:52   else resp = await queryExec(`insert into card ?`, [cardDTO])                    \n                             at next             src/modules/slot/slot.services/card.service.ts:33   export const getCards = async (cardSetId?: number): Promise<Card[] | undefined>…\n                             at                  src/modules/slot/slot.services/card.service.ts:27   title                                                                           \n                             at new Promise                                                                                                                                          \n                             at __awaiter        src/modules/slot/slot.services/card.service.ts:23   atlas data                                                                      \n                             at postCardForCrud  src/modules/slot/slot.services/card.service.ts:173  export const postCardForCrud = async (_fields: any, files): Promise<any> => {   \n                             at                  src/modules/slot/slot.controller.ts:495             const resp = await postCardForCrud(req.fields, req.files)                       \n                             at step             src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next             src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(117,'2020-11-30 13:24:36','11-30 13:24 | App catch: [BadRequestError] Select a card image\n              \n                             at                  src/modules/slot/slot.services/card.service.ts:195  if ((!textureFile && !fields.textureUrl)) throw createHttpError(StatusCodes.BAD…\n                             at step             src/modules/slot/slot.services/card.service.ts:52   if (!cardInDb) card.id = resp.insertId                                          \n                             at next             src/modules/slot/slot.services/card.service.ts:33   const where = cardSetId ? ` where card_set_id = ${cardSetId}`: \'\'               \n                             at                  src/modules/slot/slot.services/card.service.ts:27   stars:number (drop rate)                                                        \n                             at new Promise                                                                                                                                          \n                             at __awaiter        src/modules/slot/slot.services/card.service.ts:23                                                                                   \n                             at postCardForCrud  src/modules/slot/slot.services/card.service.ts:173  export const postCardForCrud = async (_fields: any, files): Promise<any> => {   \n                             at                  src/modules/slot/slot.controller.ts:495             const resp = await postCardForCrud(req.fields, req.files)                       \n                             at step             src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next             src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(118,'2020-11-30 13:24:51','11-30 13:24 | App catch: [BadRequestError] Stars has to be less or equal to 5\n              \n                             at                  src/modules/slot/slot.services/card.service.ts:197  if(!fields.stars || fields.stars > 5) throw createHttpError(StatusCodes.BAD_REQ…\n                             at step             src/modules/slot/slot.services/card.service.ts:52   if (!cardInDb) card.id = resp.insertId                                          \n                             at next             src/modules/slot/slot.services/card.service.ts:33   const where = cardSetId ? ` where card_set_id = ${cardSetId}`: \'\'               \n                             at                  src/modules/slot/slot.services/card.service.ts:27   stars:number (drop rate)                                                        \n                             at new Promise                                                                                                                                          \n                             at __awaiter        src/modules/slot/slot.services/card.service.ts:23                                                                                   \n                             at postCardForCrud  src/modules/slot/slot.services/card.service.ts:173  export const postCardForCrud = async (_fields: any, files): Promise<any> => {   \n                             at                  src/modules/slot/slot.controller.ts:495             const resp = await postCardForCrud(req.fields, req.files)                       \n                             at step             src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next             src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(119,'2020-11-30 13:36:59','11-30 13:36 | App catch: [BadRequestError] Stars has to be less or equal to 5\n              \n                             at                  src/modules/slot/slot.services/card.service.ts:197  if(!fields.stars || fields.stars > 5) throw createHttpError(StatusCodes.BAD_REQ…\n                             at step             src/modules/slot/slot.services/card.service.ts:52   if (!cardInDb) card.id = resp.insertId                                          \n                             at next             src/modules/slot/slot.services/card.service.ts:33   const where = cardSetId ? ` where card_set_id = ${cardSetId}`: \'\'               \n                             at                  src/modules/slot/slot.services/card.service.ts:27   stars:number (drop rate)                                                        \n                             at new Promise                                                                                                                                          \n                             at __awaiter        src/modules/slot/slot.services/card.service.ts:23                                                                                   \n                             at postCardForCrud  src/modules/slot/slot.services/card.service.ts:173  export const postCardForCrud = async (_fields: any, files): Promise<any> => {   \n                             at                  src/modules/slot/slot.controller.ts:495             const resp = await postCardForCrud(req.fields, req.files)                       \n                             at step             src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next             src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(120,'2020-11-30 13:48:53','11-30 13:48 | App catch: [BadRequestError] Problem deleting card -1\n              \n                             at                            src/modules/slot/slot.services/card.service.ts:250  if(resp.affectedRows !== 1) throw createHttpError(StatusCodes.BAD_REQUEST, \'Pro…\n                             at step                       src/modules/slot/slot.services/card.service.ts:52   if (!cardInDb) card.id = resp.insertId                                          \n                             at next                       src/modules/slot/slot.services/card.service.ts:33   const where = cardSetId ? ` where card_set_id = ${cardSetId}`: \'\'               \n                             at fulfilled                  src/modules/slot/slot.services/card.service.ts:24   card                                                                            \n                             at processTicksAndRejections  internal/process/task_queues.js:97                                                                                                   ()\n'),(121,'2020-11-30 14:26:28','11-30 14:26 | App catch: [BadRequestError] Problem deleting card -1\n              \n                             at                            src/modules/slot/slot.services/card.service.ts:250  if(resp.affectedRows !== 1) throw createHttpError(StatusCodes.BAD_REQUEST, \'Pro…\n                             at step                       src/modules/slot/slot.services/card.service.ts:52   if (!cardInDb) card.id = resp.insertId                                          \n                             at next                       src/modules/slot/slot.services/card.service.ts:33   const where = cardSetId ? ` where card_set_id = ${cardSetId}`: \'\'               \n                             at fulfilled                  src/modules/slot/slot.services/card.service.ts:24   card                                                                            \n                             at processTicksAndRejections  internal/process/task_queues.js:97                                                                                                   ()\n'),(122,'2020-11-30 14:43:35','11-30 14:43 | App catch: [BadRequestError] Stars has to be less or equal to 5\n              \n                             at                  src/modules/slot/slot.services/card.service.ts:197  if(!fields.stars || fields.stars > 5) throw createHttpError(StatusCodes.BAD_REQ…\n                             at step             src/modules/slot/slot.services/card.service.ts:52   if (!cardInDb) card.id = resp.insertId                                          \n                             at next             src/modules/slot/slot.services/card.service.ts:33   const where = cardSetId ? ` where card_set_id = ${cardSetId}`: \'\'               \n                             at                  src/modules/slot/slot.services/card.service.ts:27   stars:number (drop rate)                                                        \n                             at new Promise                                                                                                                                          \n                             at __awaiter        src/modules/slot/slot.services/card.service.ts:23                                                                                   \n                             at postCardForCrud  src/modules/slot/slot.services/card.service.ts:173  export const postCardForCrud = async (_fields: any, files): Promise<any> => {   \n                             at                  src/modules/slot/slot.controller.ts:495             const resp = await postCardForCrud(req.fields, req.files)                       \n                             at step             src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next             src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(123,'2020-11-30 15:22:30','11-30 15:22 | App catch: [BadRequestError] Reward Type is invalid\n              \n                             at                      src/modules/slot/slot.services/card.service.ts:125  if(!isValidPaymentType(`${cardSet.rewardType}s`)) throw createHttpError(StatusC…\n                             at step                 src/modules/slot/slot.services/card.service.ts:52   if (!cardInDb) card.id = resp.insertId                                          \n                             at next                 src/modules/slot/slot.services/card.service.ts:33   const where = cardSetId ? ` where card_set_id = ${cardSetId}`: \'\'               \n                             at                      src/modules/slot/slot.services/card.service.ts:27   stars:number (drop rate)                                                        \n                             at new Promise                                                                                                                                              \n                             at __awaiter            src/modules/slot/slot.services/card.service.ts:23                                                                                   \n                             at postCardSetsForCrud  src/modules/slot/slot.services/card.service.ts:119  export const postCardSetsForCrud = async (cardSet: CardSet): Promise<any> => {  \n                             at                      src/modules/slot/slot.controller.ts:491             const cards = await postCardSetsForCrud(req.body)                               \n                             at step                 src/modules/slot/slot.controller.ts:52              res.status(200).json(resp)                                                      \n                             at next                 src/modules/slot/slot.controller.ts:33              import { getJackpotData, jackpotPost } from \'./slot.services/jackpot.service\'    ()\n'),(124,'2020-11-30 20:53:44','11-30 20:53 | App catch: {    message:   \"Column \\\'card_id\\\' cannot be null\",\n                                 code:   \"ER_BAD_NULL_ERROR\",\n                                errno:    1048,\n                             sqlState:   \"23000\",\n                           sqlMessage:   \"Column \\\'card_id\\\' cannot be null\",\n                                 data: { select: \"\\n    insert into game_user_card(game_user_id, card_id) value\\n…\" } } ()\n'),(125,'2020-11-30 20:55:02','11-30 20:55 | App catch: {    message:   \"Column \\\'card_id\\\' cannot be null\",\n                                 code:   \"ER_BAD_NULL_ERROR\",\n                                errno:    1048,\n                             sqlState:   \"23000\",\n                           sqlMessage:   \"Column \\\'card_id\\\' cannot be null\",\n                                 data: { select: \"\\n    insert into game_user_card(game_user_id, card_id) value\\n…\" } } ()\n'),(126,'2020-11-30 21:03:33','11-30 21:03 | App catch: {    message:   \"Column \\\'card_id\\\' cannot be null\",\n                                 code:   \"ER_BAD_NULL_ERROR\",\n                                errno:    1048,\n                             sqlState:   \"23000\",\n                           sqlMessage:   \"Column \\\'card_id\\\' cannot be null\",\n                                 data: { select: \"\\n    insert into game_user_card(game_user_id, card_id) value\\n…\" } } ()\n'),(127,'2020-11-30 21:04:06','11-30 21:04 | App catch: [BadRequestError] Insufficient funds\n              \n                             at <anonymous>                src/modules/slot/slot.services/spin.service.ts:40  if (!enoughSpins) throw createError(400, \'Insufficient funds\')      \n                             at step                       src/modules/slot/slot.services/spin.service.ts:52  await jackpotService.sendJackpotWinEvent(user, <number>jackpotRowId)\n                             at next                       src/modules/slot/slot.services/spin.service.ts:33                                                                      \n                             at fulfilled                  src/modules/slot/slot.services/spin.service.ts:24  const randomNumbers: number[] = []                                  \n                             at processTicksAndRejections  internal/process/task_queues.js:97                                                                                      ()\n'),(128,'2020-11-30 21:06:13','11-30 21:06 | App catch: [BadRequestError] Insufficient funds\n              \n                             at <anonymous>                src/modules/slot/slot.services/spin.service.ts:40  if (!enoughSpins) throw createError(400, \'Insufficient funds\')      \n                             at step                       src/modules/slot/slot.services/spin.service.ts:52  await jackpotService.sendJackpotWinEvent(user, <number>jackpotRowId)\n                             at next                       src/modules/slot/slot.services/spin.service.ts:33                                                                      \n                             at fulfilled                  src/modules/slot/slot.services/spin.service.ts:24  const randomNumbers: number[] = []                                  \n                             at processTicksAndRejections  internal/process/task_queues.js:97                                                                                      ()\n'),(129,'2020-11-30 21:07:03','11-30 21:07 | App catch: [BadRequestError] Insufficient funds\n              \n                             at <anonymous>                src/modules/slot/slot.services/spin.service.ts:40  if (!enoughSpins) throw createError(400, \'Insufficient funds\')      \n                             at step                       src/modules/slot/slot.services/spin.service.ts:52  await jackpotService.sendJackpotWinEvent(user, <number>jackpotRowId)\n                             at next                       src/modules/slot/slot.services/spin.service.ts:33                                                                      \n                             at fulfilled                  src/modules/slot/slot.services/spin.service.ts:24  const randomNumbers: number[] = []                                  \n                             at processTicksAndRejections  internal/process/task_queues.js:97                                                                                      ()\n'),(130,'2020-11-30 21:07:10','11-30 21:07 | App catch: [BadRequestError] Insufficient funds\n              \n                             at <anonymous>                src/modules/slot/slot.services/spin.service.ts:40  if (!enoughSpins) throw createError(400, \'Insufficient funds\')      \n                             at step                       src/modules/slot/slot.services/spin.service.ts:52  await jackpotService.sendJackpotWinEvent(user, <number>jackpotRowId)\n                             at next                       src/modules/slot/slot.services/spin.service.ts:33                                                                      \n                             at fulfilled                  src/modules/slot/slot.services/spin.service.ts:24  const randomNumbers: number[] = []                                  \n                             at processTicksAndRejections  internal/process/task_queues.js:97                                                                                      ()\n'),(131,'2020-11-30 21:09:54','11-30 21:09 | App catch: [BadRequestError] Insufficient funds\n              \n                             at <anonymous>                src/modules/slot/slot.services/spin.service.ts:38  if (!enoughSpins) throw createHttpError(400, \'Insufficient funds\')              \n                             at step                       src/modules/slot/slot.services/spin.service.ts:52  } else if (isWin) {                                                             \n                             at next                       src/modules/slot/slot.services/spin.service.ts:33                                                                                  \n                             at fulfilled                  src/modules/slot/slot.services/spin.service.ts:24  export async function spin(deviceId: string, multiplier: number, userIsDev: boo…\n                             at processTicksAndRejections  internal/process/task_queues.js:97                                                                                                  ()\n'),(132,'2020-11-30 21:10:38','11-30 21:10 | App catch: [BadRequestError] Insufficient funds\n              \n                             at <anonymous>                src/modules/slot/slot.services/spin.service.ts:39  if (!enoughSpins) throw createHttpError(400, \'Insufficient funds\')              \n                             at step                       src/modules/slot/slot.services/spin.service.ts:52  isWin = true                                                                    \n                             at next                       src/modules/slot/slot.services/spin.service.ts:33  const wallet = await getWallet(user)                                            \n                             at fulfilled                  src/modules/slot/slot.services/spin.service.ts:24  export async function spin(deviceId: string, multiplier: number, userIsDev: boo…\n                             at processTicksAndRejections  internal/process/task_queues.js:97                                                                                                  ()\n'),(133,'2020-11-30 21:11:23','11-30 21:11 | App catch: [BadRequestError] Insufficient funds\n              \n                             at <anonymous>                src/modules/slot/slot.services/spin.service.ts:39  if (!enoughSpins) throw createHttpError(400, \'Insufficient funds\')              \n                             at step                       src/modules/slot/slot.services/spin.service.ts:52  isWin = true                                                                    \n                             at next                       src/modules/slot/slot.services/spin.service.ts:33  const wallet = await getWallet(user)                                            \n                             at fulfilled                  src/modules/slot/slot.services/spin.service.ts:24  export async function spin(deviceId: string, multiplier: number, userIsDev: boo…\n                             at processTicksAndRejections  internal/process/task_queues.js:97                                                                                                  ()\n');
/*!40000 ALTER TABLE `log` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `pay_table`
--

DROP TABLE IF EXISTS `pay_table`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `pay_table` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `symbol_id` int(11) unsigned NOT NULL,
  `symbol_amount` int(3) NOT NULL DEFAULT 0,
  `probability` decimal(5,2) NOT NULL DEFAULT 0.00,
  `points` int(5) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `FK_pay_table_symbol_id` (`symbol_id`),
  CONSTRAINT `FK_pay_table_symbol_id` FOREIGN KEY (`symbol_id`) REFERENCES `symbol` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=26 DEFAULT CHARSET=utf8mb4 ROW_FORMAT=DYNAMIC;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `pay_table`
--

LOCK TABLES `pay_table` WRITE;
/*!40000 ALTER TABLE `pay_table` DISABLE KEYS */;
INSERT INTO `pay_table` VALUES (1,545,3,0.00,100),(2,555,3,2.50,5),(11,540,3,3.00,4000),(12,541,3,2.50,5000),(13,537,3,12.00,600),(15,538,3,12.00,700),(16,541,2,8.00,1000),(17,541,1,10.00,200),(18,540,2,10.00,800),(19,540,1,11.00,100),(21,544,3,12.00,500),(22,554,3,12.00,1),(25,842,3,5.00,10);
/*!40000 ALTER TABLE `pay_table` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `raffle`
--

DROP TABLE IF EXISTS `raffle`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `raffle` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `live_date` datetime NOT NULL DEFAULT current_timestamp(),
  `closing_date` datetime NOT NULL,
  `raffle_number_price` int(10) unsigned NOT NULL,
  `texture_url` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `item_highlight` tinyint(1) NOT NULL,
  `winner` int(10) unsigned DEFAULT NULL,
  `state` varchar(25) COLLATE utf8mb4_unicode_ci DEFAULT 'new',
  PRIMARY KEY (`id`),
  KEY `raffle_game_user_id_fk` (`winner`),
  CONSTRAINT `raffle_game_user_id_fk` FOREIGN KEY (`winner`) REFERENCES `game_user` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=76 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `raffle`
--

LOCK TABLES `raffle` WRITE;
/*!40000 ALTER TABLE `raffle` DISABLE KEYS */;
INSERT INTO `raffle` VALUES (62,'2020-10-01 19:16:51','2020-10-25 19:16:51',7,'/raffleItems/62_09297731.png',0,613,'won'),(63,'2020-10-08 19:20:59','2020-10-08 19:26:59',2,'/raffleItems/63_03755887.jpg',0,NULL,'nowinner'),(64,'2020-10-10 19:20:59','2020-10-30 19:20:59',4,'/raffleItems/64_04829521.jpg',0,583,'won'),(65,'2020-10-08 19:26:30','2020-10-08 19:40:30',5,'/raffleItems/65_02183996.webp',0,583,'won'),(66,'2020-10-08 23:59:21','2020-10-09 00:02:21',3,'/raffleItems/66_03955057.png',0,583,'won'),(67,'2020-10-09 14:14:47','2020-10-09 14:20:00',5,'/raffleItems/67_05352644.jpg',0,587,'won'),(68,'2020-10-30 12:38:43','2020-11-30 12:38:43',100,'/raffleItems/68_00623896.png',0,NULL,'new'),(69,'2020-11-02 15:53:54','2020-11-02 15:56:00',10,'/raffleItems/69_08811318.png',0,583,'won'),(70,'2020-11-02 15:56:10','2020-11-02 16:00:00',1,'/raffleItems/70_08678446.png',0,613,'won'),(71,'2020-11-02 15:59:18','2020-11-02 16:02:00',1,'/raffleItems/71_08760786.png',0,613,'won'),(72,'2020-11-02 17:40:07','2020-11-02 17:45:07',2,'/raffleItems/72_01971617.jpg',0,583,'won'),(73,'2020-11-02 17:47:51','2020-11-02 17:51:51',2,'/raffleItems/73_01768663.jpg',0,583,'won'),(74,'2020-11-02 17:52:50','2020-11-02 17:53:50',2,'/raffleItems/74_09410486.jpg',0,NULL,'new'),(75,'2020-11-02 17:54:08','2020-11-02 17:56:08',1,'/raffleItems/75_09188782.jpg',0,583,'won');
/*!40000 ALTER TABLE `raffle` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `raffle_history`
--

DROP TABLE IF EXISTS `raffle_history`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `raffle_history` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `raffle_id` int(11) unsigned NOT NULL,
  `game_user_id` int(11) unsigned NOT NULL,
  `transaction_date` datetime NOT NULL DEFAULT current_timestamp(),
  `tickets` int(11) NOT NULL,
  `closing_date` datetime NOT NULL DEFAULT current_timestamp(),
  `raffle_numbers` int(11) NOT NULL,
  `win` tinyint(1) NOT NULL DEFAULT 0,
  `notified` tinyint(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  KEY `raffle_history_game_user_id_fk` (`game_user_id`),
  KEY `raffle_history_raffle_id_fk` (`raffle_id`),
  CONSTRAINT `raffle_history_game_user_id_fk` FOREIGN KEY (`game_user_id`) REFERENCES `game_user` (`id`),
  CONSTRAINT `raffle_history_raffle_id_fk` FOREIGN KEY (`raffle_id`) REFERENCES `raffle` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=153 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `raffle_history`
--

LOCK TABLES `raffle_history` WRITE;
/*!40000 ALTER TABLE `raffle_history` DISABLE KEYS */;
INSERT INTO `raffle_history` VALUES (121,62,583,'2020-10-08 19:20:49',14,'2020-10-08 19:20:49',2,0,1),(122,65,583,'2020-10-08 19:31:00',10,'2020-10-08 19:31:00',2,1,1),(123,66,583,'2020-10-09 00:00:41',3,'2020-10-09 00:00:41',1,1,1),(124,62,614,'2020-10-09 08:23:35',35,'2020-10-09 08:23:35',5,0,1),(125,62,613,'2020-10-09 09:16:03',28,'2020-10-09 09:16:03',4,1,1),(126,62,593,'2020-10-09 13:45:21',21,'2020-10-09 13:45:21',3,0,1),(127,67,593,'2020-10-09 14:17:18',10,'2020-10-09 14:17:18',2,0,1),(128,67,587,'2020-10-09 14:17:30',10,'2020-10-09 14:17:30',2,0,1),(129,62,587,'2020-10-09 14:17:51',35,'2020-10-09 14:17:51',5,0,1),(130,67,587,'2020-10-09 14:18:07',20,'2020-10-09 14:18:07',4,0,1),(131,67,593,'2020-10-09 14:18:23',35,'2020-10-09 14:18:23',7,0,1),(132,67,587,'2020-10-09 14:18:42',260,'2020-10-09 14:18:42',52,1,1),(133,62,587,'2020-10-09 21:30:05',21,'2020-10-09 21:30:05',3,0,1),(134,62,614,'2020-10-12 11:25:01',63,'2020-10-12 11:25:01',9,0,1),(135,64,583,'2020-10-13 12:28:08',8,'2020-10-13 12:28:08',2,0,1),(136,64,583,'2020-10-27 14:25:19',16,'2020-10-27 14:25:19',4,0,1),(137,64,625,'2020-10-29 17:24:57',12,'2020-10-29 17:24:57',3,0,1),(138,64,583,'2020-10-30 12:25:56',8,'2020-10-30 12:25:56',2,1,1),(139,68,583,'2020-10-30 12:41:06',100,'2020-10-30 12:41:06',1,0,1),(140,69,583,'2020-11-02 15:55:24',50,'2020-11-02 15:55:24',5,1,1),(141,69,613,'2020-11-02 15:55:42',20,'2020-11-02 15:55:42',2,0,1),(142,69,583,'2020-11-02 15:55:46',30,'2020-11-02 15:55:46',3,0,1),(143,70,613,'2020-11-02 15:59:09',1,'2020-11-02 15:59:09',1,1,1),(144,71,613,'2020-11-02 16:01:34',1,'2020-11-02 16:01:34',1,1,1),(145,68,593,'2020-11-02 16:25:23',100,'2020-11-02 16:25:23',1,0,1),(146,72,583,'2020-11-02 17:41:29',6,'2020-11-02 17:41:29',3,0,1),(147,72,583,'2020-11-02 17:41:53',8,'2020-11-02 17:41:53',4,1,1),(148,73,583,'2020-11-02 17:49:03',2,'2020-11-02 17:49:03',1,1,1),(149,74,583,'2020-11-02 17:53:34',4,'2020-11-02 17:53:34',2,0,1),(150,75,583,'2020-11-02 17:55:06',1,'2020-11-02 17:55:06',1,1,1),(151,68,583,'2020-11-03 02:45:24',100,'2020-11-03 02:45:24',1,0,1),(152,68,593,'2020-11-16 15:51:44',300,'2020-11-16 15:51:44',3,0,1);
/*!40000 ALTER TABLE `raffle_history` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `raffle_localization`
--

DROP TABLE IF EXISTS `raffle_localization`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `raffle_localization` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `raffle_id` int(10) unsigned NOT NULL,
  `language_code` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL,
  `name` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL,
  `description` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  PRIMARY KEY (`id`),
  KEY `FK_raffle_localiztion_language_language_code` (`language_code`),
  KEY `FK_raffle_localiztion_raffle_id` (`raffle_id`),
  CONSTRAINT `FK_raffle_localization_language_id` FOREIGN KEY (`language_code`) REFERENCES `language` (`language_code`),
  CONSTRAINT `FK_raffle_localiztion_language_language_code` FOREIGN KEY (`language_code`) REFERENCES `language` (`language_code`) ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=126 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `raffle_localization`
--

LOCK TABLES `raffle_localization` WRITE;
/*!40000 ALTER TABLE `raffle_localization` DISABLE KEYS */;
INSERT INTO `raffle_localization` VALUES (84,62,'en-US','Spins','In english'),(85,62,'es-ES','Fichas','Es español'),(86,62,'fr-FR','Spinés','En francois'),(87,63,'en-US','Test raffle','Test raffle'),(88,63,'es-ES','Test raffle','Test raffle'),(89,63,'fr-FR','Test raffle','Test raffle'),(90,64,'en-US','Lemmon Juicer','Extract all the juice!'),(91,64,'es-ES','Exprimidor de Limones','Extraiga todo el jugo!'),(92,64,'fr-FR','Exprimité your limoné!','French limoné!'),(93,65,'en-US','Peppa Pig Van','Peppa Pig Van'),(94,65,'es-ES','Peppa Pig Van','Peppa Pig Van'),(95,65,'fr-FR','Peppa Pig Van','Peppa Pig Van'),(96,66,'en-US','Raffle Test','Raffle Test'),(97,66,'es-ES','Raffle Test','Raffle Test'),(98,66,'fr-FR','Raffle Test','Raffle Test'),(99,67,'en-US','Esto es el titulo','Avengers'),(100,67,'es-ES','Esto es el titulo','Avengers'),(101,67,'fr-FR','Esto es el titulo','Avengers'),(102,68,'en-US','Another Raffle','Some sweet prize!'),(103,68,'es-ES','Another Raffle','Some sweet prize!'),(104,68,'fr-FR','Another Raffle','Some sweet prize!'),(105,69,'en-US','todo','todo'),(106,69,'es-ES','todo','todo'),(107,69,'fr-FR','error','de tofo'),(108,70,'en-US','todo','todo'),(109,70,'es-ES','tofo','todo'),(110,70,'fr-FR','tdoo','todo'),(111,71,'en-US','todo','todo'),(112,71,'es-ES','todo','todo'),(113,71,'fr-FR','todo','todo'),(114,72,'en-US','Test en','Test en'),(115,72,'es-ES','Test es','Test es'),(116,72,'fr-FR','Test fr','Test fr'),(117,73,'en-US','drgsd','gregrg'),(118,73,'es-ES','dgsdrg','rgrgr'),(119,73,'fr-FR','drsgdrg','fr'),(120,74,'en-US','dfgbf','fgbfg'),(121,74,'es-ES','fgbf','bgf'),(122,74,'fr-FR','bfg','bfgb'),(123,75,'en-US','dfshgdf','rthrtdh'),(124,75,'es-ES','gdrtgdrg','gdrgr'),(125,75,'fr-FR','sererg','rtgrtgrt');
/*!40000 ALTER TABLE `raffle_localization` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `raffle_wins`
--

DROP TABLE IF EXISTS `raffle_wins`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `raffle_wins` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `raffle_history_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `raffle_wins_raffle_history_id_fk` (`raffle_history_id`),
  CONSTRAINT `raffle_wins_raffle_history_id_fk` FOREIGN KEY (`raffle_history_id`) REFERENCES `raffle_history` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=166 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `raffle_wins`
--

LOCK TABLES `raffle_wins` WRITE;
/*!40000 ALTER TABLE `raffle_wins` DISABLE KEYS */;
INSERT INTO `raffle_wins` VALUES (155,122),(156,123),(158,125),(157,132),(159,138),(160,140),(161,143),(162,144),(163,147),(164,148),(165,150);
/*!40000 ALTER TABLE `raffle_wins` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `setting`
--

DROP TABLE IF EXISTS `setting`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `setting` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) COLLATE utf8mb4_unicode_ci DEFAULT '''NULL''',
  `value` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT 'NULL',
  `description` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT 'NULL',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=102 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci ROW_FORMAT=DYNAMIC;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `setting`
--

LOCK TABLES `setting` WRITE;
/*!40000 ALTER TABLE `setting` DISABLE KEYS */;
INSERT INTO `setting` VALUES (10,'betPrice','1','Cost of a spin in coins'),(27,'initialWalletTickets','10','NULL'),(28,'initialWalletCoins','100','NULL'),(29,'maxMultiplier','3','NULL'),(31,'spinCount','4','NULL'),(32,'spinCost','1','NULL'),(33,'requireProfileData','0','NULL'),(34,'ticketPrice','1000','NULL'),(35,'jackpotCycle','25','NULL'),(36,'jackpotPrized','5000','NULL'),(37,'emailSupport','support@tagadagames.com','NULL'),(38,'interstitialsRatio','3','NULL'),(39,'initialWalletSpins','10','NULL'),(40,'lapseForSpinRegeneration','300','NULL'),(41,'maxSpinsForSpinRegeneration','20','NULL'),(42,'spinsAmountForSpinRegeneration','1','NULL'),(85,'gameVersion','1.2.1','NULL'),(86,'gameIdentifier','com.TagadaGames.SlotoPrizes','NULL'),(87,'last_EVENT_ID','26abY7ce36644b2b92fe7Y0','NULL'),(88,'spinLosePercent','40','NULL'),(89,'spinRatioTimer','2.5','NULL'),(90,'maxAllowedBirthYear','2003','NULL'),(91,'maxSpinsForSpinRegeneration','20','NULL'),(92,'languageCode','fr-FR','NULL'),(94,'maintenanceMode','0','NULL'),(95,'signupCount','10','NULL'),(96,'languageJsonUrl','https://script.google.com/macros/s/AKfycbzkBJBlnS7HfHMj5rlZvAcLTEuoHHBP6848nJ2mfnBzfQ2xge0w/exec?ssid=1zHwpbks-VsttadBy9LRdwQW7E9aDGBc0e80Gw2ALNuQ&sheet=dev&langCode=<languageCode>','NULL'),(97,'localizationSpreadsheetUrlLive','https://docs.google.com/spreadsheets/d/1zHwpbks-VsttadBy9LRdwQW7E9aDGBc0e80Gw2ALNuQ/edit#gid=1259474418','NULL'),(98,'localizationJsonUrl','https://script.google.com/macros/s/AKfycbzkBJBlnS7HfHMj5rlZvAcLTEuoHHBP6848nJ2mfnBzfQ2xge0w/exec?ssid=1zHwpbks-VsttadBy9LRdwQW7E9aDGBc0e80Gw2ALNuQ&sheet=<environment>&langCode=<languageCode>','NULL'),(99,'localizationSpreadsheetUrlDev','https://docs.google.com/spreadsheets/d/1zHwpbks-VsttadBy9LRdwQW7E9aDGBc0e80Gw2ALNuQ/edit#gid=1495630985','NULL'),(100,'currentGameVersion','1.1.2','NULL'),(101,'latestMandatoryVersion','1.1.1','NULL');
/*!40000 ALTER TABLE `setting` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `skin`
--

DROP TABLE IF EXISTS `skin`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `skin` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `machineSkinTextureUrl` varchar(150) DEFAULT NULL,
  `machineBgColor` varchar(20) DEFAULT '',
  `name` varchar(55) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `skin`
--

LOCK TABLES `skin` WRITE;
/*!40000 ALTER TABLE `skin` DISABLE KEYS */;
INSERT INTO `skin` VALUES (1,'/skins/1_03522910.png','#454ECF','Skin 1'),(6,'/skins/6_08012126.png','#3f196d','Halloween2'),(7,'/skins/7_07839385.png','#3f196d','Halloween');
/*!40000 ALTER TABLE `skin` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `spins_regeneration`
--

DROP TABLE IF EXISTS `spins_regeneration`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `spins_regeneration` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `lastRegeneration` timestamp NULL DEFAULT current_timestamp(),
  `game_user_id` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=101 DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `spins_regeneration`
--

LOCK TABLES `spins_regeneration` WRITE;
/*!40000 ALTER TABLE `spins_regeneration` DISABLE KEYS */;
INSERT INTO `spins_regeneration` VALUES (1,'2020-11-13 02:03:26',39),(2,'2020-11-10 13:16:27',40),(3,'2020-10-09 08:55:44',41),(4,'2020-10-09 08:55:44',42),(5,'2020-10-09 08:55:44',67),(6,'2020-10-09 08:55:44',73),(7,'2020-10-09 08:55:44',108),(8,'2020-10-09 08:55:44',109),(9,'2020-10-09 08:55:44',110),(10,'2020-10-09 08:55:45',111),(11,'2020-10-09 09:05:46',579),(12,'2020-10-09 08:55:45',580),(13,'2020-10-09 08:55:45',581),(14,'2020-11-09 19:45:08',582),(16,'2020-10-09 09:05:46',585),(17,'2020-10-09 08:55:45',586),(18,'2020-10-09 21:30:05',587),(19,'2020-10-30 10:03:02',589),(20,'2020-10-09 08:55:45',590),(21,'2020-10-09 08:55:45',591),(22,'2020-10-09 08:55:45',592),(23,'2020-10-09 08:55:45',588),(24,'2020-10-09 08:55:45',584),(25,'2020-11-17 12:15:53',593),(26,'2020-10-09 08:55:45',594),(27,'2020-11-16 14:56:38',595),(29,'2020-11-25 12:04:27',583),(30,'2020-10-09 09:05:46',596),(31,'2020-10-09 08:55:46',597),(32,'2020-10-09 08:55:46',598),(33,'2020-10-09 08:55:46',599),(34,'2020-10-29 18:02:32',600),(35,'2020-10-29 17:25:58',601),(36,'2020-10-09 08:55:46',602),(37,'2020-10-09 08:55:46',603),(38,'2020-10-09 08:55:46',604),(39,'2020-10-09 08:55:46',605),(40,'2020-10-09 08:55:46',606),(41,'2020-10-09 08:55:46',607),(42,'2020-10-09 08:55:46',608),(43,'2020-11-09 15:52:25',609),(44,'2020-12-01 00:12:04',610),(45,'2020-10-09 09:05:46',611),(46,'2020-10-15 14:43:07',612),(47,'2020-11-16 10:40:05',613),(48,'2020-11-09 11:38:01',614),(49,'2020-10-12 10:37:58',615),(50,'2020-10-12 10:03:27',616),(51,'2020-10-15 09:57:55',617),(52,'2020-10-15 12:09:08',618),(53,'2020-10-16 18:49:03',619),(54,'2020-10-19 16:29:29',620),(55,'2020-10-27 13:40:30',621),(56,'2020-10-27 20:02:19',622),(57,'2020-10-27 20:02:51',623),(58,'2020-10-29 17:25:00',624),(59,'2020-10-30 11:09:21',625),(60,'2020-10-30 13:08:27',626),(61,'2020-10-30 13:11:27',627),(62,'2020-10-30 14:31:59',628),(63,'2020-11-02 10:35:21',629),(64,'2020-10-30 15:53:41',630),(65,'2020-11-02 10:14:09',631),(66,'2020-10-30 17:18:39',632),(67,'2020-10-30 20:38:08',633),(68,'2020-10-31 15:57:13',634),(69,'2020-11-02 11:38:39',635),(70,'2020-11-02 14:00:06',636),(71,'2020-11-02 14:41:22',637),(72,'2020-11-02 15:50:56',638),(73,'2020-11-02 17:36:47',639),(74,'2020-11-02 17:39:21',640),(75,'2020-11-09 15:51:42',641),(76,'2020-11-05 01:19:48',642),(77,'2020-11-05 01:30:28',643),(78,'2020-11-05 03:07:54',644),(79,'2020-11-05 04:27:07',645),(80,'2020-11-10 13:27:23',646),(81,'2020-11-10 03:12:19',647),(82,'2020-11-10 04:03:22',648),(83,'2020-11-10 05:57:48',649),(84,'2020-11-17 15:07:08',650),(85,'2020-11-10 16:34:23',651),(86,'2020-11-10 19:43:10',652),(87,'2020-11-10 18:57:27',653),(88,'2020-11-13 14:39:33',654),(89,'2020-11-16 16:56:09',655),(90,'2020-11-16 16:54:18',656),(91,'2020-11-17 11:14:08',657),(92,'2020-11-16 18:11:58',658),(93,'2020-11-16 17:52:25',659),(94,'2020-11-16 17:54:51',660),(95,'2020-11-16 19:21:11',661),(96,'2020-11-17 13:50:48',662),(97,'2020-11-18 10:10:39',663),(98,'2020-11-19 13:20:44',664),(99,'2020-11-19 13:21:01',665),(100,'2020-11-19 13:21:19',666);
/*!40000 ALTER TABLE `spins_regeneration` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `state`
--

DROP TABLE IF EXISTS `state`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `state` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `country_id` int(11) NOT NULL,
  `name` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL,
  PRIMARY KEY (`id`),
  KEY `state_country_id_fk` (`country_id`),
  CONSTRAINT `state_country_id_fk` FOREIGN KEY (`country_id`) REFERENCES `country` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=272 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `state`
--

LOCK TABLES `state` WRITE;
/*!40000 ALTER TABLE `state` DISABLE KEYS */;
/*!40000 ALTER TABLE `state` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `support_request`
--

DROP TABLE IF EXISTS `support_request`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `support_request` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `userId` int(10) unsigned NOT NULL,
  `deviceId` varchar(55) COLLATE utf8mb4_unicode_ci NOT NULL,
  `email` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL,
  `message` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `name` varchar(55) COLLATE utf8mb4_unicode_ci NOT NULL,
  `createdAt` datetime DEFAULT current_timestamp(),
  `state` varchar(50) COLLATE utf8mb4_unicode_ci DEFAULT 'New',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=37 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci ROW_FORMAT=DYNAMIC;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `support_request`
--

LOCK TABLES `support_request` WRITE;
/*!40000 ALTER TABLE `support_request` DISABLE KEYS */;
INSERT INTO `support_request` VALUES (2,39,'borrar1','jp@hola.com','Hola, este es el body','miapellido','2020-08-07 03:01:28','Open'),(3,39,'borrar1','jp@hola.com','Hola, este es el body','miapellido','2020-08-07 03:01:28','New'),(4,39,'borrar1','jp@hola.com','Hola, este es el body','miapellido','2020-08-07 03:01:28','New'),(5,39,'borrar1','email@gmail.com','Message of the supper request','Name of the user','2020-08-07 03:01:28','New'),(6,39,'borrar1','email@gmail.com','Message of the supper requestt','Name of the user','2020-08-07 03:01:28','New'),(7,39,'borrar11','email@gmail.com','Message of the supper requestt','Name of the user','2020-08-07 03:01:28','New'),(8,39,'borrar1','email@gmail.com','Message of the supper requestt','Name of the user','2020-08-07 03:01:28','New'),(9,39,'borrar1111','email@gmail.com','Message of the supper requestt','Name of the user','2020-08-07 03:01:28','New'),(10,39,'borrar1','email@gmail.com','Message of the supper requestt','Name of the user','2020-08-07 03:01:28','New'),(11,39,'borrar1','email@gmail.com','Message of the supper requestt','Name of the user','2020-08-07 03:01:28','New'),(12,39,'borrar1','email@gmail.com','Message of the supper requestt','Name of the user','2020-08-07 03:01:28','New'),(13,39,'borrar1','email@gmail.com','Message of the supper requestt','Name of the user','2020-08-07 03:01:28','New'),(14,583,'600bae2a730fc1ddb69117580b816ffc54bb15f8','','Hola mensaje de algo','','2020-08-07 03:01:28','New'),(15,583,'600bae2a730fc1ddb69117580b816ffc54bb15f8','','Hola mensaje de algo','','2020-08-07 03:01:28','New'),(16,583,'600bae2a730fc1ddb69117580b816ffc54bb15f8','','Hola mensaje de algo','','2020-08-07 03:01:28','New'),(17,39,'borrar1','email@gmail.com','Message of the supper requestt','Name of the user','2020-08-07 03:01:28','New'),(18,39,'borrar1','email@gmail.com','Message of the supper requestt','Name of the user','2020-08-07 03:01:28','New'),(19,583,'600bae2a730fc1ddb69117580b816ffc54bb15f8','','hola hola veo veo','','2020-08-07 03:01:28','New'),(20,583,'600bae2a730fc1ddb69117580b816ffc54bb15f8','','gfhfhfhfh','','2020-08-07 03:01:28','New'),(21,39,'borrar1','','Message of the supper requestt','Name of the user','2020-08-07 03:01:28','New'),(22,583,'600bae2a730fc1ddb69117580b816ffc54bb15f8','','fxgjchjhb','','2020-08-07 03:01:28','New'),(23,583,'600bae2a730fc1ddb69117580b816ffc54bb15f8','mail@novack.com.ar','dcghfgnbn','Marcos Novacovsky','2020-08-07 03:01:28','New'),(24,583,'600bae2a730fc1ddb69117580b816ffc54bb15f8','mail@novack.com.ar','dfjgjhgfhkhj','Marcos Novacovsky','2020-08-07 03:01:28','New'),(25,583,'600bae2a730fc1ddb69117580b816ffc54bb15f8','mail@novack.com.ar','dfyjgfjyujuyj','Marcos Novacovsky','2020-08-07 03:01:28','New'),(26,39,'borrar1','email@gmail.com','Message of the supper requestt','Name of the user','2020-08-07 03:01:28','New'),(27,583,'600bae2a730fc1ddb69117580b816ffc54bb15f8','mail@novack.com.ar','fdghfghjgj','Marcos Novacovsky','2020-08-07 03:01:28','New'),(28,39,'borrar1','email@gmail.com','Message of the supper requestt','Name of the user','2020-08-07 03:01:28','New'),(29,583,'600bae2a730fc1ddb69117580b816ffc54bb15f8','mail@novack.com.ar','efrefr','Marcos Novacovsky','2020-09-23 18:05:14','New'),(30,587,'4a897db81b6f6178ccde81ea7aed6544','test1@7angels.com','soy un genio','Samsung galaxy','2020-10-09 14:12:14','New'),(31,583,'600bae2a730fc1ddb69117580b816ffc54bb15f8','mail@novack.com.ar','test','Marcos Unity Editor Dev','2020-10-27 12:53:33','New'),(32,39,'borrar1','psalaj@gmail.com','Message of the supper requestt #8 from stage server','Name of the user','2020-10-30 01:02:47','New'),(33,39,'borrar1','psalaj@gmail.com','Message of the supper requestt #8 from stage server','Name of the user','2020-10-30 01:03:33','New'),(34,39,'borrar12','psalaj@gmail.com','Message of the supper requestt #8 from stage server','Name of the user','2020-10-30 12:09:33','New'),(35,593,'694740da81b6d0b883ac9fd95702d5a8','mail@novack.com.ar','prueba de mensaje de soporte','marcos','2020-11-02 16:17:42','New'),(36,39,'borrar1','email@gmail.com','Message of the supper requestt','Name of the user','2020-11-02 16:19:49','New');
/*!40000 ALTER TABLE `support_request` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `symbol`
--

DROP TABLE IF EXISTS `symbol`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `symbol` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `payment_type` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL,
  `texture_url` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `symbol_name` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=848 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `symbol`
--

LOCK TABLES `symbol` WRITE;
/*!40000 ALTER TABLE `symbol` DISABLE KEYS */;
INSERT INTO `symbol` VALUES (533,'coin','/symbols/live/533_4231.png','apple'),(537,'coin','/symbols/live/blueberry.png','blueberry'),(538,'coin','/symbols/live/cherry.png','cherry'),(540,'coin','/symbols/live/coin.png','coin'),(541,'coin','/symbols/live/coinbag.png','coinbag'),(544,'coin','/symbols/live/grape.png','grape'),(545,'jackpot','/symbols/live/jackpot.png','jackpot'),(554,'card','/symbols/live/strawberry.png','strawberry'),(555,'ticket','/symbols/live/ticket.png','ticket'),(842,'spin','/symbols/live/842_9165.png','spin');
/*!40000 ALTER TABLE `symbol` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tapjoy`
--

DROP TABLE IF EXISTS `tapjoy`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tapjoy` (
  `id` int(10) unsigned DEFAULT NULL,
  `created_date` timestamp NULL DEFAULT NULL,
  `updated_date` timestamp NULL DEFAULT NULL,
  `tapjoy_id` tinytext DEFAULT NULL,
  `user_id` int(10) unsigned DEFAULT NULL,
  `payment_type` tinytext DEFAULT NULL,
  `amount` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tapjoy`
--

LOCK TABLES `tapjoy` WRITE;
/*!40000 ALTER TABLE `tapjoy` DISABLE KEYS */;
INSERT INTO `tapjoy` VALUES (NULL,NULL,NULL,'tapjoy_id_',583,'coins',1);
/*!40000 ALTER TABLE `tapjoy` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `user`
--

DROP TABLE IF EXISTS `user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(55) COLLATE utf8mb4_unicode_ci NOT NULL,
  `email` varchar(50) COLLATE utf8mb4_unicode_ci DEFAULT 'NULL',
  `password` varchar(155) COLLATE utf8mb4_unicode_ci NOT NULL,
  `device_id` int(11) DEFAULT NULL,
  `created_at` datetime DEFAULT current_timestamp(),
  `modified_at` datetime DEFAULT current_timestamp(),
  `isDev` tinyint(1) DEFAULT 0,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `user`
--

LOCK TABLES `user` WRITE;
/*!40000 ALTER TABLE `user` DISABLE KEYS */;
INSERT INTO `user` VALUES (1,'JP','jpsala@gmail.com','lani0363',NULL,'2020-06-16 10:12:45','2020-06-16 10:12:45',1),(2,'Marcos','mail@novack.com.ar','wopimarcos',NULL,'2020-06-16 10:13:03','2020-06-16 10:13:03',1),(3,'Rodrigo','rlaiz@wopidom.com','wopirodrigo',NULL,'2020-08-03 13:48:06','2020-08-03 13:48:06',1);
/*!40000 ALTER TABLE `user` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `user_on_connect`
--

DROP TABLE IF EXISTS `user_on_connect`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user_on_connect` (
  `id` int(10) unsigned DEFAULT NULL,
  `game_user_id` int(10) unsigned DEFAULT NULL,
  `jsonMsg` varchar(4369) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `user_on_connect`
--

LOCK TABLES `user_on_connect` WRITE;
/*!40000 ALTER TABLE `user_on_connect` DISABLE KEYS */;
INSERT INTO `user_on_connect` VALUES (NULL,609,'{\"code\":200,\"message\":\"OK\",\"msgType\":\"adReward\",\"payload\":{\"type\":\"coin\",\"amount\":1}}'),(NULL,609,'{\"code\":200,\"message\":\"OK\",\"msgType\":\"adReward\",\"payload\":{\"type\":\"coin\",\"amount\":1}}'),(NULL,609,'{\"code\":200,\"message\":\"OK\",\"msgType\":\"adReward\",\"payload\":{\"type\":\"coin\",\"amount\":1}}'),(NULL,609,'{\"code\":200,\"message\":\"OK\",\"msgType\":\"adReward\",\"payload\":{\"type\":\"spin\",\"amount\":\"2\"}}'),(NULL,609,'{\"code\":200,\"message\":\"OK\",\"msgType\":\"adReward\",\"payload\":{\"type\":\"spin\",\"amount\":\"2\"}}'),(NULL,609,'{\"code\":200,\"message\":\"OK\",\"msgType\":\"adReward\",\"payload\":{\"type\":\"spin\",\"amount\":\"2\"}}'),(NULL,609,'{\"code\":200,\"message\":\"OK\",\"msgType\":\"adReward\",\"payload\":{\"type\":\"coin\",\"amount\":1}}'),(NULL,609,'{\"code\":200,\"message\":\"OK\",\"msgType\":\"adReward\",\"payload\":{\"type\":\"coin\",\"amount\":1}}'),(NULL,609,'{\"code\":200,\"message\":\"OK\",\"msgType\":\"adReward\",\"payload\":{\"type\":\"spin\",\"amount\":\"2\"}}'),(NULL,609,'{\"code\":200,\"message\":\"OK\",\"msgType\":\"adReward\",\"payload\":{\"type\":\"spin\",\"amount\":\"2\"}}'),(NULL,641,'{\"code\":200,\"message\":\"OK\",\"msgType\":\"adReward\",\"payload\":{\"type\":\"coin\",\"amount\":1}}'),(NULL,609,'{\"code\":200,\"message\":\"OK\",\"msgType\":\"adReward\",\"payload\":{\"type\":\"spin\",\"amount\":\"2\"}}'),(NULL,39,'{\"code\":200,\"message\":\"OK\",\"msgType\":\"adReward\",\"payload\":{\"type\":\"spin\",\"currency\":\"100\"}}'),(NULL,39,'{\"code\":200,\"message\":\"OK\",\"msgType\":\"adReward\",\"payload\":{\"type\":\"spin\",\"currency\":\"100\"}}');
/*!40000 ALTER TABLE `user_on_connect` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wallet`
--

DROP TABLE IF EXISTS `wallet`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wallet` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `game_user_id` int(10) unsigned NOT NULL,
  `coins` int(11) NOT NULL,
  `tickets` int(11) NOT NULL,
  `spins` int(11) DEFAULT 0,
  PRIMARY KEY (`id`),
  KEY `FK_wallet_game_user_id` (`game_user_id`),
  CONSTRAINT `FK_wallet_game_user_id` FOREIGN KEY (`game_user_id`) REFERENCES `game_user` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=665 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wallet`
--

LOCK TABLES `wallet` WRITE;
/*!40000 ALTER TABLE `wallet` DISABLE KEYS */;
INSERT INTO `wallet` VALUES (20,40,1820,368,20),(21,41,20,370,20),(22,42,20,372,20),(47,67,20,372,20),(53,73,20,372,20),(88,108,20,372,20),(89,109,20,372,20),(90,110,20,372,20),(91,111,20,372,20),(138,39,1228,183,2782),(577,579,1290,370,20),(578,580,20,372,20),(579,581,20,372,20),(580,582,13550,372,20),(581,583,187209,95,20),(582,584,20,372,20),(583,585,840,372,20),(584,586,20,372,20),(585,587,3322,25,74),(586,588,20,372,20),(587,589,10020,372,20),(588,590,20,372,20),(589,591,20,372,20),(590,592,20,372,20),(591,593,3510,95,20),(592,594,20,372,20),(593,595,20,372,20),(594,596,3140,392,20),(595,597,20,372,20),(596,598,20,372,20),(597,599,20,372,20),(598,600,7920,386,20),(599,601,12520,372,20),(600,602,20,372,20),(601,603,20,372,20),(602,604,20,372,20),(603,605,20,372,20),(604,606,20,372,20),(605,607,20,372,20),(606,608,20,372,20),(607,609,90891,55,52),(608,610,207574,83,322),(609,611,850,55,20),(610,612,7110,444,444),(611,613,85440,5,127),(612,614,20938,50,20),(613,615,10,10,20),(614,616,210,20,20),(615,617,5410,10,20),(616,618,1210,14,20),(617,619,10,10,20),(618,620,10,10,20),(619,621,5010,10,20),(620,622,10,10,20),(621,623,10,10,20),(622,624,10010,10,20),(623,625,22710,17,20),(624,626,10,10,20),(625,627,5010,10,20),(626,628,5010,10,20),(627,629,10010,10,20),(628,630,5010,10,20),(629,631,24010,20,40),(630,632,10,10,20),(631,633,10,10,20),(632,634,9610,10,20),(633,635,5010,10,20),(634,636,5010,10,20),(635,637,5010,10,20),(636,638,5010,10,20),(637,639,10,10,20),(638,640,10,10,20),(639,641,16612,15,20),(640,642,10,10,20),(641,643,10,10,20),(642,644,10,10,20),(643,645,10,10,20),(644,646,2300,10,20),(645,647,100,10,20),(646,648,100,10,20),(647,649,100,10,20),(648,650,18600,25,20),(649,651,100,10,20),(650,652,2700,10,20),(651,653,100,10,20),(652,654,12600,20,46),(653,655,1900,10,20),(654,656,18900,10,20),(655,657,18700,20,20),(656,658,1300,10,20),(657,659,5100,10,20),(658,660,100,10,20),(659,661,5100,10,20),(660,662,5100,10,20),(661,663,6400,20,20),(662,664,100,10,20),(663,665,100,10,20),(664,666,100,10,20);
/*!40000 ALTER TABLE `wallet` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Dumping routines for database 'wopidom'
--
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2020-12-01 10:30:21
SET foreign_key_checks=0;SET unique_checks=0;COMMIT;
SET foreign_key_checks=0;SET unique_checks=0;COMMIT;
